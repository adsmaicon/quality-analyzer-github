{"repository": {"id": 220809393, "node_id": "MDEwOlJlcG9zaXRvcnkyMjA4MDkzOTM=", "name": "rich", "full_name": "Textualize/rich", "private": false, "owner": {"login": "Textualize", "id": 93378883, "node_id": "O_kgDOBZDZQw", "avatar_url": "https://avatars.githubusercontent.com/u/93378883?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Textualize", "html_url": "https://github.com/Textualize", "followers_url": "https://api.github.com/users/Textualize/followers", "following_url": "https://api.github.com/users/Textualize/following{/other_user}", "gists_url": "https://api.github.com/users/Textualize/gists{/gist_id}", "starred_url": "https://api.github.com/users/Textualize/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Textualize/subscriptions", "organizations_url": "https://api.github.com/users/Textualize/orgs", "repos_url": "https://api.github.com/users/Textualize/repos", "events_url": "https://api.github.com/users/Textualize/events{/privacy}", "received_events_url": "https://api.github.com/users/Textualize/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/Textualize/rich", "description": "Rich is a Python library for rich text and beautiful formatting in the terminal.", "fork": false, "url": "https://api.github.com/repos/Textualize/rich", "forks_url": "https://api.github.com/repos/Textualize/rich/forks", "keys_url": "https://api.github.com/repos/Textualize/rich/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/Textualize/rich/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/Textualize/rich/teams", "hooks_url": "https://api.github.com/repos/Textualize/rich/hooks", "issue_events_url": "https://api.github.com/repos/Textualize/rich/issues/events{/number}", "events_url": "https://api.github.com/repos/Textualize/rich/events", "assignees_url": "https://api.github.com/repos/Textualize/rich/assignees{/user}", "branches_url": "https://api.github.com/repos/Textualize/rich/branches{/branch}", "tags_url": "https://api.github.com/repos/Textualize/rich/tags", "blobs_url": "https://api.github.com/repos/Textualize/rich/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/Textualize/rich/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/Textualize/rich/git/refs{/sha}", "trees_url": "https://api.github.com/repos/Textualize/rich/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/Textualize/rich/statuses/{sha}", "languages_url": "https://api.github.com/repos/Textualize/rich/languages", "stargazers_url": "https://api.github.com/repos/Textualize/rich/stargazers", "contributors_url": "https://api.github.com/repos/Textualize/rich/contributors", "subscribers_url": "https://api.github.com/repos/Textualize/rich/subscribers", "subscription_url": "https://api.github.com/repos/Textualize/rich/subscription", "commits_url": "https://api.github.com/repos/Textualize/rich/commits{/sha}", "git_commits_url": "https://api.github.com/repos/Textualize/rich/git/commits{/sha}", "comments_url": "https://api.github.com/repos/Textualize/rich/comments{/number}", "issue_comment_url": "https://api.github.com/repos/Textualize/rich/issues/comments{/number}", "contents_url": "https://api.github.com/repos/Textualize/rich/contents/{+path}", "compare_url": "https://api.github.com/repos/Textualize/rich/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/Textualize/rich/merges", "archive_url": "https://api.github.com/repos/Textualize/rich/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/Textualize/rich/downloads", "issues_url": "https://api.github.com/repos/Textualize/rich/issues{/number}", "pulls_url": "https://api.github.com/repos/Textualize/rich/pulls{/number}", "milestones_url": "https://api.github.com/repos/Textualize/rich/milestones{/number}", "notifications_url": "https://api.github.com/repos/Textualize/rich/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/Textualize/rich/labels{/name}", "releases_url": "https://api.github.com/repos/Textualize/rich/releases{/id}", "deployments_url": "https://api.github.com/repos/Textualize/rich/deployments", "created_at": "2019-11-10T15:28:09Z", "updated_at": "2022-03-31T01:06:34Z", "pushed_at": "2022-03-30T14:19:28Z", "git_url": "git://github.com/Textualize/rich.git", "ssh_url": "git@github.com:Textualize/rich.git", "clone_url": "https://github.com/Textualize/rich.git", "svn_url": "https://github.com/Textualize/rich", "homepage": "https://rich.readthedocs.io/en/latest/", "size": 48072, "stargazers_count": 36126, "watchers_count": 36126, "language": "Python", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 1180, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 39, "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit", "node_id": "MDc6TGljZW5zZTEz"}, "allow_forking": true, "is_template": false, "topics": ["ansi-colors", "emoji", "markdown", "progress-bar", "progress-bar-python", "python", "python-library", "python3", "rich", "syntax-highlighting", "tables", "terminal", "terminal-color", "traceback", "tracebacks-rich"], "visibility": "public", "forks": 1180, "open_issues": 39, "watchers": 36126, "default_branch": "master", "score": 1.0}, "pull_requests": [{"url": "https://api.github.com/repos/Textualize/rich/pulls/2138", "id": 896192760, "node_id": "PR_kwDODSlIsc41atD4", "html_url": "https://github.com/Textualize/rich/pull/2138", "diff_url": "https://github.com/Textualize/rich/pull/2138.diff", "patch_url": "https://github.com/Textualize/rich/pull/2138.patch", "issue_url": "https://api.github.com/repos/Textualize/rich/issues/2138", "number": 2138, "state": "open", "locked": false, "title": "typo fix", "user": {"login": "akettmann-e24", "id": 50422880, "node_id": "MDQ6VXNlcjUwNDIyODgw", "avatar_url": "https://avatars.githubusercontent.com/u/50422880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akettmann-e24", "html_url": "https://github.com/akettmann-e24", "followers_url": "https://api.github.com/users/akettmann-e24/followers", "following_url": "https://api.github.com/users/akettmann-e24/following{/other_user}", "gists_url": "https://api.github.com/users/akettmann-e24/gists{/gist_id}", "starred_url": "https://api.github.com/users/akettmann-e24/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akettmann-e24/subscriptions", "organizations_url": "https://api.github.com/users/akettmann-e24/orgs", "repos_url": "https://api.github.com/users/akettmann-e24/repos", "events_url": "https://api.github.com/users/akettmann-e24/events{/privacy}", "received_events_url": "https://api.github.com/users/akettmann-e24/received_events", "type": "User", "site_admin": false}, "body": "Typo fix", "created_at": "2022-03-31T17:58:24Z", "updated_at": "2022-03-31T17:59:27Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "2f602c21d2024a997d6faeda4c90dbf12b549a13", "assignee": null, "assignees": [], "requested_reviewers": [], "requested_teams": [], "labels": [], "milestone": null, "draft": false, "commits_url": "https://api.github.com/repos/Textualize/rich/pulls/2138/commits", "review_comments_url": "https://api.github.com/repos/Textualize/rich/pulls/2138/comments", "review_comment_url": "https://api.github.com/repos/Textualize/rich/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/Textualize/rich/issues/2138/comments", "statuses_url": "https://api.github.com/repos/Textualize/rich/statuses/440c660d1f96f1862664fd829c2e25fea096125c", "head": {"label": "akettmann-e24:typo-fix", "ref": "typo-fix", "sha": "440c660d1f96f1862664fd829c2e25fea096125c", "user": {"login": "akettmann-e24", "id": 50422880, "node_id": "MDQ6VXNlcjUwNDIyODgw", "avatar_url": "https://avatars.githubusercontent.com/u/50422880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akettmann-e24", "html_url": "https://github.com/akettmann-e24", "followers_url": "https://api.github.com/users/akettmann-e24/followers", "following_url": "https://api.github.com/users/akettmann-e24/following{/other_user}", "gists_url": "https://api.github.com/users/akettmann-e24/gists{/gist_id}", "starred_url": "https://api.github.com/users/akettmann-e24/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akettmann-e24/subscriptions", "organizations_url": "https://api.github.com/users/akettmann-e24/orgs", "repos_url": "https://api.github.com/users/akettmann-e24/repos", "events_url": "https://api.github.com/users/akettmann-e24/events{/privacy}", "received_events_url": "https://api.github.com/users/akettmann-e24/received_events", "type": "User", "site_admin": false}, "repo": {"id": 417189072, "node_id": "R_kgDOGN3M0A", "name": "rich", "full_name": "akettmann-e24/rich", "private": false, "owner": {"login": "akettmann-e24", "id": 50422880, "node_id": "MDQ6VXNlcjUwNDIyODgw", "avatar_url": "https://avatars.githubusercontent.com/u/50422880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akettmann-e24", "html_url": "https://github.com/akettmann-e24", "followers_url": "https://api.github.com/users/akettmann-e24/followers", "following_url": "https://api.github.com/users/akettmann-e24/following{/other_user}", "gists_url": "https://api.github.com/users/akettmann-e24/gists{/gist_id}", "starred_url": "https://api.github.com/users/akettmann-e24/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akettmann-e24/subscriptions", "organizations_url": "https://api.github.com/users/akettmann-e24/orgs", "repos_url": "https://api.github.com/users/akettmann-e24/repos", "events_url": "https://api.github.com/users/akettmann-e24/events{/privacy}", "received_events_url": "https://api.github.com/users/akettmann-e24/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/akettmann-e24/rich", "description": "Rich is a Python library for rich text and beautiful formatting in the terminal.", "fork": true, "url": "https://api.github.com/repos/akettmann-e24/rich", "forks_url": "https://api.github.com/repos/akettmann-e24/rich/forks", "keys_url": "https://api.github.com/repos/akettmann-e24/rich/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/akettmann-e24/rich/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/akettmann-e24/rich/teams", "hooks_url": "https://api.github.com/repos/akettmann-e24/rich/hooks", "issue_events_url": "https://api.github.com/repos/akettmann-e24/rich/issues/events{/number}", "events_url": "https://api.github.com/repos/akettmann-e24/rich/events", "assignees_url": "https://api.github.com/repos/akettmann-e24/rich/assignees{/user}", "branches_url": "https://api.github.com/repos/akettmann-e24/rich/branches{/branch}", "tags_url": "https://api.github.com/repos/akettmann-e24/rich/tags", "blobs_url": "https://api.github.com/repos/akettmann-e24/rich/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/akettmann-e24/rich/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/akettmann-e24/rich/git/refs{/sha}", "trees_url": "https://api.github.com/repos/akettmann-e24/rich/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/akettmann-e24/rich/statuses/{sha}", "languages_url": "https://api.github.com/repos/akettmann-e24/rich/languages", "stargazers_url": "https://api.github.com/repos/akettmann-e24/rich/stargazers", "contributors_url": "https://api.github.com/repos/akettmann-e24/rich/contributors", "subscribers_url": "https://api.github.com/repos/akettmann-e24/rich/subscribers", "subscription_url": "https://api.github.com/repos/akettmann-e24/rich/subscription", "commits_url": "https://api.github.com/repos/akettmann-e24/rich/commits{/sha}", "git_commits_url": "https://api.github.com/repos/akettmann-e24/rich/git/commits{/sha}", "comments_url": "https://api.github.com/repos/akettmann-e24/rich/comments{/number}", "issue_comment_url": "https://api.github.com/repos/akettmann-e24/rich/issues/comments{/number}", "contents_url": "https://api.github.com/repos/akettmann-e24/rich/contents/{+path}", "compare_url": "https://api.github.com/repos/akettmann-e24/rich/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/akettmann-e24/rich/merges", "archive_url": "https://api.github.com/repos/akettmann-e24/rich/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/akettmann-e24/rich/downloads", "issues_url": "https://api.github.com/repos/akettmann-e24/rich/issues{/number}", "pulls_url": "https://api.github.com/repos/akettmann-e24/rich/pulls{/number}", "milestones_url": "https://api.github.com/repos/akettmann-e24/rich/milestones{/number}", "notifications_url": "https://api.github.com/repos/akettmann-e24/rich/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/akettmann-e24/rich/labels{/name}", "releases_url": "https://api.github.com/repos/akettmann-e24/rich/releases{/id}", "deployments_url": "https://api.github.com/repos/akettmann-e24/rich/deployments", "created_at": "2021-10-14T15:42:25Z", "updated_at": "2022-01-05T10:58:26Z", "pushed_at": "2022-03-31T17:58:23Z", "git_url": "git://github.com/akettmann-e24/rich.git", "ssh_url": "git@github.com:akettmann-e24/rich.git", "clone_url": "https://github.com/akettmann-e24/rich.git", "svn_url": "https://github.com/akettmann-e24/rich", "homepage": "https://rich.readthedocs.io/en/latest/", "size": 47713, "stargazers_count": 0, "watchers_count": 0, "language": null, "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 0, "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit", "node_id": "MDc6TGljZW5zZTEz"}, "allow_forking": true, "is_template": false, "topics": [], "visibility": "public", "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "Textualize:master", "ref": "master", "sha": "3f619757edddfc8f00e95ecb3619a9037087d6a1", "user": {"login": "Textualize", "id": 93378883, "node_id": "O_kgDOBZDZQw", "avatar_url": "https://avatars.githubusercontent.com/u/93378883?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Textualize", "html_url": "https://github.com/Textualize", "followers_url": "https://api.github.com/users/Textualize/followers", "following_url": "https://api.github.com/users/Textualize/following{/other_user}", "gists_url": "https://api.github.com/users/Textualize/gists{/gist_id}", "starred_url": "https://api.github.com/users/Textualize/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Textualize/subscriptions", "organizations_url": "https://api.github.com/users/Textualize/orgs", "repos_url": "https://api.github.com/users/Textualize/repos", "events_url": "https://api.github.com/users/Textualize/events{/privacy}", "received_events_url": "https://api.github.com/users/Textualize/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 220809393, "node_id": "MDEwOlJlcG9zaXRvcnkyMjA4MDkzOTM=", "name": "rich", "full_name": "Textualize/rich", "private": false, "owner": {"login": "Textualize", "id": 93378883, "node_id": "O_kgDOBZDZQw", "avatar_url": "https://avatars.githubusercontent.com/u/93378883?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Textualize", "html_url": "https://github.com/Textualize", "followers_url": "https://api.github.com/users/Textualize/followers", "following_url": "https://api.github.com/users/Textualize/following{/other_user}", "gists_url": "https://api.github.com/users/Textualize/gists{/gist_id}", "starred_url": "https://api.github.com/users/Textualize/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Textualize/subscriptions", "organizations_url": "https://api.github.com/users/Textualize/orgs", "repos_url": "https://api.github.com/users/Textualize/repos", "events_url": "https://api.github.com/users/Textualize/events{/privacy}", "received_events_url": "https://api.github.com/users/Textualize/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/Textualize/rich", "description": "Rich is a Python library for rich text and beautiful formatting in the terminal.", "fork": false, "url": "https://api.github.com/repos/Textualize/rich", "forks_url": "https://api.github.com/repos/Textualize/rich/forks", "keys_url": "https://api.github.com/repos/Textualize/rich/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/Textualize/rich/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/Textualize/rich/teams", "hooks_url": "https://api.github.com/repos/Textualize/rich/hooks", "issue_events_url": "https://api.github.com/repos/Textualize/rich/issues/events{/number}", "events_url": "https://api.github.com/repos/Textualize/rich/events", "assignees_url": "https://api.github.com/repos/Textualize/rich/assignees{/user}", "branches_url": "https://api.github.com/repos/Textualize/rich/branches{/branch}", "tags_url": "https://api.github.com/repos/Textualize/rich/tags", "blobs_url": "https://api.github.com/repos/Textualize/rich/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/Textualize/rich/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/Textualize/rich/git/refs{/sha}", "trees_url": "https://api.github.com/repos/Textualize/rich/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/Textualize/rich/statuses/{sha}", "languages_url": "https://api.github.com/repos/Textualize/rich/languages", "stargazers_url": "https://api.github.com/repos/Textualize/rich/stargazers", "contributors_url": "https://api.github.com/repos/Textualize/rich/contributors", "subscribers_url": "https://api.github.com/repos/Textualize/rich/subscribers", "subscription_url": "https://api.github.com/repos/Textualize/rich/subscription", "commits_url": "https://api.github.com/repos/Textualize/rich/commits{/sha}", "git_commits_url": "https://api.github.com/repos/Textualize/rich/git/commits{/sha}", "comments_url": "https://api.github.com/repos/Textualize/rich/comments{/number}", "issue_comment_url": "https://api.github.com/repos/Textualize/rich/issues/comments{/number}", "contents_url": "https://api.github.com/repos/Textualize/rich/contents/{+path}", "compare_url": "https://api.github.com/repos/Textualize/rich/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/Textualize/rich/merges", "archive_url": "https://api.github.com/repos/Textualize/rich/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/Textualize/rich/downloads", "issues_url": "https://api.github.com/repos/Textualize/rich/issues{/number}", "pulls_url": "https://api.github.com/repos/Textualize/rich/pulls{/number}", "milestones_url": "https://api.github.com/repos/Textualize/rich/milestones{/number}", "notifications_url": "https://api.github.com/repos/Textualize/rich/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/Textualize/rich/labels{/name}", "releases_url": "https://api.github.com/repos/Textualize/rich/releases{/id}", "deployments_url": "https://api.github.com/repos/Textualize/rich/deployments", "created_at": "2019-11-10T15:28:09Z", "updated_at": "2022-03-31T21:04:50Z", "pushed_at": "2022-03-31T17:58:25Z", "git_url": "git://github.com/Textualize/rich.git", "ssh_url": "git@github.com:Textualize/rich.git", "clone_url": "https://github.com/Textualize/rich.git", "svn_url": "https://github.com/Textualize/rich", "homepage": "https://rich.readthedocs.io/en/latest/", "size": 48072, "stargazers_count": 36147, "watchers_count": 36147, "language": "Python", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 1180, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 42, "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit", "node_id": "MDc6TGljZW5zZTEz"}, "allow_forking": true, "is_template": false, "topics": ["ansi-colors", "emoji", "markdown", "progress-bar", "progress-bar-python", "python", "python-library", "python3", "rich", "syntax-highlighting", "tables", "terminal", "terminal-color", "traceback", "tracebacks-rich"], "visibility": "public", "forks": 1180, "open_issues": 42, "watchers": 36147, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/Textualize/rich/pulls/2138"}, "html": {"href": "https://github.com/Textualize/rich/pull/2138"}, "issue": {"href": "https://api.github.com/repos/Textualize/rich/issues/2138"}, "comments": {"href": "https://api.github.com/repos/Textualize/rich/issues/2138/comments"}, "review_comments": {"href": "https://api.github.com/repos/Textualize/rich/pulls/2138/comments"}, "review_comment": {"href": "https://api.github.com/repos/Textualize/rich/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/Textualize/rich/pulls/2138/commits"}, "statuses": {"href": "https://api.github.com/repos/Textualize/rich/statuses/440c660d1f96f1862664fd829c2e25fea096125c"}}, "author_association": "CONTRIBUTOR", "auto_merge": null, "active_lock_reason": null}, {"url": "https://api.github.com/repos/Textualize/rich/pulls/2133", "id": 894317177, "node_id": "PR_kwDODSlIsc41TjJ5", "html_url": "https://github.com/Textualize/rich/pull/2133", "diff_url": "https://github.com/Textualize/rich/pull/2133.diff", "patch_url": "https://github.com/Textualize/rich/pull/2133.patch", "issue_url": "https://api.github.com/repos/Textualize/rich/issues/2133", "number": 2133, "state": "open", "locked": false, "title": "Fallback to text lexer when lexer not found", "user": {"login": "darrenburns", "id": 5740731, "node_id": "MDQ6VXNlcjU3NDA3MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/5740731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darrenburns", "html_url": "https://github.com/darrenburns", "followers_url": "https://api.github.com/users/darrenburns/followers", "following_url": "https://api.github.com/users/darrenburns/following{/other_user}", "gists_url": "https://api.github.com/users/darrenburns/gists{/gist_id}", "starred_url": "https://api.github.com/users/darrenburns/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darrenburns/subscriptions", "organizations_url": "https://api.github.com/users/darrenburns/orgs", "repos_url": "https://api.github.com/users/darrenburns/repos", "events_url": "https://api.github.com/users/darrenburns/events{/privacy}", "received_events_url": "https://api.github.com/users/darrenburns/received_events", "type": "User", "site_admin": false}, "body": "## Type of changes\r\n\r\n- [x] Bug fix\r\n- [ ] New feature\r\n- [ ] Documentation / docstrings\r\n- [ ] Tests\r\n- [ ] Other\r\n\r\n## Checklist\r\n\r\n- [x] I've run the latest [black](https://github.com/psf/black) with default args on new code.\r\n- [x] I've updated CHANGELOG.md and CONTRIBUTORS.md where appropriate.\r\n- [x] I've added tests for new code.\r\n- [x] I accept that @willmcgugan may be pedantic in the code review.\r\n\r\n## Description\r\n\r\nCatches an exception raised inside pygments by `guess_lexer_for_filename` in the event that no lexer could be found. When this happens, we now fall back to the `TextLexer`.\r\n\r\nCloses #2018\r\n\r\n", "created_at": "2022-03-30T11:28:30Z", "updated_at": "2022-03-30T11:34:39Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "dd475fbe9a82c15a456c296743dac4d3ab40be7a", "assignee": null, "assignees": [], "requested_reviewers": [{"login": "willmcgugan", "id": 554369, "node_id": "MDQ6VXNlcjU1NDM2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/554369?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willmcgugan", "html_url": "https://github.com/willmcgugan", "followers_url": "https://api.github.com/users/willmcgugan/followers", "following_url": "https://api.github.com/users/willmcgugan/following{/other_user}", "gists_url": "https://api.github.com/users/willmcgugan/gists{/gist_id}", "starred_url": "https://api.github.com/users/willmcgugan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willmcgugan/subscriptions", "organizations_url": "https://api.github.com/users/willmcgugan/orgs", "repos_url": "https://api.github.com/users/willmcgugan/repos", "events_url": "https://api.github.com/users/willmcgugan/events{/privacy}", "received_events_url": "https://api.github.com/users/willmcgugan/received_events", "type": "User", "site_admin": false}], "requested_teams": [], "labels": [], "milestone": null, "draft": false, "commits_url": "https://api.github.com/repos/Textualize/rich/pulls/2133/commits", "review_comments_url": "https://api.github.com/repos/Textualize/rich/pulls/2133/comments", "review_comment_url": "https://api.github.com/repos/Textualize/rich/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/Textualize/rich/issues/2133/comments", "statuses_url": "https://api.github.com/repos/Textualize/rich/statuses/b7777936f5769f243b1700f3e0d45e7d76e9ac4f", "head": {"label": "Textualize:lexer-not-found-fix", "ref": "lexer-not-found-fix", "sha": "b7777936f5769f243b1700f3e0d45e7d76e9ac4f", "user": {"login": "Textualize", "id": 93378883, "node_id": "O_kgDOBZDZQw", "avatar_url": "https://avatars.githubusercontent.com/u/93378883?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Textualize", "html_url": "https://github.com/Textualize", "followers_url": "https://api.github.com/users/Textualize/followers", "following_url": "https://api.github.com/users/Textualize/following{/other_user}", "gists_url": "https://api.github.com/users/Textualize/gists{/gist_id}", "starred_url": "https://api.github.com/users/Textualize/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Textualize/subscriptions", "organizations_url": "https://api.github.com/users/Textualize/orgs", "repos_url": "https://api.github.com/users/Textualize/repos", "events_url": "https://api.github.com/users/Textualize/events{/privacy}", "received_events_url": "https://api.github.com/users/Textualize/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 220809393, "node_id": "MDEwOlJlcG9zaXRvcnkyMjA4MDkzOTM=", "name": "rich", "full_name": "Textualize/rich", "private": false, "owner": {"login": "Textualize", "id": 93378883, "node_id": "O_kgDOBZDZQw", "avatar_url": "https://avatars.githubusercontent.com/u/93378883?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Textualize", "html_url": "https://github.com/Textualize", "followers_url": "https://api.github.com/users/Textualize/followers", "following_url": "https://api.github.com/users/Textualize/following{/other_user}", "gists_url": "https://api.github.com/users/Textualize/gists{/gist_id}", "starred_url": "https://api.github.com/users/Textualize/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Textualize/subscriptions", "organizations_url": "https://api.github.com/users/Textualize/orgs", "repos_url": "https://api.github.com/users/Textualize/repos", "events_url": "https://api.github.com/users/Textualize/events{/privacy}", "received_events_url": "https://api.github.com/users/Textualize/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/Textualize/rich", "description": "Rich is a Python library for rich text and beautiful formatting in the terminal.", "fork": false, "url": "https://api.github.com/repos/Textualize/rich", "forks_url": "https://api.github.com/repos/Textualize/rich/forks", "keys_url": "https://api.github.com/repos/Textualize/rich/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/Textualize/rich/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/Textualize/rich/teams", "hooks_url": "https://api.github.com/repos/Textualize/rich/hooks", "issue_events_url": "https://api.github.com/repos/Textualize/rich/issues/events{/number}", "events_url": "https://api.github.com/repos/Textualize/rich/events", "assignees_url": "https://api.github.com/repos/Textualize/rich/assignees{/user}", "branches_url": "https://api.github.com/repos/Textualize/rich/branches{/branch}", "tags_url": "https://api.github.com/repos/Textualize/rich/tags", "blobs_url": "https://api.github.com/repos/Textualize/rich/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/Textualize/rich/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/Textualize/rich/git/refs{/sha}", "trees_url": "https://api.github.com/repos/Textualize/rich/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/Textualize/rich/statuses/{sha}", "languages_url": "https://api.github.com/repos/Textualize/rich/languages", "stargazers_url": "https://api.github.com/repos/Textualize/rich/stargazers", "contributors_url": "https://api.github.com/repos/Textualize/rich/contributors", "subscribers_url": "https://api.github.com/repos/Textualize/rich/subscribers", "subscription_url": "https://api.github.com/repos/Textualize/rich/subscription", "commits_url": "https://api.github.com/repos/Textualize/rich/commits{/sha}", "git_commits_url": "https://api.github.com/repos/Textualize/rich/git/commits{/sha}", "comments_url": "https://api.github.com/repos/Textualize/rich/comments{/number}", "issue_comment_url": "https://api.github.com/repos/Textualize/rich/issues/comments{/number}", "contents_url": "https://api.github.com/repos/Textualize/rich/contents/{+path}", "compare_url": "https://api.github.com/repos/Textualize/rich/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/Textualize/rich/merges", "archive_url": "https://api.github.com/repos/Textualize/rich/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/Textualize/rich/downloads", "issues_url": "https://api.github.com/repos/Textualize/rich/issues{/number}", "pulls_url": "https://api.github.com/repos/Textualize/rich/pulls{/number}", "milestones_url": "https://api.github.com/repos/Textualize/rich/milestones{/number}", "notifications_url": "https://api.github.com/repos/Textualize/rich/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/Textualize/rich/labels{/name}", "releases_url": "https://api.github.com/repos/Textualize/rich/releases{/id}", "deployments_url": "https://api.github.com/repos/Textualize/rich/deployments", "created_at": "2019-11-10T15:28:09Z", "updated_at": "2022-03-31T21:04:50Z", "pushed_at": "2022-03-31T17:58:25Z", "git_url": "git://github.com/Textualize/rich.git", "ssh_url": "git@github.com:Textualize/rich.git", "clone_url": "https://github.com/Textualize/rich.git", "svn_url": "https://github.com/Textualize/rich", "homepage": "https://rich.readthedocs.io/en/latest/", "size": 48072, "stargazers_count": 36147, "watchers_count": 36147, "language": "Python", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 1180, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 42, "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit", "node_id": "MDc6TGljZW5zZTEz"}, "allow_forking": true, "is_template": false, "topics": ["ansi-colors", "emoji", "markdown", "progress-bar", "progress-bar-python", "python", "python-library", "python3", "rich", "syntax-highlighting", "tables", "terminal", "terminal-color", "traceback", "tracebacks-rich"], "visibility": "public", "forks": 1180, "open_issues": 42, "watchers": 36147, "default_branch": "master"}}, "base": {"label": "Textualize:master", "ref": "master", "sha": "9f43cccfce3b39b8ac637b4e8cdfe2f0946e9c23", "user": {"login": "Textualize", "id": 93378883, "node_id": "O_kgDOBZDZQw", "avatar_url": "https://avatars.githubusercontent.com/u/93378883?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Textualize", "html_url": "https://github.com/Textualize", "followers_url": "https://api.github.com/users/Textualize/followers", "following_url": "https://api.github.com/users/Textualize/following{/other_user}", "gists_url": "https://api.github.com/users/Textualize/gists{/gist_id}", "starred_url": "https://api.github.com/users/Textualize/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Textualize/subscriptions", "organizations_url": "https://api.github.com/users/Textualize/orgs", "repos_url": "https://api.github.com/users/Textualize/repos", "events_url": "https://api.github.com/users/Textualize/events{/privacy}", "received_events_url": "https://api.github.com/users/Textualize/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 220809393, "node_id": "MDEwOlJlcG9zaXRvcnkyMjA4MDkzOTM=", "name": "rich", "full_name": "Textualize/rich", "private": false, "owner": {"login": "Textualize", "id": 93378883, "node_id": "O_kgDOBZDZQw", "avatar_url": "https://avatars.githubusercontent.com/u/93378883?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Textualize", "html_url": "https://github.com/Textualize", "followers_url": "https://api.github.com/users/Textualize/followers", "following_url": "https://api.github.com/users/Textualize/following{/other_user}", "gists_url": "https://api.github.com/users/Textualize/gists{/gist_id}", "starred_url": "https://api.github.com/users/Textualize/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Textualize/subscriptions", "organizations_url": "https://api.github.com/users/Textualize/orgs", "repos_url": "https://api.github.com/users/Textualize/repos", "events_url": "https://api.github.com/users/Textualize/events{/privacy}", "received_events_url": "https://api.github.com/users/Textualize/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/Textualize/rich", "description": "Rich is a Python library for rich text and beautiful formatting in the terminal.", "fork": false, "url": "https://api.github.com/repos/Textualize/rich", "forks_url": "https://api.github.com/repos/Textualize/rich/forks", "keys_url": "https://api.github.com/repos/Textualize/rich/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/Textualize/rich/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/Textualize/rich/teams", "hooks_url": "https://api.github.com/repos/Textualize/rich/hooks", "issue_events_url": "https://api.github.com/repos/Textualize/rich/issues/events{/number}", "events_url": "https://api.github.com/repos/Textualize/rich/events", "assignees_url": "https://api.github.com/repos/Textualize/rich/assignees{/user}", "branches_url": "https://api.github.com/repos/Textualize/rich/branches{/branch}", "tags_url": "https://api.github.com/repos/Textualize/rich/tags", "blobs_url": "https://api.github.com/repos/Textualize/rich/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/Textualize/rich/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/Textualize/rich/git/refs{/sha}", "trees_url": "https://api.github.com/repos/Textualize/rich/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/Textualize/rich/statuses/{sha}", "languages_url": "https://api.github.com/repos/Textualize/rich/languages", "stargazers_url": "https://api.github.com/repos/Textualize/rich/stargazers", "contributors_url": "https://api.github.com/repos/Textualize/rich/contributors", "subscribers_url": "https://api.github.com/repos/Textualize/rich/subscribers", "subscription_url": "https://api.github.com/repos/Textualize/rich/subscription", "commits_url": "https://api.github.com/repos/Textualize/rich/commits{/sha}", "git_commits_url": "https://api.github.com/repos/Textualize/rich/git/commits{/sha}", "comments_url": "https://api.github.com/repos/Textualize/rich/comments{/number}", "issue_comment_url": "https://api.github.com/repos/Textualize/rich/issues/comments{/number}", "contents_url": "https://api.github.com/repos/Textualize/rich/contents/{+path}", "compare_url": "https://api.github.com/repos/Textualize/rich/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/Textualize/rich/merges", "archive_url": "https://api.github.com/repos/Textualize/rich/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/Textualize/rich/downloads", "issues_url": "https://api.github.com/repos/Textualize/rich/issues{/number}", "pulls_url": "https://api.github.com/repos/Textualize/rich/pulls{/number}", "milestones_url": "https://api.github.com/repos/Textualize/rich/milestones{/number}", "notifications_url": "https://api.github.com/repos/Textualize/rich/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/Textualize/rich/labels{/name}", "releases_url": "https://api.github.com/repos/Textualize/rich/releases{/id}", "deployments_url": "https://api.github.com/repos/Textualize/rich/deployments", "created_at": "2019-11-10T15:28:09Z", "updated_at": "2022-03-31T21:04:50Z", "pushed_at": "2022-03-31T17:58:25Z", "git_url": "git://github.com/Textualize/rich.git", "ssh_url": "git@github.com:Textualize/rich.git", "clone_url": "https://github.com/Textualize/rich.git", "svn_url": "https://github.com/Textualize/rich", "homepage": "https://rich.readthedocs.io/en/latest/", "size": 48072, "stargazers_count": 36147, "watchers_count": 36147, "language": "Python", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 1180, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 42, "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit", "node_id": "MDc6TGljZW5zZTEz"}, "allow_forking": true, "is_template": false, "topics": ["ansi-colors", "emoji", "markdown", "progress-bar", "progress-bar-python", "python", "python-library", "python3", "rich", "syntax-highlighting", "tables", "terminal", "terminal-color", "traceback", "tracebacks-rich"], "visibility": "public", "forks": 1180, "open_issues": 42, "watchers": 36147, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/Textualize/rich/pulls/2133"}, "html": {"href": "https://github.com/Textualize/rich/pull/2133"}, "issue": {"href": "https://api.github.com/repos/Textualize/rich/issues/2133"}, "comments": {"href": "https://api.github.com/repos/Textualize/rich/issues/2133/comments"}, "review_comments": {"href": "https://api.github.com/repos/Textualize/rich/pulls/2133/comments"}, "review_comment": {"href": "https://api.github.com/repos/Textualize/rich/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/Textualize/rich/pulls/2133/commits"}, "statuses": {"href": "https://api.github.com/repos/Textualize/rich/statuses/b7777936f5769f243b1700f3e0d45e7d76e9ac4f"}}, "author_association": "COLLABORATOR", "auto_merge": null, "active_lock_reason": null}, {"url": "https://api.github.com/repos/Textualize/rich/pulls/2131", "id": 893380614, "node_id": "PR_kwDODSlIsc41P-gG", "html_url": "https://github.com/Textualize/rich/pull/2131", "diff_url": "https://github.com/Textualize/rich/pull/2131.diff", "patch_url": "https://github.com/Textualize/rich/pull/2131.patch", "issue_url": "https://api.github.com/repos/Textualize/rich/issues/2131", "number": 2131, "state": "open", "locked": false, "title": "fix(types): typing fixes exposed by extra checking", "user": {"login": "henryiii", "id": 4616906, "node_id": "MDQ6VXNlcjQ2MTY5MDY=", "avatar_url": "https://avatars.githubusercontent.com/u/4616906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/henryiii", "html_url": "https://github.com/henryiii", "followers_url": "https://api.github.com/users/henryiii/followers", "following_url": "https://api.github.com/users/henryiii/following{/other_user}", "gists_url": "https://api.github.com/users/henryiii/gists{/gist_id}", "starred_url": "https://api.github.com/users/henryiii/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/henryiii/subscriptions", "organizations_url": "https://api.github.com/users/henryiii/orgs", "repos_url": "https://api.github.com/users/henryiii/repos", "events_url": "https://api.github.com/users/henryiii/events{/privacy}", "received_events_url": "https://api.github.com/users/henryiii/received_events", "type": "User", "site_admin": false}, "body": "## Type of changes\r\n\r\n- [ ] Bug fix\r\n- [ ] New feature\r\n- [ ] Documentation / docstrings\r\n- [ ] Tests\r\n- [x] Other\r\n\r\n## Checklist\r\n\r\n- [x] I've run the latest [black](https://github.com/psf/black) with default args on new code.\r\n- [ ] I've updated CHANGELOG.md and CONTRIBUTORS.md where appropriate.\r\n- [ ] I've added tests for new code.\r\n- [x] I accept that @willmcgugan may be pedantic in the code review.\r\n\r\n## Description\r\n\r\nThis enables a few extra mypy checks, and fixes type bugs exposed by those. There were three features enabled, but I've left one off: `warn_unrachable = true`. While it is really useful, and helped expose a couple of the issues fixed here, it also requires type ignoring in about 5-7 places unavoidably, so I've left it off. The most irritating one is `if sys.platform.startswith(\"win\")` constructs, which it will notice are unreachable if you are typing targeting a different platform. MyPy might fix this in https://github.com/python/mypy/issues/12286, which would run all platforms/versions in parallel and then combine the results (which would be really fantastic!), but until then, it's likely better just to manually add `--warn-unreachable` once in a while and make sure the errors reported are expected. (Depending on your preference, of course - I've been turning it on mostly, but I usually don't have quite as many ignores due to it - I thik I counted at least 7 here. If you want to see it, let me know, and I'll PR it).\r\n\r\nI'll comment inline on the others, but this is one fix:\r\n\r\n```python\r\nx: Iterable[Any] = ...\r\nlen(x)\r\n```\r\n\r\nis invalid. You can't take the length of an iterator. Someone could correctly put an iterator function in here, and this will break. Either this should be `Sequence` (which is what I've used here), or you should iterate over the iterator and build a sequence like a list or a tuple and then use that.\r\n\r\n\r\n", "created_at": "2022-03-29T18:16:24Z", "updated_at": "2022-03-29T18:25:27Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "37457928c385b6a35c0c7e0ba16ed6a96b6ddcda", "assignee": null, "assignees": [], "requested_reviewers": [], "requested_teams": [], "labels": [], "milestone": null, "draft": false, "commits_url": "https://api.github.com/repos/Textualize/rich/pulls/2131/commits", "review_comments_url": "https://api.github.com/repos/Textualize/rich/pulls/2131/comments", "review_comment_url": "https://api.github.com/repos/Textualize/rich/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/Textualize/rich/issues/2131/comments", "statuses_url": "https://api.github.com/repos/Textualize/rich/statuses/d42a6da016599abc3d52ea32f4495eefac0af537", "head": {"label": "henryiii:henryiii/chore/mypy7", "ref": "henryiii/chore/mypy7", "sha": "d42a6da016599abc3d52ea32f4495eefac0af537", "user": {"login": "henryiii", "id": 4616906, "node_id": "MDQ6VXNlcjQ2MTY5MDY=", "avatar_url": "https://avatars.githubusercontent.com/u/4616906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/henryiii", "html_url": "https://github.com/henryiii", "followers_url": "https://api.github.com/users/henryiii/followers", "following_url": "https://api.github.com/users/henryiii/following{/other_user}", "gists_url": "https://api.github.com/users/henryiii/gists{/gist_id}", "starred_url": "https://api.github.com/users/henryiii/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/henryiii/subscriptions", "organizations_url": "https://api.github.com/users/henryiii/orgs", "repos_url": "https://api.github.com/users/henryiii/repos", "events_url": "https://api.github.com/users/henryiii/events{/privacy}", "received_events_url": "https://api.github.com/users/henryiii/received_events", "type": "User", "site_admin": false}, "repo": {"id": 471462082, "node_id": "R_kgDOHBnwwg", "name": "rich", "full_name": "henryiii/rich", "private": false, "owner": {"login": "henryiii", "id": 4616906, "node_id": "MDQ6VXNlcjQ2MTY5MDY=", "avatar_url": "https://avatars.githubusercontent.com/u/4616906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/henryiii", "html_url": "https://github.com/henryiii", "followers_url": "https://api.github.com/users/henryiii/followers", "following_url": "https://api.github.com/users/henryiii/following{/other_user}", "gists_url": "https://api.github.com/users/henryiii/gists{/gist_id}", "starred_url": "https://api.github.com/users/henryiii/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/henryiii/subscriptions", "organizations_url": "https://api.github.com/users/henryiii/orgs", "repos_url": "https://api.github.com/users/henryiii/repos", "events_url": "https://api.github.com/users/henryiii/events{/privacy}", "received_events_url": "https://api.github.com/users/henryiii/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/henryiii/rich", "description": "Rich is a Python library for rich text and beautiful formatting in the terminal.", "fork": true, "url": "https://api.github.com/repos/henryiii/rich", "forks_url": "https://api.github.com/repos/henryiii/rich/forks", "keys_url": "https://api.github.com/repos/henryiii/rich/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/henryiii/rich/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/henryiii/rich/teams", "hooks_url": "https://api.github.com/repos/henryiii/rich/hooks", "issue_events_url": "https://api.github.com/repos/henryiii/rich/issues/events{/number}", "events_url": "https://api.github.com/repos/henryiii/rich/events", "assignees_url": "https://api.github.com/repos/henryiii/rich/assignees{/user}", "branches_url": "https://api.github.com/repos/henryiii/rich/branches{/branch}", "tags_url": "https://api.github.com/repos/henryiii/rich/tags", "blobs_url": "https://api.github.com/repos/henryiii/rich/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/henryiii/rich/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/henryiii/rich/git/refs{/sha}", "trees_url": "https://api.github.com/repos/henryiii/rich/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/henryiii/rich/statuses/{sha}", "languages_url": "https://api.github.com/repos/henryiii/rich/languages", "stargazers_url": "https://api.github.com/repos/henryiii/rich/stargazers", "contributors_url": "https://api.github.com/repos/henryiii/rich/contributors", "subscribers_url": "https://api.github.com/repos/henryiii/rich/subscribers", "subscription_url": "https://api.github.com/repos/henryiii/rich/subscription", "commits_url": "https://api.github.com/repos/henryiii/rich/commits{/sha}", "git_commits_url": "https://api.github.com/repos/henryiii/rich/git/commits{/sha}", "comments_url": "https://api.github.com/repos/henryiii/rich/comments{/number}", "issue_comment_url": "https://api.github.com/repos/henryiii/rich/issues/comments{/number}", "contents_url": "https://api.github.com/repos/henryiii/rich/contents/{+path}", "compare_url": "https://api.github.com/repos/henryiii/rich/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/henryiii/rich/merges", "archive_url": "https://api.github.com/repos/henryiii/rich/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/henryiii/rich/downloads", "issues_url": "https://api.github.com/repos/henryiii/rich/issues{/number}", "pulls_url": "https://api.github.com/repos/henryiii/rich/pulls{/number}", "milestones_url": "https://api.github.com/repos/henryiii/rich/milestones{/number}", "notifications_url": "https://api.github.com/repos/henryiii/rich/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/henryiii/rich/labels{/name}", "releases_url": "https://api.github.com/repos/henryiii/rich/releases{/id}", "deployments_url": "https://api.github.com/repos/henryiii/rich/deployments", "created_at": "2022-03-18T17:40:30Z", "updated_at": "2022-03-18T15:57:44Z", "pushed_at": "2022-03-29T18:16:23Z", "git_url": "git://github.com/henryiii/rich.git", "ssh_url": "git@github.com:henryiii/rich.git", "clone_url": "https://github.com/henryiii/rich.git", "svn_url": "https://github.com/henryiii/rich", "homepage": "https://rich.readthedocs.io/en/latest/", "size": 47993, "stargazers_count": 0, "watchers_count": 0, "language": null, "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 0, "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit", "node_id": "MDc6TGljZW5zZTEz"}, "allow_forking": true, "is_template": false, "topics": [], "visibility": "public", "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "Textualize:master", "ref": "master", "sha": "9f43cccfce3b39b8ac637b4e8cdfe2f0946e9c23", "user": {"login": "Textualize", "id": 93378883, "node_id": "O_kgDOBZDZQw", "avatar_url": "https://avatars.githubusercontent.com/u/93378883?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Textualize", "html_url": "https://github.com/Textualize", "followers_url": "https://api.github.com/users/Textualize/followers", "following_url": "https://api.github.com/users/Textualize/following{/other_user}", "gists_url": "https://api.github.com/users/Textualize/gists{/gist_id}", "starred_url": "https://api.github.com/users/Textualize/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Textualize/subscriptions", "organizations_url": "https://api.github.com/users/Textualize/orgs", "repos_url": "https://api.github.com/users/Textualize/repos", "events_url": "https://api.github.com/users/Textualize/events{/privacy}", "received_events_url": "https://api.github.com/users/Textualize/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 220809393, "node_id": "MDEwOlJlcG9zaXRvcnkyMjA4MDkzOTM=", "name": "rich", "full_name": "Textualize/rich", "private": false, "owner": {"login": "Textualize", "id": 93378883, "node_id": "O_kgDOBZDZQw", "avatar_url": "https://avatars.githubusercontent.com/u/93378883?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Textualize", "html_url": "https://github.com/Textualize", "followers_url": "https://api.github.com/users/Textualize/followers", "following_url": "https://api.github.com/users/Textualize/following{/other_user}", "gists_url": "https://api.github.com/users/Textualize/gists{/gist_id}", "starred_url": "https://api.github.com/users/Textualize/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Textualize/subscriptions", "organizations_url": "https://api.github.com/users/Textualize/orgs", "repos_url": "https://api.github.com/users/Textualize/repos", "events_url": "https://api.github.com/users/Textualize/events{/privacy}", "received_events_url": "https://api.github.com/users/Textualize/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/Textualize/rich", "description": "Rich is a Python library for rich text and beautiful formatting in the terminal.", "fork": false, "url": "https://api.github.com/repos/Textualize/rich", "forks_url": "https://api.github.com/repos/Textualize/rich/forks", "keys_url": "https://api.github.com/repos/Textualize/rich/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/Textualize/rich/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/Textualize/rich/teams", "hooks_url": "https://api.github.com/repos/Textualize/rich/hooks", "issue_events_url": "https://api.github.com/repos/Textualize/rich/issues/events{/number}", "events_url": "https://api.github.com/repos/Textualize/rich/events", "assignees_url": "https://api.github.com/repos/Textualize/rich/assignees{/user}", "branches_url": "https://api.github.com/repos/Textualize/rich/branches{/branch}", "tags_url": "https://api.github.com/repos/Textualize/rich/tags", "blobs_url": "https://api.github.com/repos/Textualize/rich/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/Textualize/rich/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/Textualize/rich/git/refs{/sha}", "trees_url": "https://api.github.com/repos/Textualize/rich/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/Textualize/rich/statuses/{sha}", "languages_url": "https://api.github.com/repos/Textualize/rich/languages", "stargazers_url": "https://api.github.com/repos/Textualize/rich/stargazers", "contributors_url": "https://api.github.com/repos/Textualize/rich/contributors", "subscribers_url": "https://api.github.com/repos/Textualize/rich/subscribers", "subscription_url": "https://api.github.com/repos/Textualize/rich/subscription", "commits_url": "https://api.github.com/repos/Textualize/rich/commits{/sha}", "git_commits_url": "https://api.github.com/repos/Textualize/rich/git/commits{/sha}", "comments_url": "https://api.github.com/repos/Textualize/rich/comments{/number}", "issue_comment_url": "https://api.github.com/repos/Textualize/rich/issues/comments{/number}", "contents_url": "https://api.github.com/repos/Textualize/rich/contents/{+path}", "compare_url": "https://api.github.com/repos/Textualize/rich/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/Textualize/rich/merges", "archive_url": "https://api.github.com/repos/Textualize/rich/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/Textualize/rich/downloads", "issues_url": "https://api.github.com/repos/Textualize/rich/issues{/number}", "pulls_url": "https://api.github.com/repos/Textualize/rich/pulls{/number}", "milestones_url": "https://api.github.com/repos/Textualize/rich/milestones{/number}", "notifications_url": "https://api.github.com/repos/Textualize/rich/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/Textualize/rich/labels{/name}", "releases_url": "https://api.github.com/repos/Textualize/rich/releases{/id}", "deployments_url": "https://api.github.com/repos/Textualize/rich/deployments", "created_at": "2019-11-10T15:28:09Z", "updated_at": "2022-03-31T21:04:50Z", "pushed_at": "2022-03-31T17:58:25Z", "git_url": "git://github.com/Textualize/rich.git", "ssh_url": "git@github.com:Textualize/rich.git", "clone_url": "https://github.com/Textualize/rich.git", "svn_url": "https://github.com/Textualize/rich", "homepage": "https://rich.readthedocs.io/en/latest/", "size": 48072, "stargazers_count": 36147, "watchers_count": 36147, "language": "Python", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 1180, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 42, "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit", "node_id": "MDc6TGljZW5zZTEz"}, "allow_forking": true, "is_template": false, "topics": ["ansi-colors", "emoji", "markdown", "progress-bar", "progress-bar-python", "python", "python-library", "python3", "rich", "syntax-highlighting", "tables", "terminal", "terminal-color", "traceback", "tracebacks-rich"], "visibility": "public", "forks": 1180, "open_issues": 42, "watchers": 36147, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/Textualize/rich/pulls/2131"}, "html": {"href": "https://github.com/Textualize/rich/pull/2131"}, "issue": {"href": "https://api.github.com/repos/Textualize/rich/issues/2131"}, "comments": {"href": "https://api.github.com/repos/Textualize/rich/issues/2131/comments"}, "review_comments": {"href": "https://api.github.com/repos/Textualize/rich/pulls/2131/comments"}, "review_comment": {"href": "https://api.github.com/repos/Textualize/rich/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/Textualize/rich/pulls/2131/commits"}, "statuses": {"href": "https://api.github.com/repos/Textualize/rich/statuses/d42a6da016599abc3d52ea32f4495eefac0af537"}}, "author_association": "CONTRIBUTOR", "auto_merge": null, "active_lock_reason": null}, {"url": "https://api.github.com/repos/Textualize/rich/pulls/2122", "id": 891087447, "node_id": "PR_kwDODSlIsc41HOpX", "html_url": "https://github.com/Textualize/rich/pull/2122", "diff_url": "https://github.com/Textualize/rich/pull/2122.diff", "patch_url": "https://github.com/Textualize/rich/pull/2122.patch", "issue_url": "https://api.github.com/repos/Textualize/rich/issues/2122", "number": 2122, "state": "open", "locked": false, "title": "Allow default Console parameters to be configured with environment variables", "user": {"login": "joouha", "id": 12154190, "node_id": "MDQ6VXNlcjEyMTU0MTkw", "avatar_url": "https://avatars.githubusercontent.com/u/12154190?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joouha", "html_url": "https://github.com/joouha", "followers_url": "https://api.github.com/users/joouha/followers", "following_url": "https://api.github.com/users/joouha/following{/other_user}", "gists_url": "https://api.github.com/users/joouha/gists{/gist_id}", "starred_url": "https://api.github.com/users/joouha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joouha/subscriptions", "organizations_url": "https://api.github.com/users/joouha/orgs", "repos_url": "https://api.github.com/users/joouha/repos", "events_url": "https://api.github.com/users/joouha/events{/privacy}", "received_events_url": "https://api.github.com/users/joouha/received_events", "type": "User", "site_admin": false}, "body": "## Type of changes\r\n\r\n- [ ] Bug fix\r\n- [x] New feature\r\n- [ ] Documentation / docstrings\r\n- [ ] Tests\r\n- [ ] Other\r\n\r\n## Checklist\r\n\r\n- [x] I've run the latest [black](https://github.com/psf/black) with default args on new code.\r\n- [x] I've updated CHANGELOG.md and CONTRIBUTORS.md where appropriate.\r\n- [x] I've added tests for new code.\r\n- [x] I accept that @willmcgugan may be pedantic in the code review.\r\n\r\n## Description\r\n\r\nThis allows the default values of the `Console` parameters `force_jupyter`, `force_terminal` & `force_interactive` to be overridden by setting the environment variables `RICH_FORCE_JUPYTER`, `RICH_FORCE_TERMINAL` & `RICH_FORCE_INTERACTIVE`.\r\n\r\nFixes issue #2119 \r\n", "created_at": "2022-03-27T17:07:51Z", "updated_at": "2022-03-28T18:51:17Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "5dc7a5e96fefe8e1d62a5a9588179b9569e183a2", "assignee": null, "assignees": [], "requested_reviewers": [], "requested_teams": [], "labels": [], "milestone": null, "draft": false, "commits_url": "https://api.github.com/repos/Textualize/rich/pulls/2122/commits", "review_comments_url": "https://api.github.com/repos/Textualize/rich/pulls/2122/comments", "review_comment_url": "https://api.github.com/repos/Textualize/rich/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/Textualize/rich/issues/2122/comments", "statuses_url": "https://api.github.com/repos/Textualize/rich/statuses/c012f3d090a268cdd358e10b35bb27f1aad29de4", "head": {"label": "joouha:console-env-defaults", "ref": "console-env-defaults", "sha": "c012f3d090a268cdd358e10b35bb27f1aad29de4", "user": {"login": "joouha", "id": 12154190, "node_id": "MDQ6VXNlcjEyMTU0MTkw", "avatar_url": "https://avatars.githubusercontent.com/u/12154190?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joouha", "html_url": "https://github.com/joouha", "followers_url": "https://api.github.com/users/joouha/followers", "following_url": "https://api.github.com/users/joouha/following{/other_user}", "gists_url": "https://api.github.com/users/joouha/gists{/gist_id}", "starred_url": "https://api.github.com/users/joouha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joouha/subscriptions", "organizations_url": "https://api.github.com/users/joouha/orgs", "repos_url": "https://api.github.com/users/joouha/repos", "events_url": "https://api.github.com/users/joouha/events{/privacy}", "received_events_url": "https://api.github.com/users/joouha/received_events", "type": "User", "site_admin": false}, "repo": {"id": 474598617, "node_id": "R_kgDOHEnM2Q", "name": "rich", "full_name": "joouha/rich", "private": false, "owner": {"login": "joouha", "id": 12154190, "node_id": "MDQ6VXNlcjEyMTU0MTkw", "avatar_url": "https://avatars.githubusercontent.com/u/12154190?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joouha", "html_url": "https://github.com/joouha", "followers_url": "https://api.github.com/users/joouha/followers", "following_url": "https://api.github.com/users/joouha/following{/other_user}", "gists_url": "https://api.github.com/users/joouha/gists{/gist_id}", "starred_url": "https://api.github.com/users/joouha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joouha/subscriptions", "organizations_url": "https://api.github.com/users/joouha/orgs", "repos_url": "https://api.github.com/users/joouha/repos", "events_url": "https://api.github.com/users/joouha/events{/privacy}", "received_events_url": "https://api.github.com/users/joouha/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/joouha/rich", "description": "Rich is a Python library for rich text and beautiful formatting in the terminal.", "fork": true, "url": "https://api.github.com/repos/joouha/rich", "forks_url": "https://api.github.com/repos/joouha/rich/forks", "keys_url": "https://api.github.com/repos/joouha/rich/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/joouha/rich/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/joouha/rich/teams", "hooks_url": "https://api.github.com/repos/joouha/rich/hooks", "issue_events_url": "https://api.github.com/repos/joouha/rich/issues/events{/number}", "events_url": "https://api.github.com/repos/joouha/rich/events", "assignees_url": "https://api.github.com/repos/joouha/rich/assignees{/user}", "branches_url": "https://api.github.com/repos/joouha/rich/branches{/branch}", "tags_url": "https://api.github.com/repos/joouha/rich/tags", "blobs_url": "https://api.github.com/repos/joouha/rich/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/joouha/rich/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/joouha/rich/git/refs{/sha}", "trees_url": "https://api.github.com/repos/joouha/rich/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/joouha/rich/statuses/{sha}", "languages_url": "https://api.github.com/repos/joouha/rich/languages", "stargazers_url": "https://api.github.com/repos/joouha/rich/stargazers", "contributors_url": "https://api.github.com/repos/joouha/rich/contributors", "subscribers_url": "https://api.github.com/repos/joouha/rich/subscribers", "subscription_url": "https://api.github.com/repos/joouha/rich/subscription", "commits_url": "https://api.github.com/repos/joouha/rich/commits{/sha}", "git_commits_url": "https://api.github.com/repos/joouha/rich/git/commits{/sha}", "comments_url": "https://api.github.com/repos/joouha/rich/comments{/number}", "issue_comment_url": "https://api.github.com/repos/joouha/rich/issues/comments{/number}", "contents_url": "https://api.github.com/repos/joouha/rich/contents/{+path}", "compare_url": "https://api.github.com/repos/joouha/rich/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/joouha/rich/merges", "archive_url": "https://api.github.com/repos/joouha/rich/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/joouha/rich/downloads", "issues_url": "https://api.github.com/repos/joouha/rich/issues{/number}", "pulls_url": "https://api.github.com/repos/joouha/rich/pulls{/number}", "milestones_url": "https://api.github.com/repos/joouha/rich/milestones{/number}", "notifications_url": "https://api.github.com/repos/joouha/rich/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/joouha/rich/labels{/name}", "releases_url": "https://api.github.com/repos/joouha/rich/releases{/id}", "deployments_url": "https://api.github.com/repos/joouha/rich/deployments", "created_at": "2022-03-27T10:02:44Z", "updated_at": "2022-03-27T09:21:49Z", "pushed_at": "2022-03-27T17:03:35Z", "git_url": "git://github.com/joouha/rich.git", "ssh_url": "git@github.com:joouha/rich.git", "clone_url": "https://github.com/joouha/rich.git", "svn_url": "https://github.com/joouha/rich", "homepage": "https://rich.readthedocs.io/en/latest/", "size": 48043, "stargazers_count": 0, "watchers_count": 0, "language": null, "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 0, "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit", "node_id": "MDc6TGljZW5zZTEz"}, "allow_forking": true, "is_template": false, "topics": [], "visibility": "public", "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "Textualize:master", "ref": "master", "sha": "fbc831ea17ba8017d6959449dd0e9928ac9b3ad0", "user": {"login": "Textualize", "id": 93378883, "node_id": "O_kgDOBZDZQw", "avatar_url": "https://avatars.githubusercontent.com/u/93378883?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Textualize", "html_url": "https://github.com/Textualize", "followers_url": "https://api.github.com/users/Textualize/followers", "following_url": "https://api.github.com/users/Textualize/following{/other_user}", "gists_url": "https://api.github.com/users/Textualize/gists{/gist_id}", "starred_url": "https://api.github.com/users/Textualize/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Textualize/subscriptions", "organizations_url": "https://api.github.com/users/Textualize/orgs", "repos_url": "https://api.github.com/users/Textualize/repos", "events_url": "https://api.github.com/users/Textualize/events{/privacy}", "received_events_url": "https://api.github.com/users/Textualize/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 220809393, "node_id": "MDEwOlJlcG9zaXRvcnkyMjA4MDkzOTM=", "name": "rich", "full_name": "Textualize/rich", "private": false, "owner": {"login": "Textualize", "id": 93378883, "node_id": "O_kgDOBZDZQw", "avatar_url": "https://avatars.githubusercontent.com/u/93378883?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Textualize", "html_url": "https://github.com/Textualize", "followers_url": "https://api.github.com/users/Textualize/followers", "following_url": "https://api.github.com/users/Textualize/following{/other_user}", "gists_url": "https://api.github.com/users/Textualize/gists{/gist_id}", "starred_url": "https://api.github.com/users/Textualize/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Textualize/subscriptions", "organizations_url": "https://api.github.com/users/Textualize/orgs", "repos_url": "https://api.github.com/users/Textualize/repos", "events_url": "https://api.github.com/users/Textualize/events{/privacy}", "received_events_url": "https://api.github.com/users/Textualize/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/Textualize/rich", "description": "Rich is a Python library for rich text and beautiful formatting in the terminal.", "fork": false, "url": "https://api.github.com/repos/Textualize/rich", "forks_url": "https://api.github.com/repos/Textualize/rich/forks", "keys_url": "https://api.github.com/repos/Textualize/rich/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/Textualize/rich/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/Textualize/rich/teams", "hooks_url": "https://api.github.com/repos/Textualize/rich/hooks", "issue_events_url": "https://api.github.com/repos/Textualize/rich/issues/events{/number}", "events_url": "https://api.github.com/repos/Textualize/rich/events", "assignees_url": "https://api.github.com/repos/Textualize/rich/assignees{/user}", "branches_url": "https://api.github.com/repos/Textualize/rich/branches{/branch}", "tags_url": "https://api.github.com/repos/Textualize/rich/tags", "blobs_url": "https://api.github.com/repos/Textualize/rich/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/Textualize/rich/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/Textualize/rich/git/refs{/sha}", "trees_url": "https://api.github.com/repos/Textualize/rich/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/Textualize/rich/statuses/{sha}", "languages_url": "https://api.github.com/repos/Textualize/rich/languages", "stargazers_url": "https://api.github.com/repos/Textualize/rich/stargazers", "contributors_url": "https://api.github.com/repos/Textualize/rich/contributors", "subscribers_url": "https://api.github.com/repos/Textualize/rich/subscribers", "subscription_url": "https://api.github.com/repos/Textualize/rich/subscription", "commits_url": "https://api.github.com/repos/Textualize/rich/commits{/sha}", "git_commits_url": "https://api.github.com/repos/Textualize/rich/git/commits{/sha}", "comments_url": "https://api.github.com/repos/Textualize/rich/comments{/number}", "issue_comment_url": "https://api.github.com/repos/Textualize/rich/issues/comments{/number}", "contents_url": "https://api.github.com/repos/Textualize/rich/contents/{+path}", "compare_url": "https://api.github.com/repos/Textualize/rich/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/Textualize/rich/merges", "archive_url": "https://api.github.com/repos/Textualize/rich/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/Textualize/rich/downloads", "issues_url": "https://api.github.com/repos/Textualize/rich/issues{/number}", "pulls_url": "https://api.github.com/repos/Textualize/rich/pulls{/number}", "milestones_url": "https://api.github.com/repos/Textualize/rich/milestones{/number}", "notifications_url": "https://api.github.com/repos/Textualize/rich/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/Textualize/rich/labels{/name}", "releases_url": "https://api.github.com/repos/Textualize/rich/releases{/id}", "deployments_url": "https://api.github.com/repos/Textualize/rich/deployments", "created_at": "2019-11-10T15:28:09Z", "updated_at": "2022-03-31T21:04:50Z", "pushed_at": "2022-03-31T17:58:25Z", "git_url": "git://github.com/Textualize/rich.git", "ssh_url": "git@github.com:Textualize/rich.git", "clone_url": "https://github.com/Textualize/rich.git", "svn_url": "https://github.com/Textualize/rich", "homepage": "https://rich.readthedocs.io/en/latest/", "size": 48072, "stargazers_count": 36147, "watchers_count": 36147, "language": "Python", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 1180, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 42, "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit", "node_id": "MDc6TGljZW5zZTEz"}, "allow_forking": true, "is_template": false, "topics": ["ansi-colors", "emoji", "markdown", "progress-bar", "progress-bar-python", "python", "python-library", "python3", "rich", "syntax-highlighting", "tables", "terminal", "terminal-color", "traceback", "tracebacks-rich"], "visibility": "public", "forks": 1180, "open_issues": 42, "watchers": 36147, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/Textualize/rich/pulls/2122"}, "html": {"href": "https://github.com/Textualize/rich/pull/2122"}, "issue": {"href": "https://api.github.com/repos/Textualize/rich/issues/2122"}, "comments": {"href": "https://api.github.com/repos/Textualize/rich/issues/2122/comments"}, "review_comments": {"href": "https://api.github.com/repos/Textualize/rich/pulls/2122/comments"}, "review_comment": {"href": "https://api.github.com/repos/Textualize/rich/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/Textualize/rich/pulls/2122/commits"}, "statuses": {"href": "https://api.github.com/repos/Textualize/rich/statuses/c012f3d090a268cdd358e10b35bb27f1aad29de4"}}, "author_association": "NONE", "auto_merge": null, "active_lock_reason": null}, {"url": "https://api.github.com/repos/Textualize/rich/pulls/2113", "id": 889724508, "node_id": "PR_kwDODSlIsc41CB5c", "html_url": "https://github.com/Textualize/rich/pull/2113", "diff_url": "https://github.com/Textualize/rich/pull/2113.diff", "patch_url": "https://github.com/Textualize/rich/pull/2113.patch", "issue_url": "https://api.github.com/repos/Textualize/rich/issues/2113", "number": 2113, "state": "open", "locked": false, "title": "adding indonesian translation for readme", "user": {"login": "theDreamer911", "id": 71202864, "node_id": "MDQ6VXNlcjcxMjAyODY0", "avatar_url": "https://avatars.githubusercontent.com/u/71202864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theDreamer911", "html_url": "https://github.com/theDreamer911", "followers_url": "https://api.github.com/users/theDreamer911/followers", "following_url": "https://api.github.com/users/theDreamer911/following{/other_user}", "gists_url": "https://api.github.com/users/theDreamer911/gists{/gist_id}", "starred_url": "https://api.github.com/users/theDreamer911/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theDreamer911/subscriptions", "organizations_url": "https://api.github.com/users/theDreamer911/orgs", "repos_url": "https://api.github.com/users/theDreamer911/repos", "events_url": "https://api.github.com/users/theDreamer911/events{/privacy}", "received_events_url": "https://api.github.com/users/theDreamer911/received_events", "type": "User", "site_admin": false}, "body": "## Type of changes\r\n\r\n- [ ] Bug fix\r\n- [ ] New feature\r\n- [x] Documentation / docstrings\r\n- [ ] Tests\r\n- [ ] Other\r\n\r\n## Checklist\r\n\r\n- [ ] I've run the latest [black](https://github.com/psf/black) with default args on new code.\r\n- [x] I've updated CHANGELOG.md and CONTRIBUTORS.md where appropriate.\r\n- [ ] I've added tests for new code.\r\n- [x] I accept that @willmcgugan may be pedantic in the code review.\r\n\r\n## Description\r\n\r\nI'm adding Indonesian translation for the readme section\r\n", "created_at": "2022-03-25T17:40:52Z", "updated_at": "2022-03-29T21:45:26Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "0189e2bf22f8ba6e881afd0df916265dd49689f9", "assignee": null, "assignees": [], "requested_reviewers": [], "requested_teams": [], "labels": [], "milestone": null, "draft": false, "commits_url": "https://api.github.com/repos/Textualize/rich/pulls/2113/commits", "review_comments_url": "https://api.github.com/repos/Textualize/rich/pulls/2113/comments", "review_comment_url": "https://api.github.com/repos/Textualize/rich/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/Textualize/rich/issues/2113/comments", "statuses_url": "https://api.github.com/repos/Textualize/rich/statuses/09ae41a64a6788b1ec050a92bc77a700a6f9fdfe", "head": {"label": "theDreamer911:patch-1", "ref": "patch-1", "sha": "09ae41a64a6788b1ec050a92bc77a700a6f9fdfe", "user": {"login": "theDreamer911", "id": 71202864, "node_id": "MDQ6VXNlcjcxMjAyODY0", "avatar_url": "https://avatars.githubusercontent.com/u/71202864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theDreamer911", "html_url": "https://github.com/theDreamer911", "followers_url": "https://api.github.com/users/theDreamer911/followers", "following_url": "https://api.github.com/users/theDreamer911/following{/other_user}", "gists_url": "https://api.github.com/users/theDreamer911/gists{/gist_id}", "starred_url": "https://api.github.com/users/theDreamer911/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theDreamer911/subscriptions", "organizations_url": "https://api.github.com/users/theDreamer911/orgs", "repos_url": "https://api.github.com/users/theDreamer911/repos", "events_url": "https://api.github.com/users/theDreamer911/events{/privacy}", "received_events_url": "https://api.github.com/users/theDreamer911/received_events", "type": "User", "site_admin": false}, "repo": {"id": 474017922, "node_id": "R_kgDOHEDwgg", "name": "rich", "full_name": "theDreamer911/rich", "private": false, "owner": {"login": "theDreamer911", "id": 71202864, "node_id": "MDQ6VXNlcjcxMjAyODY0", "avatar_url": "https://avatars.githubusercontent.com/u/71202864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theDreamer911", "html_url": "https://github.com/theDreamer911", "followers_url": "https://api.github.com/users/theDreamer911/followers", "following_url": "https://api.github.com/users/theDreamer911/following{/other_user}", "gists_url": "https://api.github.com/users/theDreamer911/gists{/gist_id}", "starred_url": "https://api.github.com/users/theDreamer911/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theDreamer911/subscriptions", "organizations_url": "https://api.github.com/users/theDreamer911/orgs", "repos_url": "https://api.github.com/users/theDreamer911/repos", "events_url": "https://api.github.com/users/theDreamer911/events{/privacy}", "received_events_url": "https://api.github.com/users/theDreamer911/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/theDreamer911/rich", "description": "Rich is a Python library for rich text and beautiful formatting in the terminal.", "fork": true, "url": "https://api.github.com/repos/theDreamer911/rich", "forks_url": "https://api.github.com/repos/theDreamer911/rich/forks", "keys_url": "https://api.github.com/repos/theDreamer911/rich/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/theDreamer911/rich/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/theDreamer911/rich/teams", "hooks_url": "https://api.github.com/repos/theDreamer911/rich/hooks", "issue_events_url": "https://api.github.com/repos/theDreamer911/rich/issues/events{/number}", "events_url": "https://api.github.com/repos/theDreamer911/rich/events", "assignees_url": "https://api.github.com/repos/theDreamer911/rich/assignees{/user}", "branches_url": "https://api.github.com/repos/theDreamer911/rich/branches{/branch}", "tags_url": "https://api.github.com/repos/theDreamer911/rich/tags", "blobs_url": "https://api.github.com/repos/theDreamer911/rich/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/theDreamer911/rich/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/theDreamer911/rich/git/refs{/sha}", "trees_url": "https://api.github.com/repos/theDreamer911/rich/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/theDreamer911/rich/statuses/{sha}", "languages_url": "https://api.github.com/repos/theDreamer911/rich/languages", "stargazers_url": "https://api.github.com/repos/theDreamer911/rich/stargazers", "contributors_url": "https://api.github.com/repos/theDreamer911/rich/contributors", "subscribers_url": "https://api.github.com/repos/theDreamer911/rich/subscribers", "subscription_url": "https://api.github.com/repos/theDreamer911/rich/subscription", "commits_url": "https://api.github.com/repos/theDreamer911/rich/commits{/sha}", "git_commits_url": "https://api.github.com/repos/theDreamer911/rich/git/commits{/sha}", "comments_url": "https://api.github.com/repos/theDreamer911/rich/comments{/number}", "issue_comment_url": "https://api.github.com/repos/theDreamer911/rich/issues/comments{/number}", "contents_url": "https://api.github.com/repos/theDreamer911/rich/contents/{+path}", "compare_url": "https://api.github.com/repos/theDreamer911/rich/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/theDreamer911/rich/merges", "archive_url": "https://api.github.com/repos/theDreamer911/rich/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/theDreamer911/rich/downloads", "issues_url": "https://api.github.com/repos/theDreamer911/rich/issues{/number}", "pulls_url": "https://api.github.com/repos/theDreamer911/rich/pulls{/number}", "milestones_url": "https://api.github.com/repos/theDreamer911/rich/milestones{/number}", "notifications_url": "https://api.github.com/repos/theDreamer911/rich/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/theDreamer911/rich/labels{/name}", "releases_url": "https://api.github.com/repos/theDreamer911/rich/releases{/id}", "deployments_url": "https://api.github.com/repos/theDreamer911/rich/deployments", "created_at": "2022-03-25T13:21:38Z", "updated_at": "2022-03-25T17:35:46Z", "pushed_at": "2022-03-29T21:14:59Z", "git_url": "git://github.com/theDreamer911/rich.git", "ssh_url": "git@github.com:theDreamer911/rich.git", "clone_url": "https://github.com/theDreamer911/rich.git", "svn_url": "https://github.com/theDreamer911/rich", "homepage": "https://rich.readthedocs.io/en/latest/", "size": 47939, "stargazers_count": 0, "watchers_count": 0, "language": "Python", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 0, "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit", "node_id": "MDc6TGljZW5zZTEz"}, "allow_forking": true, "is_template": false, "topics": [], "visibility": "public", "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "Textualize:master", "ref": "master", "sha": "1d4ebb21736d6bd81d10c5b489507226af19eea1", "user": {"login": "Textualize", "id": 93378883, "node_id": "O_kgDOBZDZQw", "avatar_url": "https://avatars.githubusercontent.com/u/93378883?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Textualize", "html_url": "https://github.com/Textualize", "followers_url": "https://api.github.com/users/Textualize/followers", "following_url": "https://api.github.com/users/Textualize/following{/other_user}", "gists_url": "https://api.github.com/users/Textualize/gists{/gist_id}", "starred_url": "https://api.github.com/users/Textualize/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Textualize/subscriptions", "organizations_url": "https://api.github.com/users/Textualize/orgs", "repos_url": "https://api.github.com/users/Textualize/repos", "events_url": "https://api.github.com/users/Textualize/events{/privacy}", "received_events_url": "https://api.github.com/users/Textualize/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 220809393, "node_id": "MDEwOlJlcG9zaXRvcnkyMjA4MDkzOTM=", "name": "rich", "full_name": "Textualize/rich", "private": false, "owner": {"login": "Textualize", "id": 93378883, "node_id": "O_kgDOBZDZQw", "avatar_url": "https://avatars.githubusercontent.com/u/93378883?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Textualize", "html_url": "https://github.com/Textualize", "followers_url": "https://api.github.com/users/Textualize/followers", "following_url": "https://api.github.com/users/Textualize/following{/other_user}", "gists_url": "https://api.github.com/users/Textualize/gists{/gist_id}", "starred_url": "https://api.github.com/users/Textualize/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Textualize/subscriptions", "organizations_url": "https://api.github.com/users/Textualize/orgs", "repos_url": "https://api.github.com/users/Textualize/repos", "events_url": "https://api.github.com/users/Textualize/events{/privacy}", "received_events_url": "https://api.github.com/users/Textualize/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/Textualize/rich", "description": "Rich is a Python library for rich text and beautiful formatting in the terminal.", "fork": false, "url": "https://api.github.com/repos/Textualize/rich", "forks_url": "https://api.github.com/repos/Textualize/rich/forks", "keys_url": "https://api.github.com/repos/Textualize/rich/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/Textualize/rich/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/Textualize/rich/teams", "hooks_url": "https://api.github.com/repos/Textualize/rich/hooks", "issue_events_url": "https://api.github.com/repos/Textualize/rich/issues/events{/number}", "events_url": "https://api.github.com/repos/Textualize/rich/events", "assignees_url": "https://api.github.com/repos/Textualize/rich/assignees{/user}", "branches_url": "https://api.github.com/repos/Textualize/rich/branches{/branch}", "tags_url": "https://api.github.com/repos/Textualize/rich/tags", "blobs_url": "https://api.github.com/repos/Textualize/rich/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/Textualize/rich/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/Textualize/rich/git/refs{/sha}", "trees_url": "https://api.github.com/repos/Textualize/rich/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/Textualize/rich/statuses/{sha}", "languages_url": "https://api.github.com/repos/Textualize/rich/languages", "stargazers_url": "https://api.github.com/repos/Textualize/rich/stargazers", "contributors_url": "https://api.github.com/repos/Textualize/rich/contributors", "subscribers_url": "https://api.github.com/repos/Textualize/rich/subscribers", "subscription_url": "https://api.github.com/repos/Textualize/rich/subscription", "commits_url": "https://api.github.com/repos/Textualize/rich/commits{/sha}", "git_commits_url": "https://api.github.com/repos/Textualize/rich/git/commits{/sha}", "comments_url": "https://api.github.com/repos/Textualize/rich/comments{/number}", "issue_comment_url": "https://api.github.com/repos/Textualize/rich/issues/comments{/number}", "contents_url": "https://api.github.com/repos/Textualize/rich/contents/{+path}", "compare_url": "https://api.github.com/repos/Textualize/rich/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/Textualize/rich/merges", "archive_url": "https://api.github.com/repos/Textualize/rich/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/Textualize/rich/downloads", "issues_url": "https://api.github.com/repos/Textualize/rich/issues{/number}", "pulls_url": "https://api.github.com/repos/Textualize/rich/pulls{/number}", "milestones_url": "https://api.github.com/repos/Textualize/rich/milestones{/number}", "notifications_url": "https://api.github.com/repos/Textualize/rich/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/Textualize/rich/labels{/name}", "releases_url": "https://api.github.com/repos/Textualize/rich/releases{/id}", "deployments_url": "https://api.github.com/repos/Textualize/rich/deployments", "created_at": "2019-11-10T15:28:09Z", "updated_at": "2022-03-31T21:04:50Z", "pushed_at": "2022-03-31T17:58:25Z", "git_url": "git://github.com/Textualize/rich.git", "ssh_url": "git@github.com:Textualize/rich.git", "clone_url": "https://github.com/Textualize/rich.git", "svn_url": "https://github.com/Textualize/rich", "homepage": "https://rich.readthedocs.io/en/latest/", "size": 48072, "stargazers_count": 36147, "watchers_count": 36147, "language": "Python", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 1180, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 42, "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit", "node_id": "MDc6TGljZW5zZTEz"}, "allow_forking": true, "is_template": false, "topics": ["ansi-colors", "emoji", "markdown", "progress-bar", "progress-bar-python", "python", "python-library", "python3", "rich", "syntax-highlighting", "tables", "terminal", "terminal-color", "traceback", "tracebacks-rich"], "visibility": "public", "forks": 1180, "open_issues": 42, "watchers": 36147, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/Textualize/rich/pulls/2113"}, "html": {"href": "https://github.com/Textualize/rich/pull/2113"}, "issue": {"href": "https://api.github.com/repos/Textualize/rich/issues/2113"}, "comments": {"href": "https://api.github.com/repos/Textualize/rich/issues/2113/comments"}, "review_comments": {"href": "https://api.github.com/repos/Textualize/rich/pulls/2113/comments"}, "review_comment": {"href": "https://api.github.com/repos/Textualize/rich/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/Textualize/rich/pulls/2113/commits"}, "statuses": {"href": "https://api.github.com/repos/Textualize/rich/statuses/09ae41a64a6788b1ec050a92bc77a700a6f9fdfe"}}, "author_association": "NONE", "auto_merge": null, "active_lock_reason": null}, {"url": "https://api.github.com/repos/Textualize/rich/pulls/2013", "id": 867038453, "node_id": "PR_kwDODSlIsc4zrfT1", "html_url": "https://github.com/Textualize/rich/pull/2013", "diff_url": "https://github.com/Textualize/rich/pull/2013.diff", "patch_url": "https://github.com/Textualize/rich/pull/2013.patch", "issue_url": "https://api.github.com/repos/Textualize/rich/issues/2013", "number": 2013, "state": "open", "locked": false, "title": "Add the `log_omit_repeated_times` option to `Console`", "user": {"login": "apcamargo", "id": 22940964, "node_id": "MDQ6VXNlcjIyOTQwOTY0", "avatar_url": "https://avatars.githubusercontent.com/u/22940964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apcamargo", "html_url": "https://github.com/apcamargo", "followers_url": "https://api.github.com/users/apcamargo/followers", "following_url": "https://api.github.com/users/apcamargo/following{/other_user}", "gists_url": "https://api.github.com/users/apcamargo/gists{/gist_id}", "starred_url": "https://api.github.com/users/apcamargo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apcamargo/subscriptions", "organizations_url": "https://api.github.com/users/apcamargo/orgs", "repos_url": "https://api.github.com/users/apcamargo/repos", "events_url": "https://api.github.com/users/apcamargo/events{/privacy}", "received_events_url": "https://api.github.com/users/apcamargo/received_events", "type": "User", "site_admin": false}, "body": "## Type of changes\r\n\r\n- [ ] Bug fix\r\n- [x] New feature\r\n- [ ] Documentation / docstrings\r\n- [ ] Tests\r\n- [ ] Other\r\n\r\n## Checklist\r\n\r\n- [x] I've run the latest [black](https://github.com/psf/black) with default args on new code.\r\n- [x] I've updated CHANGELOG.md and CONTRIBUTORS.md where appropriate.\r\n- [ ] I've added tests for new code.\r\n- [x] I accept that @willmcgugan may be pedantic in the code review.\r\n\r\n## Description\r\n\r\nThis PR adds a `log_omit_repeated_times` option to the `Console` constructor. When set to `False`, the omission of repeated times by `log()` methods is disabled.\r\n", "created_at": "2022-02-28T17:49:12Z", "updated_at": "2022-03-28T15:31:24Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "a287d4b25f3e0916003904482c7b16be8823987e", "assignee": null, "assignees": [], "requested_reviewers": [], "requested_teams": [], "labels": [], "milestone": null, "draft": false, "commits_url": "https://api.github.com/repos/Textualize/rich/pulls/2013/commits", "review_comments_url": "https://api.github.com/repos/Textualize/rich/pulls/2013/comments", "review_comment_url": "https://api.github.com/repos/Textualize/rich/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/Textualize/rich/issues/2013/comments", "statuses_url": "https://api.github.com/repos/Textualize/rich/statuses/4eb6aff6cc86a3b3c78401be6d50b0473c04d1e8", "head": {"label": "apcamargo:console-log-omit-repeated-times", "ref": "console-log-omit-repeated-times", "sha": "4eb6aff6cc86a3b3c78401be6d50b0473c04d1e8", "user": {"login": "apcamargo", "id": 22940964, "node_id": "MDQ6VXNlcjIyOTQwOTY0", "avatar_url": "https://avatars.githubusercontent.com/u/22940964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apcamargo", "html_url": "https://github.com/apcamargo", "followers_url": "https://api.github.com/users/apcamargo/followers", "following_url": "https://api.github.com/users/apcamargo/following{/other_user}", "gists_url": "https://api.github.com/users/apcamargo/gists{/gist_id}", "starred_url": "https://api.github.com/users/apcamargo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apcamargo/subscriptions", "organizations_url": "https://api.github.com/users/apcamargo/orgs", "repos_url": "https://api.github.com/users/apcamargo/repos", "events_url": "https://api.github.com/users/apcamargo/events{/privacy}", "received_events_url": "https://api.github.com/users/apcamargo/received_events", "type": "User", "site_admin": false}, "repo": {"id": 464579095, "node_id": "R_kgDOG7DqFw", "name": "rich", "full_name": "apcamargo/rich", "private": false, "owner": {"login": "apcamargo", "id": 22940964, "node_id": "MDQ6VXNlcjIyOTQwOTY0", "avatar_url": "https://avatars.githubusercontent.com/u/22940964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apcamargo", "html_url": "https://github.com/apcamargo", "followers_url": "https://api.github.com/users/apcamargo/followers", "following_url": "https://api.github.com/users/apcamargo/following{/other_user}", "gists_url": "https://api.github.com/users/apcamargo/gists{/gist_id}", "starred_url": "https://api.github.com/users/apcamargo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apcamargo/subscriptions", "organizations_url": "https://api.github.com/users/apcamargo/orgs", "repos_url": "https://api.github.com/users/apcamargo/repos", "events_url": "https://api.github.com/users/apcamargo/events{/privacy}", "received_events_url": "https://api.github.com/users/apcamargo/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/apcamargo/rich", "description": "Rich is a Python library for rich text and beautiful formatting in the terminal.", "fork": true, "url": "https://api.github.com/repos/apcamargo/rich", "forks_url": "https://api.github.com/repos/apcamargo/rich/forks", "keys_url": "https://api.github.com/repos/apcamargo/rich/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/apcamargo/rich/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/apcamargo/rich/teams", "hooks_url": "https://api.github.com/repos/apcamargo/rich/hooks", "issue_events_url": "https://api.github.com/repos/apcamargo/rich/issues/events{/number}", "events_url": "https://api.github.com/repos/apcamargo/rich/events", "assignees_url": "https://api.github.com/repos/apcamargo/rich/assignees{/user}", "branches_url": "https://api.github.com/repos/apcamargo/rich/branches{/branch}", "tags_url": "https://api.github.com/repos/apcamargo/rich/tags", "blobs_url": "https://api.github.com/repos/apcamargo/rich/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/apcamargo/rich/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/apcamargo/rich/git/refs{/sha}", "trees_url": "https://api.github.com/repos/apcamargo/rich/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/apcamargo/rich/statuses/{sha}", "languages_url": "https://api.github.com/repos/apcamargo/rich/languages", "stargazers_url": "https://api.github.com/repos/apcamargo/rich/stargazers", "contributors_url": "https://api.github.com/repos/apcamargo/rich/contributors", "subscribers_url": "https://api.github.com/repos/apcamargo/rich/subscribers", "subscription_url": "https://api.github.com/repos/apcamargo/rich/subscription", "commits_url": "https://api.github.com/repos/apcamargo/rich/commits{/sha}", "git_commits_url": "https://api.github.com/repos/apcamargo/rich/git/commits{/sha}", "comments_url": "https://api.github.com/repos/apcamargo/rich/comments{/number}", "issue_comment_url": "https://api.github.com/repos/apcamargo/rich/issues/comments{/number}", "contents_url": "https://api.github.com/repos/apcamargo/rich/contents/{+path}", "compare_url": "https://api.github.com/repos/apcamargo/rich/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/apcamargo/rich/merges", "archive_url": "https://api.github.com/repos/apcamargo/rich/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/apcamargo/rich/downloads", "issues_url": "https://api.github.com/repos/apcamargo/rich/issues{/number}", "pulls_url": "https://api.github.com/repos/apcamargo/rich/pulls{/number}", "milestones_url": "https://api.github.com/repos/apcamargo/rich/milestones{/number}", "notifications_url": "https://api.github.com/repos/apcamargo/rich/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/apcamargo/rich/labels{/name}", "releases_url": "https://api.github.com/repos/apcamargo/rich/releases{/id}", "deployments_url": "https://api.github.com/repos/apcamargo/rich/deployments", "created_at": "2022-02-28T17:27:48Z", "updated_at": "2022-02-28T15:44:57Z", "pushed_at": "2022-02-28T17:45:28Z", "git_url": "git://github.com/apcamargo/rich.git", "ssh_url": "git@github.com:apcamargo/rich.git", "clone_url": "https://github.com/apcamargo/rich.git", "svn_url": "https://github.com/apcamargo/rich", "homepage": "https://rich.readthedocs.io/en/latest/", "size": 48209, "stargazers_count": 0, "watchers_count": 0, "language": null, "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 0, "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit", "node_id": "MDc6TGljZW5zZTEz"}, "allow_forking": true, "is_template": false, "topics": [], "visibility": "public", "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "Textualize:master", "ref": "master", "sha": "aa4546ac465c36a057c0f77c0c8856497475b3ed", "user": {"login": "Textualize", "id": 93378883, "node_id": "O_kgDOBZDZQw", "avatar_url": "https://avatars.githubusercontent.com/u/93378883?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Textualize", "html_url": "https://github.com/Textualize", "followers_url": "https://api.github.com/users/Textualize/followers", "following_url": "https://api.github.com/users/Textualize/following{/other_user}", "gists_url": "https://api.github.com/users/Textualize/gists{/gist_id}", "starred_url": "https://api.github.com/users/Textualize/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Textualize/subscriptions", "organizations_url": "https://api.github.com/users/Textualize/orgs", "repos_url": "https://api.github.com/users/Textualize/repos", "events_url": "https://api.github.com/users/Textualize/events{/privacy}", "received_events_url": "https://api.github.com/users/Textualize/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 220809393, "node_id": "MDEwOlJlcG9zaXRvcnkyMjA4MDkzOTM=", "name": "rich", "full_name": "Textualize/rich", "private": false, "owner": {"login": "Textualize", "id": 93378883, "node_id": "O_kgDOBZDZQw", "avatar_url": "https://avatars.githubusercontent.com/u/93378883?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Textualize", "html_url": "https://github.com/Textualize", "followers_url": "https://api.github.com/users/Textualize/followers", "following_url": "https://api.github.com/users/Textualize/following{/other_user}", "gists_url": "https://api.github.com/users/Textualize/gists{/gist_id}", "starred_url": "https://api.github.com/users/Textualize/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Textualize/subscriptions", "organizations_url": "https://api.github.com/users/Textualize/orgs", "repos_url": "https://api.github.com/users/Textualize/repos", "events_url": "https://api.github.com/users/Textualize/events{/privacy}", "received_events_url": "https://api.github.com/users/Textualize/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/Textualize/rich", "description": "Rich is a Python library for rich text and beautiful formatting in the terminal.", "fork": false, "url": "https://api.github.com/repos/Textualize/rich", "forks_url": "https://api.github.com/repos/Textualize/rich/forks", "keys_url": "https://api.github.com/repos/Textualize/rich/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/Textualize/rich/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/Textualize/rich/teams", "hooks_url": "https://api.github.com/repos/Textualize/rich/hooks", "issue_events_url": "https://api.github.com/repos/Textualize/rich/issues/events{/number}", "events_url": "https://api.github.com/repos/Textualize/rich/events", "assignees_url": "https://api.github.com/repos/Textualize/rich/assignees{/user}", "branches_url": "https://api.github.com/repos/Textualize/rich/branches{/branch}", "tags_url": "https://api.github.com/repos/Textualize/rich/tags", "blobs_url": "https://api.github.com/repos/Textualize/rich/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/Textualize/rich/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/Textualize/rich/git/refs{/sha}", "trees_url": "https://api.github.com/repos/Textualize/rich/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/Textualize/rich/statuses/{sha}", "languages_url": "https://api.github.com/repos/Textualize/rich/languages", "stargazers_url": "https://api.github.com/repos/Textualize/rich/stargazers", "contributors_url": "https://api.github.com/repos/Textualize/rich/contributors", "subscribers_url": "https://api.github.com/repos/Textualize/rich/subscribers", "subscription_url": "https://api.github.com/repos/Textualize/rich/subscription", "commits_url": "https://api.github.com/repos/Textualize/rich/commits{/sha}", "git_commits_url": "https://api.github.com/repos/Textualize/rich/git/commits{/sha}", "comments_url": "https://api.github.com/repos/Textualize/rich/comments{/number}", "issue_comment_url": "https://api.github.com/repos/Textualize/rich/issues/comments{/number}", "contents_url": "https://api.github.com/repos/Textualize/rich/contents/{+path}", "compare_url": "https://api.github.com/repos/Textualize/rich/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/Textualize/rich/merges", "archive_url": "https://api.github.com/repos/Textualize/rich/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/Textualize/rich/downloads", "issues_url": "https://api.github.com/repos/Textualize/rich/issues{/number}", "pulls_url": "https://api.github.com/repos/Textualize/rich/pulls{/number}", "milestones_url": "https://api.github.com/repos/Textualize/rich/milestones{/number}", "notifications_url": "https://api.github.com/repos/Textualize/rich/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/Textualize/rich/labels{/name}", "releases_url": "https://api.github.com/repos/Textualize/rich/releases{/id}", "deployments_url": "https://api.github.com/repos/Textualize/rich/deployments", "created_at": "2019-11-10T15:28:09Z", "updated_at": "2022-03-31T21:04:50Z", "pushed_at": "2022-03-31T17:58:25Z", "git_url": "git://github.com/Textualize/rich.git", "ssh_url": "git@github.com:Textualize/rich.git", "clone_url": "https://github.com/Textualize/rich.git", "svn_url": "https://github.com/Textualize/rich", "homepage": "https://rich.readthedocs.io/en/latest/", "size": 48072, "stargazers_count": 36147, "watchers_count": 36147, "language": "Python", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 1180, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 42, "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit", "node_id": "MDc6TGljZW5zZTEz"}, "allow_forking": true, "is_template": false, "topics": ["ansi-colors", "emoji", "markdown", "progress-bar", "progress-bar-python", "python", "python-library", "python3", "rich", "syntax-highlighting", "tables", "terminal", "terminal-color", "traceback", "tracebacks-rich"], "visibility": "public", "forks": 1180, "open_issues": 42, "watchers": 36147, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/Textualize/rich/pulls/2013"}, "html": {"href": "https://github.com/Textualize/rich/pull/2013"}, "issue": {"href": "https://api.github.com/repos/Textualize/rich/issues/2013"}, "comments": {"href": "https://api.github.com/repos/Textualize/rich/issues/2013/comments"}, "review_comments": {"href": "https://api.github.com/repos/Textualize/rich/pulls/2013/comments"}, "review_comment": {"href": "https://api.github.com/repos/Textualize/rich/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/Textualize/rich/pulls/2013/commits"}, "statuses": {"href": "https://api.github.com/repos/Textualize/rich/statuses/4eb6aff6cc86a3b3c78401be6d50b0473c04d1e8"}}, "author_association": "NONE", "auto_merge": null, "active_lock_reason": null}, {"url": "https://api.github.com/repos/Textualize/rich/pulls/1918", "id": 840574424, "node_id": "PR_kwDODSlIsc4yGiXY", "html_url": "https://github.com/Textualize/rich/pull/1918", "diff_url": "https://github.com/Textualize/rich/pull/1918.diff", "patch_url": "https://github.com/Textualize/rich/pull/1918.patch", "issue_url": "https://api.github.com/repos/Textualize/rich/issues/1918", "number": 1918, "state": "open", "locked": false, "title": "Fixed force_terminal on Jupyter", "user": {"login": "verdimrc", "id": 2340781, "node_id": "MDQ6VXNlcjIzNDA3ODE=", "avatar_url": "https://avatars.githubusercontent.com/u/2340781?v=4", "gravatar_id": "", "url": "https://api.github.com/users/verdimrc", "html_url": "https://github.com/verdimrc", "followers_url": "https://api.github.com/users/verdimrc/followers", "following_url": "https://api.github.com/users/verdimrc/following{/other_user}", "gists_url": "https://api.github.com/users/verdimrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/verdimrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/verdimrc/subscriptions", "organizations_url": "https://api.github.com/users/verdimrc/orgs", "repos_url": "https://api.github.com/users/verdimrc/repos", "events_url": "https://api.github.com/users/verdimrc/events{/privacy}", "received_events_url": "https://api.github.com/users/verdimrc/received_events", "type": "User", "site_admin": false}, "body": "## Type of changes\r\n\r\n- [x] Bug fix\r\n- [ ] New feature\r\n- [ ] Documentation / docstrings\r\n- [ ] Tests\r\n- [ ] Other\r\n\r\n## Checklist\r\n\r\n- [x] I've run the latest [black](https://github.com/psf/black) with default args on new code.\r\n- [ ] I've updated CHANGELOG.md and CONTRIBUTORS.md where appropriate.\r\n- [ ] I've added tests for new code.\r\n- [x] I accept that @willmcgugan may be pedantic in the code review.\r\n\r\n## Description\r\n\r\nPlease describe your changes here. If this fixes a bug, please link to the issue, if possible.\r\n\r\nFixes behavior after running `rich.pretty.install()` Jupyter Lab:\r\n\r\n- Do not show `<Figure size 432x288 with 1 Axes>` on Matplotlib figures\r\n- With `force_terminal=True`. and `force_jupyter=None` (or `True`), pandas dataframe must still be rendered once (i.e., the html repr).\r\n\r\nScreenshot below (from this [notebook](https://gist.github.com/verdimrc/221f602a90b6c0733cb29c8d665ad674)) compares the four behaviors: (1) vanilla Python, (2 and 3) rich, and (4) this PR.\r\n\r\n![screenshot](https://user-images.githubusercontent.com/2340781/154830727-6ac50554-4cfa-4281-83cb-02ad3f6e52db.png)\r\n\r\n", "created_at": "2022-02-04T20:03:59Z", "updated_at": "2022-02-27T10:57:38Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "5868d44fdc0650d066414adc3443f0dff52c01c7", "assignee": null, "assignees": [], "requested_reviewers": [], "requested_teams": [], "labels": [], "milestone": null, "draft": false, "commits_url": "https://api.github.com/repos/Textualize/rich/pulls/1918/commits", "review_comments_url": "https://api.github.com/repos/Textualize/rich/pulls/1918/comments", "review_comment_url": "https://api.github.com/repos/Textualize/rich/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/Textualize/rich/issues/1918/comments", "statuses_url": "https://api.github.com/repos/Textualize/rich/statuses/9cf8499af75040435631e2f4d2f52169a067d455", "head": {"label": "verdimrc:jupyter-force-terminal", "ref": "jupyter-force-terminal", "sha": "9cf8499af75040435631e2f4d2f52169a067d455", "user": {"login": "verdimrc", "id": 2340781, "node_id": "MDQ6VXNlcjIzNDA3ODE=", "avatar_url": "https://avatars.githubusercontent.com/u/2340781?v=4", "gravatar_id": "", "url": "https://api.github.com/users/verdimrc", "html_url": "https://github.com/verdimrc", "followers_url": "https://api.github.com/users/verdimrc/followers", "following_url": "https://api.github.com/users/verdimrc/following{/other_user}", "gists_url": "https://api.github.com/users/verdimrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/verdimrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/verdimrc/subscriptions", "organizations_url": "https://api.github.com/users/verdimrc/orgs", "repos_url": "https://api.github.com/users/verdimrc/repos", "events_url": "https://api.github.com/users/verdimrc/events{/privacy}", "received_events_url": "https://api.github.com/users/verdimrc/received_events", "type": "User", "site_admin": false}, "repo": {"id": 455673695, "node_id": "R_kgDOGykHXw", "name": "rich", "full_name": "verdimrc/rich", "private": false, "owner": {"login": "verdimrc", "id": 2340781, "node_id": "MDQ6VXNlcjIzNDA3ODE=", "avatar_url": "https://avatars.githubusercontent.com/u/2340781?v=4", "gravatar_id": "", "url": "https://api.github.com/users/verdimrc", "html_url": "https://github.com/verdimrc", "followers_url": "https://api.github.com/users/verdimrc/followers", "following_url": "https://api.github.com/users/verdimrc/following{/other_user}", "gists_url": "https://api.github.com/users/verdimrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/verdimrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/verdimrc/subscriptions", "organizations_url": "https://api.github.com/users/verdimrc/orgs", "repos_url": "https://api.github.com/users/verdimrc/repos", "events_url": "https://api.github.com/users/verdimrc/events{/privacy}", "received_events_url": "https://api.github.com/users/verdimrc/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/verdimrc/rich", "description": "Rich is a Python library for rich text and beautiful formatting in the terminal.", "fork": true, "url": "https://api.github.com/repos/verdimrc/rich", "forks_url": "https://api.github.com/repos/verdimrc/rich/forks", "keys_url": "https://api.github.com/repos/verdimrc/rich/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/verdimrc/rich/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/verdimrc/rich/teams", "hooks_url": "https://api.github.com/repos/verdimrc/rich/hooks", "issue_events_url": "https://api.github.com/repos/verdimrc/rich/issues/events{/number}", "events_url": "https://api.github.com/repos/verdimrc/rich/events", "assignees_url": "https://api.github.com/repos/verdimrc/rich/assignees{/user}", "branches_url": "https://api.github.com/repos/verdimrc/rich/branches{/branch}", "tags_url": "https://api.github.com/repos/verdimrc/rich/tags", "blobs_url": "https://api.github.com/repos/verdimrc/rich/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/verdimrc/rich/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/verdimrc/rich/git/refs{/sha}", "trees_url": "https://api.github.com/repos/verdimrc/rich/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/verdimrc/rich/statuses/{sha}", "languages_url": "https://api.github.com/repos/verdimrc/rich/languages", "stargazers_url": "https://api.github.com/repos/verdimrc/rich/stargazers", "contributors_url": "https://api.github.com/repos/verdimrc/rich/contributors", "subscribers_url": "https://api.github.com/repos/verdimrc/rich/subscribers", "subscription_url": "https://api.github.com/repos/verdimrc/rich/subscription", "commits_url": "https://api.github.com/repos/verdimrc/rich/commits{/sha}", "git_commits_url": "https://api.github.com/repos/verdimrc/rich/git/commits{/sha}", "comments_url": "https://api.github.com/repos/verdimrc/rich/comments{/number}", "issue_comment_url": "https://api.github.com/repos/verdimrc/rich/issues/comments{/number}", "contents_url": "https://api.github.com/repos/verdimrc/rich/contents/{+path}", "compare_url": "https://api.github.com/repos/verdimrc/rich/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/verdimrc/rich/merges", "archive_url": "https://api.github.com/repos/verdimrc/rich/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/verdimrc/rich/downloads", "issues_url": "https://api.github.com/repos/verdimrc/rich/issues{/number}", "pulls_url": "https://api.github.com/repos/verdimrc/rich/pulls{/number}", "milestones_url": "https://api.github.com/repos/verdimrc/rich/milestones{/number}", "notifications_url": "https://api.github.com/repos/verdimrc/rich/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/verdimrc/rich/labels{/name}", "releases_url": "https://api.github.com/repos/verdimrc/rich/releases{/id}", "deployments_url": "https://api.github.com/repos/verdimrc/rich/deployments", "created_at": "2022-02-04T19:36:40Z", "updated_at": "2022-02-04T18:56:41Z", "pushed_at": "2022-02-05T06:14:24Z", "git_url": "git://github.com/verdimrc/rich.git", "ssh_url": "git@github.com:verdimrc/rich.git", "clone_url": "https://github.com/verdimrc/rich.git", "svn_url": "https://github.com/verdimrc/rich", "homepage": "https://rich.readthedocs.io/en/latest/", "size": 40548, "stargazers_count": 0, "watchers_count": 0, "language": null, "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 0, "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit", "node_id": "MDc6TGljZW5zZTEz"}, "allow_forking": true, "is_template": false, "topics": [], "visibility": "public", "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "Textualize:master", "ref": "master", "sha": "880693db5b6b5a33c9bdcad35b57afcf37818860", "user": {"login": "Textualize", "id": 93378883, "node_id": "O_kgDOBZDZQw", "avatar_url": "https://avatars.githubusercontent.com/u/93378883?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Textualize", "html_url": "https://github.com/Textualize", "followers_url": "https://api.github.com/users/Textualize/followers", "following_url": "https://api.github.com/users/Textualize/following{/other_user}", "gists_url": "https://api.github.com/users/Textualize/gists{/gist_id}", "starred_url": "https://api.github.com/users/Textualize/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Textualize/subscriptions", "organizations_url": "https://api.github.com/users/Textualize/orgs", "repos_url": "https://api.github.com/users/Textualize/repos", "events_url": "https://api.github.com/users/Textualize/events{/privacy}", "received_events_url": "https://api.github.com/users/Textualize/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 220809393, "node_id": "MDEwOlJlcG9zaXRvcnkyMjA4MDkzOTM=", "name": "rich", "full_name": "Textualize/rich", "private": false, "owner": {"login": "Textualize", "id": 93378883, "node_id": "O_kgDOBZDZQw", "avatar_url": "https://avatars.githubusercontent.com/u/93378883?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Textualize", "html_url": "https://github.com/Textualize", "followers_url": "https://api.github.com/users/Textualize/followers", "following_url": "https://api.github.com/users/Textualize/following{/other_user}", "gists_url": "https://api.github.com/users/Textualize/gists{/gist_id}", "starred_url": "https://api.github.com/users/Textualize/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Textualize/subscriptions", "organizations_url": "https://api.github.com/users/Textualize/orgs", "repos_url": "https://api.github.com/users/Textualize/repos", "events_url": "https://api.github.com/users/Textualize/events{/privacy}", "received_events_url": "https://api.github.com/users/Textualize/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/Textualize/rich", "description": "Rich is a Python library for rich text and beautiful formatting in the terminal.", "fork": false, "url": "https://api.github.com/repos/Textualize/rich", "forks_url": "https://api.github.com/repos/Textualize/rich/forks", "keys_url": "https://api.github.com/repos/Textualize/rich/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/Textualize/rich/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/Textualize/rich/teams", "hooks_url": "https://api.github.com/repos/Textualize/rich/hooks", "issue_events_url": "https://api.github.com/repos/Textualize/rich/issues/events{/number}", "events_url": "https://api.github.com/repos/Textualize/rich/events", "assignees_url": "https://api.github.com/repos/Textualize/rich/assignees{/user}", "branches_url": "https://api.github.com/repos/Textualize/rich/branches{/branch}", "tags_url": "https://api.github.com/repos/Textualize/rich/tags", "blobs_url": "https://api.github.com/repos/Textualize/rich/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/Textualize/rich/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/Textualize/rich/git/refs{/sha}", "trees_url": "https://api.github.com/repos/Textualize/rich/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/Textualize/rich/statuses/{sha}", "languages_url": "https://api.github.com/repos/Textualize/rich/languages", "stargazers_url": "https://api.github.com/repos/Textualize/rich/stargazers", "contributors_url": "https://api.github.com/repos/Textualize/rich/contributors", "subscribers_url": "https://api.github.com/repos/Textualize/rich/subscribers", "subscription_url": "https://api.github.com/repos/Textualize/rich/subscription", "commits_url": "https://api.github.com/repos/Textualize/rich/commits{/sha}", "git_commits_url": "https://api.github.com/repos/Textualize/rich/git/commits{/sha}", "comments_url": "https://api.github.com/repos/Textualize/rich/comments{/number}", "issue_comment_url": "https://api.github.com/repos/Textualize/rich/issues/comments{/number}", "contents_url": "https://api.github.com/repos/Textualize/rich/contents/{+path}", "compare_url": "https://api.github.com/repos/Textualize/rich/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/Textualize/rich/merges", "archive_url": "https://api.github.com/repos/Textualize/rich/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/Textualize/rich/downloads", "issues_url": "https://api.github.com/repos/Textualize/rich/issues{/number}", "pulls_url": "https://api.github.com/repos/Textualize/rich/pulls{/number}", "milestones_url": "https://api.github.com/repos/Textualize/rich/milestones{/number}", "notifications_url": "https://api.github.com/repos/Textualize/rich/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/Textualize/rich/labels{/name}", "releases_url": "https://api.github.com/repos/Textualize/rich/releases{/id}", "deployments_url": "https://api.github.com/repos/Textualize/rich/deployments", "created_at": "2019-11-10T15:28:09Z", "updated_at": "2022-03-31T21:04:50Z", "pushed_at": "2022-03-31T17:58:25Z", "git_url": "git://github.com/Textualize/rich.git", "ssh_url": "git@github.com:Textualize/rich.git", "clone_url": "https://github.com/Textualize/rich.git", "svn_url": "https://github.com/Textualize/rich", "homepage": "https://rich.readthedocs.io/en/latest/", "size": 48072, "stargazers_count": 36147, "watchers_count": 36147, "language": "Python", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 1180, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 42, "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit", "node_id": "MDc6TGljZW5zZTEz"}, "allow_forking": true, "is_template": false, "topics": ["ansi-colors", "emoji", "markdown", "progress-bar", "progress-bar-python", "python", "python-library", "python3", "rich", "syntax-highlighting", "tables", "terminal", "terminal-color", "traceback", "tracebacks-rich"], "visibility": "public", "forks": 1180, "open_issues": 42, "watchers": 36147, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/Textualize/rich/pulls/1918"}, "html": {"href": "https://github.com/Textualize/rich/pull/1918"}, "issue": {"href": "https://api.github.com/repos/Textualize/rich/issues/1918"}, "comments": {"href": "https://api.github.com/repos/Textualize/rich/issues/1918/comments"}, "review_comments": {"href": "https://api.github.com/repos/Textualize/rich/pulls/1918/comments"}, "review_comment": {"href": "https://api.github.com/repos/Textualize/rich/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/Textualize/rich/pulls/1918/commits"}, "statuses": {"href": "https://api.github.com/repos/Textualize/rich/statuses/9cf8499af75040435631e2f4d2f52169a067d455"}}, "author_association": "NONE", "auto_merge": null, "active_lock_reason": null}, {"url": "https://api.github.com/repos/Textualize/rich/pulls/1621", "id": 764903894, "node_id": "PR_kwDODSlIsc4tl4HW", "html_url": "https://github.com/Textualize/rich/pull/1621", "diff_url": "https://github.com/Textualize/rich/pull/1621.diff", "patch_url": "https://github.com/Textualize/rich/pull/1621.patch", "issue_url": "https://api.github.com/repos/Textualize/rich/issues/1621", "number": 1621, "state": "open", "locked": false, "title": "allow for callable in rich.traceback.install(suppress=\u2026)", "user": {"login": "jettero", "id": 54520, "node_id": "MDQ6VXNlcjU0NTIw", "avatar_url": "https://avatars.githubusercontent.com/u/54520?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jettero", "html_url": "https://github.com/jettero", "followers_url": "https://api.github.com/users/jettero/followers", "following_url": "https://api.github.com/users/jettero/following{/other_user}", "gists_url": "https://api.github.com/users/jettero/gists{/gist_id}", "starred_url": "https://api.github.com/users/jettero/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jettero/subscriptions", "organizations_url": "https://api.github.com/users/jettero/orgs", "repos_url": "https://api.github.com/users/jettero/repos", "events_url": "https://api.github.com/users/jettero/events{/privacy}", "received_events_url": "https://api.github.com/users/jettero/received_events", "type": "User", "site_admin": false}, "body": "## Type of changes\r\n\r\n- [ ] Bug fix\r\n- [x] New feature\r\n- [ ] Documentation / docstrings\r\n- [ ] Tests\r\n- [ ] Other\r\n\r\n## Checklist\r\n\r\n- [x] I've run the latest [black](https://github.com/psf/black) with default args on new code.\r\n- [x] I've updated CHANGELOG.md and CONTRIBUTORS.md where appropriate.\r\n- [x] I've added tests for new code.\r\n- [x] I accept that @willmcgugan may be pedantic in the code review.\r\n\r\n## Description\r\n\r\nI think this suite of readability improvements is just great. <3 ... but rich lacks the thing I was actually looking for when I found it. I was actually looking for a module that would limit the stack traces to code I actually wrote so I don't have to scroll back through 15 pages of stuff I didn't write to get to the actually relevant error on the lines I did write.\r\n\r\nSo, while `rich.traceback.install(suppress=[])` _almost_ does what I want, there was no way to actually achieve my goal without really annoying acrobatics; since, what I really want is `rich.traceback.install(suppress=[lambda fname: recognize_my_own_modules(fname)])`\r\n\r\nThis PR adds callable suppress_entity support. It's already doing what I want in my project by simply installing my modified version; but I doubt I'm the only person that would want this feature so I cleaned it up for sharing.", "created_at": "2021-10-24T16:22:42Z", "updated_at": "2021-11-22T17:05:14Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "4d65847f8cd7a01caf4eb0b471301f01ba3bf0d1", "assignee": null, "assignees": [], "requested_reviewers": [], "requested_teams": [], "labels": [], "milestone": null, "draft": false, "commits_url": "https://api.github.com/repos/Textualize/rich/pulls/1621/commits", "review_comments_url": "https://api.github.com/repos/Textualize/rich/pulls/1621/comments", "review_comment_url": "https://api.github.com/repos/Textualize/rich/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/Textualize/rich/issues/1621/comments", "statuses_url": "https://api.github.com/repos/Textualize/rich/statuses/a3df6b1874612391a9f6da291a8d368215fae6d5", "head": {"label": "jettero:callable-suppress", "ref": "callable-suppress", "sha": "a3df6b1874612391a9f6da291a8d368215fae6d5", "user": {"login": "jettero", "id": 54520, "node_id": "MDQ6VXNlcjU0NTIw", "avatar_url": "https://avatars.githubusercontent.com/u/54520?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jettero", "html_url": "https://github.com/jettero", "followers_url": "https://api.github.com/users/jettero/followers", "following_url": "https://api.github.com/users/jettero/following{/other_user}", "gists_url": "https://api.github.com/users/jettero/gists{/gist_id}", "starred_url": "https://api.github.com/users/jettero/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jettero/subscriptions", "organizations_url": "https://api.github.com/users/jettero/orgs", "repos_url": "https://api.github.com/users/jettero/repos", "events_url": "https://api.github.com/users/jettero/events{/privacy}", "received_events_url": "https://api.github.com/users/jettero/received_events", "type": "User", "site_admin": false}, "repo": {"id": 420714609, "node_id": "R_kgDOGROYcQ", "name": "rich", "full_name": "jettero/rich", "private": false, "owner": {"login": "jettero", "id": 54520, "node_id": "MDQ6VXNlcjU0NTIw", "avatar_url": "https://avatars.githubusercontent.com/u/54520?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jettero", "html_url": "https://github.com/jettero", "followers_url": "https://api.github.com/users/jettero/followers", "following_url": "https://api.github.com/users/jettero/following{/other_user}", "gists_url": "https://api.github.com/users/jettero/gists{/gist_id}", "starred_url": "https://api.github.com/users/jettero/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jettero/subscriptions", "organizations_url": "https://api.github.com/users/jettero/orgs", "repos_url": "https://api.github.com/users/jettero/repos", "events_url": "https://api.github.com/users/jettero/events{/privacy}", "received_events_url": "https://api.github.com/users/jettero/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/jettero/rich", "description": "Rich is a Python library for rich text and beautiful formatting in the terminal.", "fork": true, "url": "https://api.github.com/repos/jettero/rich", "forks_url": "https://api.github.com/repos/jettero/rich/forks", "keys_url": "https://api.github.com/repos/jettero/rich/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/jettero/rich/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/jettero/rich/teams", "hooks_url": "https://api.github.com/repos/jettero/rich/hooks", "issue_events_url": "https://api.github.com/repos/jettero/rich/issues/events{/number}", "events_url": "https://api.github.com/repos/jettero/rich/events", "assignees_url": "https://api.github.com/repos/jettero/rich/assignees{/user}", "branches_url": "https://api.github.com/repos/jettero/rich/branches{/branch}", "tags_url": "https://api.github.com/repos/jettero/rich/tags", "blobs_url": "https://api.github.com/repos/jettero/rich/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/jettero/rich/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/jettero/rich/git/refs{/sha}", "trees_url": "https://api.github.com/repos/jettero/rich/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/jettero/rich/statuses/{sha}", "languages_url": "https://api.github.com/repos/jettero/rich/languages", "stargazers_url": "https://api.github.com/repos/jettero/rich/stargazers", "contributors_url": "https://api.github.com/repos/jettero/rich/contributors", "subscribers_url": "https://api.github.com/repos/jettero/rich/subscribers", "subscription_url": "https://api.github.com/repos/jettero/rich/subscription", "commits_url": "https://api.github.com/repos/jettero/rich/commits{/sha}", "git_commits_url": "https://api.github.com/repos/jettero/rich/git/commits{/sha}", "comments_url": "https://api.github.com/repos/jettero/rich/comments{/number}", "issue_comment_url": "https://api.github.com/repos/jettero/rich/issues/comments{/number}", "contents_url": "https://api.github.com/repos/jettero/rich/contents/{+path}", "compare_url": "https://api.github.com/repos/jettero/rich/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/jettero/rich/merges", "archive_url": "https://api.github.com/repos/jettero/rich/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/jettero/rich/downloads", "issues_url": "https://api.github.com/repos/jettero/rich/issues{/number}", "pulls_url": "https://api.github.com/repos/jettero/rich/pulls{/number}", "milestones_url": "https://api.github.com/repos/jettero/rich/milestones{/number}", "notifications_url": "https://api.github.com/repos/jettero/rich/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/jettero/rich/labels{/name}", "releases_url": "https://api.github.com/repos/jettero/rich/releases{/id}", "deployments_url": "https://api.github.com/repos/jettero/rich/deployments", "created_at": "2021-10-24T14:58:15Z", "updated_at": "2022-01-05T10:58:27Z", "pushed_at": "2021-11-22T17:05:13Z", "git_url": "git://github.com/jettero/rich.git", "ssh_url": "git@github.com:jettero/rich.git", "clone_url": "https://github.com/jettero/rich.git", "svn_url": "https://github.com/jettero/rich", "homepage": "https://rich.readthedocs.io/en/latest/", "size": 40700, "stargazers_count": 0, "watchers_count": 0, "language": null, "has_issues": false, "has_projects": false, "has_downloads": true, "has_wiki": false, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 0, "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit", "node_id": "MDc6TGljZW5zZTEz"}, "allow_forking": true, "is_template": false, "topics": [], "visibility": "public", "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "Textualize:master", "ref": "master", "sha": "ba5d0c2cfc35e929022dbe26c2edb4c210cb11ee", "user": {"login": "Textualize", "id": 93378883, "node_id": "O_kgDOBZDZQw", "avatar_url": "https://avatars.githubusercontent.com/u/93378883?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Textualize", "html_url": "https://github.com/Textualize", "followers_url": "https://api.github.com/users/Textualize/followers", "following_url": "https://api.github.com/users/Textualize/following{/other_user}", "gists_url": "https://api.github.com/users/Textualize/gists{/gist_id}", "starred_url": "https://api.github.com/users/Textualize/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Textualize/subscriptions", "organizations_url": "https://api.github.com/users/Textualize/orgs", "repos_url": "https://api.github.com/users/Textualize/repos", "events_url": "https://api.github.com/users/Textualize/events{/privacy}", "received_events_url": "https://api.github.com/users/Textualize/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 220809393, "node_id": "MDEwOlJlcG9zaXRvcnkyMjA4MDkzOTM=", "name": "rich", "full_name": "Textualize/rich", "private": false, "owner": {"login": "Textualize", "id": 93378883, "node_id": "O_kgDOBZDZQw", "avatar_url": "https://avatars.githubusercontent.com/u/93378883?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Textualize", "html_url": "https://github.com/Textualize", "followers_url": "https://api.github.com/users/Textualize/followers", "following_url": "https://api.github.com/users/Textualize/following{/other_user}", "gists_url": "https://api.github.com/users/Textualize/gists{/gist_id}", "starred_url": "https://api.github.com/users/Textualize/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Textualize/subscriptions", "organizations_url": "https://api.github.com/users/Textualize/orgs", "repos_url": "https://api.github.com/users/Textualize/repos", "events_url": "https://api.github.com/users/Textualize/events{/privacy}", "received_events_url": "https://api.github.com/users/Textualize/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/Textualize/rich", "description": "Rich is a Python library for rich text and beautiful formatting in the terminal.", "fork": false, "url": "https://api.github.com/repos/Textualize/rich", "forks_url": "https://api.github.com/repos/Textualize/rich/forks", "keys_url": "https://api.github.com/repos/Textualize/rich/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/Textualize/rich/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/Textualize/rich/teams", "hooks_url": "https://api.github.com/repos/Textualize/rich/hooks", "issue_events_url": "https://api.github.com/repos/Textualize/rich/issues/events{/number}", "events_url": "https://api.github.com/repos/Textualize/rich/events", "assignees_url": "https://api.github.com/repos/Textualize/rich/assignees{/user}", "branches_url": "https://api.github.com/repos/Textualize/rich/branches{/branch}", "tags_url": "https://api.github.com/repos/Textualize/rich/tags", "blobs_url": "https://api.github.com/repos/Textualize/rich/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/Textualize/rich/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/Textualize/rich/git/refs{/sha}", "trees_url": "https://api.github.com/repos/Textualize/rich/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/Textualize/rich/statuses/{sha}", "languages_url": "https://api.github.com/repos/Textualize/rich/languages", "stargazers_url": "https://api.github.com/repos/Textualize/rich/stargazers", "contributors_url": "https://api.github.com/repos/Textualize/rich/contributors", "subscribers_url": "https://api.github.com/repos/Textualize/rich/subscribers", "subscription_url": "https://api.github.com/repos/Textualize/rich/subscription", "commits_url": "https://api.github.com/repos/Textualize/rich/commits{/sha}", "git_commits_url": "https://api.github.com/repos/Textualize/rich/git/commits{/sha}", "comments_url": "https://api.github.com/repos/Textualize/rich/comments{/number}", "issue_comment_url": "https://api.github.com/repos/Textualize/rich/issues/comments{/number}", "contents_url": "https://api.github.com/repos/Textualize/rich/contents/{+path}", "compare_url": "https://api.github.com/repos/Textualize/rich/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/Textualize/rich/merges", "archive_url": "https://api.github.com/repos/Textualize/rich/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/Textualize/rich/downloads", "issues_url": "https://api.github.com/repos/Textualize/rich/issues{/number}", "pulls_url": "https://api.github.com/repos/Textualize/rich/pulls{/number}", "milestones_url": "https://api.github.com/repos/Textualize/rich/milestones{/number}", "notifications_url": "https://api.github.com/repos/Textualize/rich/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/Textualize/rich/labels{/name}", "releases_url": "https://api.github.com/repos/Textualize/rich/releases{/id}", "deployments_url": "https://api.github.com/repos/Textualize/rich/deployments", "created_at": "2019-11-10T15:28:09Z", "updated_at": "2022-03-31T21:04:50Z", "pushed_at": "2022-03-31T17:58:25Z", "git_url": "git://github.com/Textualize/rich.git", "ssh_url": "git@github.com:Textualize/rich.git", "clone_url": "https://github.com/Textualize/rich.git", "svn_url": "https://github.com/Textualize/rich", "homepage": "https://rich.readthedocs.io/en/latest/", "size": 48072, "stargazers_count": 36147, "watchers_count": 36147, "language": "Python", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 1180, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 42, "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit", "node_id": "MDc6TGljZW5zZTEz"}, "allow_forking": true, "is_template": false, "topics": ["ansi-colors", "emoji", "markdown", "progress-bar", "progress-bar-python", "python", "python-library", "python3", "rich", "syntax-highlighting", "tables", "terminal", "terminal-color", "traceback", "tracebacks-rich"], "visibility": "public", "forks": 1180, "open_issues": 42, "watchers": 36147, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/Textualize/rich/pulls/1621"}, "html": {"href": "https://github.com/Textualize/rich/pull/1621"}, "issue": {"href": "https://api.github.com/repos/Textualize/rich/issues/1621"}, "comments": {"href": "https://api.github.com/repos/Textualize/rich/issues/1621/comments"}, "review_comments": {"href": "https://api.github.com/repos/Textualize/rich/pulls/1621/comments"}, "review_comment": {"href": "https://api.github.com/repos/Textualize/rich/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/Textualize/rich/pulls/1621/commits"}, "statuses": {"href": "https://api.github.com/repos/Textualize/rich/statuses/a3df6b1874612391a9f6da291a8d368215fae6d5"}}, "author_association": "NONE", "auto_merge": null, "active_lock_reason": null}, {"url": "https://api.github.com/repos/Textualize/rich/pulls/1609", "id": 761027842, "node_id": "PR_kwDODSlIsc4tXF0C", "html_url": "https://github.com/Textualize/rich/pull/1609", "diff_url": "https://github.com/Textualize/rich/pull/1609.diff", "patch_url": "https://github.com/Textualize/rich/pull/1609.patch", "issue_url": "https://api.github.com/repos/Textualize/rich/issues/1609", "number": 1609, "state": "open", "locked": false, "title": "Indeterminate progress tracking", "user": {"login": "mrvkino", "id": 279511, "node_id": "MDQ6VXNlcjI3OTUxMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/279511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrvkino", "html_url": "https://github.com/mrvkino", "followers_url": "https://api.github.com/users/mrvkino/followers", "following_url": "https://api.github.com/users/mrvkino/following{/other_user}", "gists_url": "https://api.github.com/users/mrvkino/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrvkino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrvkino/subscriptions", "organizations_url": "https://api.github.com/users/mrvkino/orgs", "repos_url": "https://api.github.com/users/mrvkino/repos", "events_url": "https://api.github.com/users/mrvkino/events{/privacy}", "received_events_url": "https://api.github.com/users/mrvkino/received_events", "type": "User", "site_admin": false}, "body": "## Type of changes\r\n\r\n- [ ] Bug fix\r\n- [x] New feature\r\n- [x] Documentation / docstrings\r\n- [x] Tests\r\n- [ ] Other\r\n\r\n## Checklist\r\n\r\n- [x] I've run the latest [black](https://github.com/psf/black) with default args on new code.\r\n- [x] I've updated CHANGELOG.md and CONTRIBUTORS.md where appropriate.\r\n- [x] I've added tests for new code.\r\n- [x] I accept that @willmcgugan may be pedantic in the code review.\r\n\r\n## Description\r\n\r\nA task tracking the progress of an indeterminate process can be done by adding `float(\"inf\")` as a value to the `total` attribute of the `progress.add_task` method or `track` function.\r\n\r\nThis will display a pulsing progress bar. Also, columns can be updated as normal with calls to `progress.update`. The number of element completed and the time elapse will work as expected. The value for the total in columns will be `?` and any completion percentage will be calculated as `0%` or equivalent.\r\n\r\nThe new progress bar has been added in the example provided by the module `rich.progress`.\r\n", "created_at": "2021-10-19T03:19:28Z", "updated_at": "2022-02-13T03:50:46Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "e242badb2db7709994a097475ab598c8a6b2ea85", "assignee": null, "assignees": [], "requested_reviewers": [], "requested_teams": [], "labels": [], "milestone": null, "draft": false, "commits_url": "https://api.github.com/repos/Textualize/rich/pulls/1609/commits", "review_comments_url": "https://api.github.com/repos/Textualize/rich/pulls/1609/comments", "review_comment_url": "https://api.github.com/repos/Textualize/rich/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/Textualize/rich/issues/1609/comments", "statuses_url": "https://api.github.com/repos/Textualize/rich/statuses/1725ac2fa6353b0e992bedb25667f79e1c67df1f", "head": {"label": "mrvkino:indeterminate_progress", "ref": "indeterminate_progress", "sha": "1725ac2fa6353b0e992bedb25667f79e1c67df1f", "user": {"login": "mrvkino", "id": 279511, "node_id": "MDQ6VXNlcjI3OTUxMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/279511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrvkino", "html_url": "https://github.com/mrvkino", "followers_url": "https://api.github.com/users/mrvkino/followers", "following_url": "https://api.github.com/users/mrvkino/following{/other_user}", "gists_url": "https://api.github.com/users/mrvkino/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrvkino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrvkino/subscriptions", "organizations_url": "https://api.github.com/users/mrvkino/orgs", "repos_url": "https://api.github.com/users/mrvkino/repos", "events_url": "https://api.github.com/users/mrvkino/events{/privacy}", "received_events_url": "https://api.github.com/users/mrvkino/received_events", "type": "User", "site_admin": false}, "repo": {"id": 411501479, "node_id": "R_kgDOGIcDpw", "name": "rich", "full_name": "mrvkino/rich", "private": false, "owner": {"login": "mrvkino", "id": 279511, "node_id": "MDQ6VXNlcjI3OTUxMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/279511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrvkino", "html_url": "https://github.com/mrvkino", "followers_url": "https://api.github.com/users/mrvkino/followers", "following_url": "https://api.github.com/users/mrvkino/following{/other_user}", "gists_url": "https://api.github.com/users/mrvkino/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrvkino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrvkino/subscriptions", "organizations_url": "https://api.github.com/users/mrvkino/orgs", "repos_url": "https://api.github.com/users/mrvkino/repos", "events_url": "https://api.github.com/users/mrvkino/events{/privacy}", "received_events_url": "https://api.github.com/users/mrvkino/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/mrvkino/rich", "description": "Rich is a Python library for rich text and beautiful formatting in the terminal.", "fork": true, "url": "https://api.github.com/repos/mrvkino/rich", "forks_url": "https://api.github.com/repos/mrvkino/rich/forks", "keys_url": "https://api.github.com/repos/mrvkino/rich/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/mrvkino/rich/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/mrvkino/rich/teams", "hooks_url": "https://api.github.com/repos/mrvkino/rich/hooks", "issue_events_url": "https://api.github.com/repos/mrvkino/rich/issues/events{/number}", "events_url": "https://api.github.com/repos/mrvkino/rich/events", "assignees_url": "https://api.github.com/repos/mrvkino/rich/assignees{/user}", "branches_url": "https://api.github.com/repos/mrvkino/rich/branches{/branch}", "tags_url": "https://api.github.com/repos/mrvkino/rich/tags", "blobs_url": "https://api.github.com/repos/mrvkino/rich/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/mrvkino/rich/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/mrvkino/rich/git/refs{/sha}", "trees_url": "https://api.github.com/repos/mrvkino/rich/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/mrvkino/rich/statuses/{sha}", "languages_url": "https://api.github.com/repos/mrvkino/rich/languages", "stargazers_url": "https://api.github.com/repos/mrvkino/rich/stargazers", "contributors_url": "https://api.github.com/repos/mrvkino/rich/contributors", "subscribers_url": "https://api.github.com/repos/mrvkino/rich/subscribers", "subscription_url": "https://api.github.com/repos/mrvkino/rich/subscription", "commits_url": "https://api.github.com/repos/mrvkino/rich/commits{/sha}", "git_commits_url": "https://api.github.com/repos/mrvkino/rich/git/commits{/sha}", "comments_url": "https://api.github.com/repos/mrvkino/rich/comments{/number}", "issue_comment_url": "https://api.github.com/repos/mrvkino/rich/issues/comments{/number}", "contents_url": "https://api.github.com/repos/mrvkino/rich/contents/{+path}", "compare_url": "https://api.github.com/repos/mrvkino/rich/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/mrvkino/rich/merges", "archive_url": "https://api.github.com/repos/mrvkino/rich/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/mrvkino/rich/downloads", "issues_url": "https://api.github.com/repos/mrvkino/rich/issues{/number}", "pulls_url": "https://api.github.com/repos/mrvkino/rich/pulls{/number}", "milestones_url": "https://api.github.com/repos/mrvkino/rich/milestones{/number}", "notifications_url": "https://api.github.com/repos/mrvkino/rich/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/mrvkino/rich/labels{/name}", "releases_url": "https://api.github.com/repos/mrvkino/rich/releases{/id}", "deployments_url": "https://api.github.com/repos/mrvkino/rich/deployments", "created_at": "2021-09-29T02:17:02Z", "updated_at": "2022-01-10T18:45:53Z", "pushed_at": "2022-02-13T03:44:16Z", "git_url": "git://github.com/mrvkino/rich.git", "ssh_url": "git@github.com:mrvkino/rich.git", "clone_url": "https://github.com/mrvkino/rich.git", "svn_url": "https://github.com/mrvkino/rich", "homepage": "https://rich.readthedocs.io/en/latest/", "size": 40786, "stargazers_count": 1, "watchers_count": 1, "language": "Python", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 0, "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit", "node_id": "MDc6TGljZW5zZTEz"}, "allow_forking": true, "is_template": false, "topics": [], "visibility": "public", "forks": 0, "open_issues": 0, "watchers": 1, "default_branch": "master"}}, "base": {"label": "Textualize:master", "ref": "master", "sha": "877c53d9c58002b517f451139dda148619e97b33", "user": {"login": "Textualize", "id": 93378883, "node_id": "O_kgDOBZDZQw", "avatar_url": "https://avatars.githubusercontent.com/u/93378883?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Textualize", "html_url": "https://github.com/Textualize", "followers_url": "https://api.github.com/users/Textualize/followers", "following_url": "https://api.github.com/users/Textualize/following{/other_user}", "gists_url": "https://api.github.com/users/Textualize/gists{/gist_id}", "starred_url": "https://api.github.com/users/Textualize/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Textualize/subscriptions", "organizations_url": "https://api.github.com/users/Textualize/orgs", "repos_url": "https://api.github.com/users/Textualize/repos", "events_url": "https://api.github.com/users/Textualize/events{/privacy}", "received_events_url": "https://api.github.com/users/Textualize/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 220809393, "node_id": "MDEwOlJlcG9zaXRvcnkyMjA4MDkzOTM=", "name": "rich", "full_name": "Textualize/rich", "private": false, "owner": {"login": "Textualize", "id": 93378883, "node_id": "O_kgDOBZDZQw", "avatar_url": "https://avatars.githubusercontent.com/u/93378883?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Textualize", "html_url": "https://github.com/Textualize", "followers_url": "https://api.github.com/users/Textualize/followers", "following_url": "https://api.github.com/users/Textualize/following{/other_user}", "gists_url": "https://api.github.com/users/Textualize/gists{/gist_id}", "starred_url": "https://api.github.com/users/Textualize/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Textualize/subscriptions", "organizations_url": "https://api.github.com/users/Textualize/orgs", "repos_url": "https://api.github.com/users/Textualize/repos", "events_url": "https://api.github.com/users/Textualize/events{/privacy}", "received_events_url": "https://api.github.com/users/Textualize/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/Textualize/rich", "description": "Rich is a Python library for rich text and beautiful formatting in the terminal.", "fork": false, "url": "https://api.github.com/repos/Textualize/rich", "forks_url": "https://api.github.com/repos/Textualize/rich/forks", "keys_url": "https://api.github.com/repos/Textualize/rich/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/Textualize/rich/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/Textualize/rich/teams", "hooks_url": "https://api.github.com/repos/Textualize/rich/hooks", "issue_events_url": "https://api.github.com/repos/Textualize/rich/issues/events{/number}", "events_url": "https://api.github.com/repos/Textualize/rich/events", "assignees_url": "https://api.github.com/repos/Textualize/rich/assignees{/user}", "branches_url": "https://api.github.com/repos/Textualize/rich/branches{/branch}", "tags_url": "https://api.github.com/repos/Textualize/rich/tags", "blobs_url": "https://api.github.com/repos/Textualize/rich/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/Textualize/rich/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/Textualize/rich/git/refs{/sha}", "trees_url": "https://api.github.com/repos/Textualize/rich/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/Textualize/rich/statuses/{sha}", "languages_url": "https://api.github.com/repos/Textualize/rich/languages", "stargazers_url": "https://api.github.com/repos/Textualize/rich/stargazers", "contributors_url": "https://api.github.com/repos/Textualize/rich/contributors", "subscribers_url": "https://api.github.com/repos/Textualize/rich/subscribers", "subscription_url": "https://api.github.com/repos/Textualize/rich/subscription", "commits_url": "https://api.github.com/repos/Textualize/rich/commits{/sha}", "git_commits_url": "https://api.github.com/repos/Textualize/rich/git/commits{/sha}", "comments_url": "https://api.github.com/repos/Textualize/rich/comments{/number}", "issue_comment_url": "https://api.github.com/repos/Textualize/rich/issues/comments{/number}", "contents_url": "https://api.github.com/repos/Textualize/rich/contents/{+path}", "compare_url": "https://api.github.com/repos/Textualize/rich/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/Textualize/rich/merges", "archive_url": "https://api.github.com/repos/Textualize/rich/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/Textualize/rich/downloads", "issues_url": "https://api.github.com/repos/Textualize/rich/issues{/number}", "pulls_url": "https://api.github.com/repos/Textualize/rich/pulls{/number}", "milestones_url": "https://api.github.com/repos/Textualize/rich/milestones{/number}", "notifications_url": "https://api.github.com/repos/Textualize/rich/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/Textualize/rich/labels{/name}", "releases_url": "https://api.github.com/repos/Textualize/rich/releases{/id}", "deployments_url": "https://api.github.com/repos/Textualize/rich/deployments", "created_at": "2019-11-10T15:28:09Z", "updated_at": "2022-03-31T21:04:50Z", "pushed_at": "2022-03-31T17:58:25Z", "git_url": "git://github.com/Textualize/rich.git", "ssh_url": "git@github.com:Textualize/rich.git", "clone_url": "https://github.com/Textualize/rich.git", "svn_url": "https://github.com/Textualize/rich", "homepage": "https://rich.readthedocs.io/en/latest/", "size": 48072, "stargazers_count": 36147, "watchers_count": 36147, "language": "Python", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 1180, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 42, "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit", "node_id": "MDc6TGljZW5zZTEz"}, "allow_forking": true, "is_template": false, "topics": ["ansi-colors", "emoji", "markdown", "progress-bar", "progress-bar-python", "python", "python-library", "python3", "rich", "syntax-highlighting", "tables", "terminal", "terminal-color", "traceback", "tracebacks-rich"], "visibility": "public", "forks": 1180, "open_issues": 42, "watchers": 36147, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/Textualize/rich/pulls/1609"}, "html": {"href": "https://github.com/Textualize/rich/pull/1609"}, "issue": {"href": "https://api.github.com/repos/Textualize/rich/issues/1609"}, "comments": {"href": "https://api.github.com/repos/Textualize/rich/issues/1609/comments"}, "review_comments": {"href": "https://api.github.com/repos/Textualize/rich/pulls/1609/comments"}, "review_comment": {"href": "https://api.github.com/repos/Textualize/rich/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/Textualize/rich/pulls/1609/commits"}, "statuses": {"href": "https://api.github.com/repos/Textualize/rich/statuses/1725ac2fa6353b0e992bedb25667f79e1c67df1f"}}, "author_association": "NONE", "auto_merge": null, "active_lock_reason": null}, {"url": "https://api.github.com/repos/Textualize/rich/pulls/1512", "id": 741091648, "node_id": "PR_kwDODSlIsc4sLClA", "html_url": "https://github.com/Textualize/rich/pull/1512", "diff_url": "https://github.com/Textualize/rich/pull/1512.diff", "patch_url": "https://github.com/Textualize/rich/pull/1512.patch", "issue_url": "https://api.github.com/repos/Textualize/rich/issues/1512", "number": 1512, "state": "open", "locked": false, "title": "Allow limiting of consecutive log time omissions.", "user": {"login": "aidaco", "id": 32422559, "node_id": "MDQ6VXNlcjMyNDIyNTU5", "avatar_url": "https://avatars.githubusercontent.com/u/32422559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aidaco", "html_url": "https://github.com/aidaco", "followers_url": "https://api.github.com/users/aidaco/followers", "following_url": "https://api.github.com/users/aidaco/following{/other_user}", "gists_url": "https://api.github.com/users/aidaco/gists{/gist_id}", "starred_url": "https://api.github.com/users/aidaco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aidaco/subscriptions", "organizations_url": "https://api.github.com/users/aidaco/orgs", "repos_url": "https://api.github.com/users/aidaco/repos", "events_url": "https://api.github.com/users/aidaco/events{/privacy}", "received_events_url": "https://api.github.com/users/aidaco/received_events", "type": "User", "site_admin": false}, "body": "## Type of changes\r\n\r\n- [ ] Bug fix\r\n- [X] New feature\r\n- [X] Documentation / docstrings\r\n- [X] Tests\r\n- [ ] Other\r\n\r\n## Checklist\r\n\r\n- [X] I've run the latest [black](https://github.com/psf/black) with default args on new code.\r\n- [ ] I've updated CHANGELOG.md and CONTRIBUTORS.md where appropriate.\r\n  - How should CHANGELOG be updated?\r\n- [X] I've added tests for new code.\r\n  - Not great, but present.\r\n- [X] I accept that @willmcgugan may be pedantic in the code review.\r\n\r\n## Description\r\n\r\nCloses #1482 : implements limit on omitted log times. Includes a basic test, a new example, and updated docstrings.\r\n\r\n", "created_at": "2021-09-23T06:23:13Z", "updated_at": "2022-02-26T19:42:35Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "65b0a5cdd14b6382ab38360fbc1cedbd717e5634", "assignee": null, "assignees": [], "requested_reviewers": [], "requested_teams": [], "labels": [], "milestone": null, "draft": false, "commits_url": "https://api.github.com/repos/Textualize/rich/pulls/1512/commits", "review_comments_url": "https://api.github.com/repos/Textualize/rich/pulls/1512/comments", "review_comment_url": "https://api.github.com/repos/Textualize/rich/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/Textualize/rich/issues/1512/comments", "statuses_url": "https://api.github.com/repos/Textualize/rich/statuses/19a9cf5f4388789b96cf52d87e522c1b515c9a34", "head": {"label": "aidaco:master", "ref": "master", "sha": "19a9cf5f4388789b96cf52d87e522c1b515c9a34", "user": {"login": "aidaco", "id": 32422559, "node_id": "MDQ6VXNlcjMyNDIyNTU5", "avatar_url": "https://avatars.githubusercontent.com/u/32422559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aidaco", "html_url": "https://github.com/aidaco", "followers_url": "https://api.github.com/users/aidaco/followers", "following_url": "https://api.github.com/users/aidaco/following{/other_user}", "gists_url": "https://api.github.com/users/aidaco/gists{/gist_id}", "starred_url": "https://api.github.com/users/aidaco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aidaco/subscriptions", "organizations_url": "https://api.github.com/users/aidaco/orgs", "repos_url": "https://api.github.com/users/aidaco/repos", "events_url": "https://api.github.com/users/aidaco/events{/privacy}", "received_events_url": "https://api.github.com/users/aidaco/received_events", "type": "User", "site_admin": false}, "repo": {"id": 408127336, "node_id": "MDEwOlJlcG9zaXRvcnk0MDgxMjczMzY=", "name": "rich", "full_name": "aidaco/rich", "private": false, "owner": {"login": "aidaco", "id": 32422559, "node_id": "MDQ6VXNlcjMyNDIyNTU5", "avatar_url": "https://avatars.githubusercontent.com/u/32422559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aidaco", "html_url": "https://github.com/aidaco", "followers_url": "https://api.github.com/users/aidaco/followers", "following_url": "https://api.github.com/users/aidaco/following{/other_user}", "gists_url": "https://api.github.com/users/aidaco/gists{/gist_id}", "starred_url": "https://api.github.com/users/aidaco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aidaco/subscriptions", "organizations_url": "https://api.github.com/users/aidaco/orgs", "repos_url": "https://api.github.com/users/aidaco/repos", "events_url": "https://api.github.com/users/aidaco/events{/privacy}", "received_events_url": "https://api.github.com/users/aidaco/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/aidaco/rich", "description": "Rich is a Python library for rich text and beautiful formatting in the terminal.", "fork": true, "url": "https://api.github.com/repos/aidaco/rich", "forks_url": "https://api.github.com/repos/aidaco/rich/forks", "keys_url": "https://api.github.com/repos/aidaco/rich/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/aidaco/rich/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/aidaco/rich/teams", "hooks_url": "https://api.github.com/repos/aidaco/rich/hooks", "issue_events_url": "https://api.github.com/repos/aidaco/rich/issues/events{/number}", "events_url": "https://api.github.com/repos/aidaco/rich/events", "assignees_url": "https://api.github.com/repos/aidaco/rich/assignees{/user}", "branches_url": "https://api.github.com/repos/aidaco/rich/branches{/branch}", "tags_url": "https://api.github.com/repos/aidaco/rich/tags", "blobs_url": "https://api.github.com/repos/aidaco/rich/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/aidaco/rich/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/aidaco/rich/git/refs{/sha}", "trees_url": "https://api.github.com/repos/aidaco/rich/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/aidaco/rich/statuses/{sha}", "languages_url": "https://api.github.com/repos/aidaco/rich/languages", "stargazers_url": "https://api.github.com/repos/aidaco/rich/stargazers", "contributors_url": "https://api.github.com/repos/aidaco/rich/contributors", "subscribers_url": "https://api.github.com/repos/aidaco/rich/subscribers", "subscription_url": "https://api.github.com/repos/aidaco/rich/subscription", "commits_url": "https://api.github.com/repos/aidaco/rich/commits{/sha}", "git_commits_url": "https://api.github.com/repos/aidaco/rich/git/commits{/sha}", "comments_url": "https://api.github.com/repos/aidaco/rich/comments{/number}", "issue_comment_url": "https://api.github.com/repos/aidaco/rich/issues/comments{/number}", "contents_url": "https://api.github.com/repos/aidaco/rich/contents/{+path}", "compare_url": "https://api.github.com/repos/aidaco/rich/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/aidaco/rich/merges", "archive_url": "https://api.github.com/repos/aidaco/rich/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/aidaco/rich/downloads", "issues_url": "https://api.github.com/repos/aidaco/rich/issues{/number}", "pulls_url": "https://api.github.com/repos/aidaco/rich/pulls{/number}", "milestones_url": "https://api.github.com/repos/aidaco/rich/milestones{/number}", "notifications_url": "https://api.github.com/repos/aidaco/rich/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/aidaco/rich/labels{/name}", "releases_url": "https://api.github.com/repos/aidaco/rich/releases{/id}", "deployments_url": "https://api.github.com/repos/aidaco/rich/deployments", "created_at": "2021-09-19T12:56:25Z", "updated_at": "2022-01-05T10:58:22Z", "pushed_at": "2022-02-16T06:50:40Z", "git_url": "git://github.com/aidaco/rich.git", "ssh_url": "git@github.com:aidaco/rich.git", "clone_url": "https://github.com/aidaco/rich.git", "svn_url": "https://github.com/aidaco/rich", "homepage": "https://rich.readthedocs.io/en/latest/", "size": 39778, "stargazers_count": 0, "watchers_count": 0, "language": "Python", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 0, "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit", "node_id": "MDc6TGljZW5zZTEz"}, "allow_forking": true, "is_template": false, "topics": [], "visibility": "public", "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "Textualize:master", "ref": "master", "sha": "eb673d1204340738d3084ebc2e4c789a35a4e49b", "user": {"login": "Textualize", "id": 93378883, "node_id": "O_kgDOBZDZQw", "avatar_url": "https://avatars.githubusercontent.com/u/93378883?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Textualize", "html_url": "https://github.com/Textualize", "followers_url": "https://api.github.com/users/Textualize/followers", "following_url": "https://api.github.com/users/Textualize/following{/other_user}", "gists_url": "https://api.github.com/users/Textualize/gists{/gist_id}", "starred_url": "https://api.github.com/users/Textualize/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Textualize/subscriptions", "organizations_url": "https://api.github.com/users/Textualize/orgs", "repos_url": "https://api.github.com/users/Textualize/repos", "events_url": "https://api.github.com/users/Textualize/events{/privacy}", "received_events_url": "https://api.github.com/users/Textualize/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 220809393, "node_id": "MDEwOlJlcG9zaXRvcnkyMjA4MDkzOTM=", "name": "rich", "full_name": "Textualize/rich", "private": false, "owner": {"login": "Textualize", "id": 93378883, "node_id": "O_kgDOBZDZQw", "avatar_url": "https://avatars.githubusercontent.com/u/93378883?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Textualize", "html_url": "https://github.com/Textualize", "followers_url": "https://api.github.com/users/Textualize/followers", "following_url": "https://api.github.com/users/Textualize/following{/other_user}", "gists_url": "https://api.github.com/users/Textualize/gists{/gist_id}", "starred_url": "https://api.github.com/users/Textualize/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Textualize/subscriptions", "organizations_url": "https://api.github.com/users/Textualize/orgs", "repos_url": "https://api.github.com/users/Textualize/repos", "events_url": "https://api.github.com/users/Textualize/events{/privacy}", "received_events_url": "https://api.github.com/users/Textualize/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/Textualize/rich", "description": "Rich is a Python library for rich text and beautiful formatting in the terminal.", "fork": false, "url": "https://api.github.com/repos/Textualize/rich", "forks_url": "https://api.github.com/repos/Textualize/rich/forks", "keys_url": "https://api.github.com/repos/Textualize/rich/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/Textualize/rich/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/Textualize/rich/teams", "hooks_url": "https://api.github.com/repos/Textualize/rich/hooks", "issue_events_url": "https://api.github.com/repos/Textualize/rich/issues/events{/number}", "events_url": "https://api.github.com/repos/Textualize/rich/events", "assignees_url": "https://api.github.com/repos/Textualize/rich/assignees{/user}", "branches_url": "https://api.github.com/repos/Textualize/rich/branches{/branch}", "tags_url": "https://api.github.com/repos/Textualize/rich/tags", "blobs_url": "https://api.github.com/repos/Textualize/rich/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/Textualize/rich/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/Textualize/rich/git/refs{/sha}", "trees_url": "https://api.github.com/repos/Textualize/rich/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/Textualize/rich/statuses/{sha}", "languages_url": "https://api.github.com/repos/Textualize/rich/languages", "stargazers_url": "https://api.github.com/repos/Textualize/rich/stargazers", "contributors_url": "https://api.github.com/repos/Textualize/rich/contributors", "subscribers_url": "https://api.github.com/repos/Textualize/rich/subscribers", "subscription_url": "https://api.github.com/repos/Textualize/rich/subscription", "commits_url": "https://api.github.com/repos/Textualize/rich/commits{/sha}", "git_commits_url": "https://api.github.com/repos/Textualize/rich/git/commits{/sha}", "comments_url": "https://api.github.com/repos/Textualize/rich/comments{/number}", "issue_comment_url": "https://api.github.com/repos/Textualize/rich/issues/comments{/number}", "contents_url": "https://api.github.com/repos/Textualize/rich/contents/{+path}", "compare_url": "https://api.github.com/repos/Textualize/rich/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/Textualize/rich/merges", "archive_url": "https://api.github.com/repos/Textualize/rich/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/Textualize/rich/downloads", "issues_url": "https://api.github.com/repos/Textualize/rich/issues{/number}", "pulls_url": "https://api.github.com/repos/Textualize/rich/pulls{/number}", "milestones_url": "https://api.github.com/repos/Textualize/rich/milestones{/number}", "notifications_url": "https://api.github.com/repos/Textualize/rich/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/Textualize/rich/labels{/name}", "releases_url": "https://api.github.com/repos/Textualize/rich/releases{/id}", "deployments_url": "https://api.github.com/repos/Textualize/rich/deployments", "created_at": "2019-11-10T15:28:09Z", "updated_at": "2022-03-31T21:04:50Z", "pushed_at": "2022-03-31T17:58:25Z", "git_url": "git://github.com/Textualize/rich.git", "ssh_url": "git@github.com:Textualize/rich.git", "clone_url": "https://github.com/Textualize/rich.git", "svn_url": "https://github.com/Textualize/rich", "homepage": "https://rich.readthedocs.io/en/latest/", "size": 48072, "stargazers_count": 36147, "watchers_count": 36147, "language": "Python", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 1180, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 42, "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit", "node_id": "MDc6TGljZW5zZTEz"}, "allow_forking": true, "is_template": false, "topics": ["ansi-colors", "emoji", "markdown", "progress-bar", "progress-bar-python", "python", "python-library", "python3", "rich", "syntax-highlighting", "tables", "terminal", "terminal-color", "traceback", "tracebacks-rich"], "visibility": "public", "forks": 1180, "open_issues": 42, "watchers": 36147, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/Textualize/rich/pulls/1512"}, "html": {"href": "https://github.com/Textualize/rich/pull/1512"}, "issue": {"href": "https://api.github.com/repos/Textualize/rich/issues/1512"}, "comments": {"href": "https://api.github.com/repos/Textualize/rich/issues/1512/comments"}, "review_comments": {"href": "https://api.github.com/repos/Textualize/rich/pulls/1512/comments"}, "review_comment": {"href": "https://api.github.com/repos/Textualize/rich/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/Textualize/rich/pulls/1512/commits"}, "statuses": {"href": "https://api.github.com/repos/Textualize/rich/statuses/19a9cf5f4388789b96cf52d87e522c1b515c9a34"}}, "author_association": "CONTRIBUTOR", "auto_merge": null, "active_lock_reason": null}, {"url": "https://api.github.com/repos/Textualize/rich/pulls/1497", "id": 736890200, "node_id": "PR_kwDODSlIsc4r7A1Y", "html_url": "https://github.com/Textualize/rich/pull/1497", "diff_url": "https://github.com/Textualize/rich/pull/1497.diff", "patch_url": "https://github.com/Textualize/rich/pull/1497.patch", "issue_url": "https://api.github.com/repos/Textualize/rich/issues/1497", "number": 1497, "state": "open", "locked": false, "title": "WIP: transient progress.track #1488", "user": {"login": "RonnyPfannschmidt", "id": 156838, "node_id": "MDQ6VXNlcjE1NjgzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/156838?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RonnyPfannschmidt", "html_url": "https://github.com/RonnyPfannschmidt", "followers_url": "https://api.github.com/users/RonnyPfannschmidt/followers", "following_url": "https://api.github.com/users/RonnyPfannschmidt/following{/other_user}", "gists_url": "https://api.github.com/users/RonnyPfannschmidt/gists{/gist_id}", "starred_url": "https://api.github.com/users/RonnyPfannschmidt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RonnyPfannschmidt/subscriptions", "organizations_url": "https://api.github.com/users/RonnyPfannschmidt/orgs", "repos_url": "https://api.github.com/users/RonnyPfannschmidt/repos", "events_url": "https://api.github.com/users/RonnyPfannschmidt/events{/privacy}", "received_events_url": "https://api.github.com/users/RonnyPfannschmidt/received_events", "type": "User", "site_admin": false}, "body": "## Type of changes\r\n\r\n- [ ] New feature\r\n\r\n## Checklist\r\n\r\n- [ ] I've run the latest [black](https://github.com/psf/black) with default args on new code.\r\n- [ ] I've updated CHANGELOG.md and CONTRIBUTORS.md where appropriate.\r\n- [ ] I've added tests for new code.\r\n- [ ] I accept that @willmcgugan may be pedantic in the code review.\r\n\r\n## Description\r\nexperiment with supporting transient as parameter in progress.track\r\n\r\naddressees #1488  ", "created_at": "2021-09-18T11:18:35Z", "updated_at": "2021-10-15T11:33:27Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "de2119dc4162d5878440cccb92c250fe5543fe7a", "assignee": null, "assignees": [], "requested_reviewers": [], "requested_teams": [], "labels": [], "milestone": null, "draft": true, "commits_url": "https://api.github.com/repos/Textualize/rich/pulls/1497/commits", "review_comments_url": "https://api.github.com/repos/Textualize/rich/pulls/1497/comments", "review_comment_url": "https://api.github.com/repos/Textualize/rich/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/Textualize/rich/issues/1497/comments", "statuses_url": "https://api.github.com/repos/Textualize/rich/statuses/f7a20473141af57c7dde64a190a7a13e7d59cf1c", "head": {"label": "RonnyPfannschmidt:rfc-1488-transent-task-track", "ref": "rfc-1488-transent-task-track", "sha": "f7a20473141af57c7dde64a190a7a13e7d59cf1c", "user": {"login": "RonnyPfannschmidt", "id": 156838, "node_id": "MDQ6VXNlcjE1NjgzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/156838?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RonnyPfannschmidt", "html_url": "https://github.com/RonnyPfannschmidt", "followers_url": "https://api.github.com/users/RonnyPfannschmidt/followers", "following_url": "https://api.github.com/users/RonnyPfannschmidt/following{/other_user}", "gists_url": "https://api.github.com/users/RonnyPfannschmidt/gists{/gist_id}", "starred_url": "https://api.github.com/users/RonnyPfannschmidt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RonnyPfannschmidt/subscriptions", "organizations_url": "https://api.github.com/users/RonnyPfannschmidt/orgs", "repos_url": "https://api.github.com/users/RonnyPfannschmidt/repos", "events_url": "https://api.github.com/users/RonnyPfannschmidt/events{/privacy}", "received_events_url": "https://api.github.com/users/RonnyPfannschmidt/received_events", "type": "User", "site_admin": false}, "repo": {"id": 407835186, "node_id": "MDEwOlJlcG9zaXRvcnk0MDc4MzUxODY=", "name": "rich", "full_name": "RonnyPfannschmidt/rich", "private": false, "owner": {"login": "RonnyPfannschmidt", "id": 156838, "node_id": "MDQ6VXNlcjE1NjgzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/156838?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RonnyPfannschmidt", "html_url": "https://github.com/RonnyPfannschmidt", "followers_url": "https://api.github.com/users/RonnyPfannschmidt/followers", "following_url": "https://api.github.com/users/RonnyPfannschmidt/following{/other_user}", "gists_url": "https://api.github.com/users/RonnyPfannschmidt/gists{/gist_id}", "starred_url": "https://api.github.com/users/RonnyPfannschmidt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RonnyPfannschmidt/subscriptions", "organizations_url": "https://api.github.com/users/RonnyPfannschmidt/orgs", "repos_url": "https://api.github.com/users/RonnyPfannschmidt/repos", "events_url": "https://api.github.com/users/RonnyPfannschmidt/events{/privacy}", "received_events_url": "https://api.github.com/users/RonnyPfannschmidt/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/RonnyPfannschmidt/rich", "description": "Rich is a Python library for rich text and beautiful formatting in the terminal.", "fork": true, "url": "https://api.github.com/repos/RonnyPfannschmidt/rich", "forks_url": "https://api.github.com/repos/RonnyPfannschmidt/rich/forks", "keys_url": "https://api.github.com/repos/RonnyPfannschmidt/rich/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/RonnyPfannschmidt/rich/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/RonnyPfannschmidt/rich/teams", "hooks_url": "https://api.github.com/repos/RonnyPfannschmidt/rich/hooks", "issue_events_url": "https://api.github.com/repos/RonnyPfannschmidt/rich/issues/events{/number}", "events_url": "https://api.github.com/repos/RonnyPfannschmidt/rich/events", "assignees_url": "https://api.github.com/repos/RonnyPfannschmidt/rich/assignees{/user}", "branches_url": "https://api.github.com/repos/RonnyPfannschmidt/rich/branches{/branch}", "tags_url": "https://api.github.com/repos/RonnyPfannschmidt/rich/tags", "blobs_url": "https://api.github.com/repos/RonnyPfannschmidt/rich/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/RonnyPfannschmidt/rich/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/RonnyPfannschmidt/rich/git/refs{/sha}", "trees_url": "https://api.github.com/repos/RonnyPfannschmidt/rich/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/RonnyPfannschmidt/rich/statuses/{sha}", "languages_url": "https://api.github.com/repos/RonnyPfannschmidt/rich/languages", "stargazers_url": "https://api.github.com/repos/RonnyPfannschmidt/rich/stargazers", "contributors_url": "https://api.github.com/repos/RonnyPfannschmidt/rich/contributors", "subscribers_url": "https://api.github.com/repos/RonnyPfannschmidt/rich/subscribers", "subscription_url": "https://api.github.com/repos/RonnyPfannschmidt/rich/subscription", "commits_url": "https://api.github.com/repos/RonnyPfannschmidt/rich/commits{/sha}", "git_commits_url": "https://api.github.com/repos/RonnyPfannschmidt/rich/git/commits{/sha}", "comments_url": "https://api.github.com/repos/RonnyPfannschmidt/rich/comments{/number}", "issue_comment_url": "https://api.github.com/repos/RonnyPfannschmidt/rich/issues/comments{/number}", "contents_url": "https://api.github.com/repos/RonnyPfannschmidt/rich/contents/{+path}", "compare_url": "https://api.github.com/repos/RonnyPfannschmidt/rich/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/RonnyPfannschmidt/rich/merges", "archive_url": "https://api.github.com/repos/RonnyPfannschmidt/rich/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/RonnyPfannschmidt/rich/downloads", "issues_url": "https://api.github.com/repos/RonnyPfannschmidt/rich/issues{/number}", "pulls_url": "https://api.github.com/repos/RonnyPfannschmidt/rich/pulls{/number}", "milestones_url": "https://api.github.com/repos/RonnyPfannschmidt/rich/milestones{/number}", "notifications_url": "https://api.github.com/repos/RonnyPfannschmidt/rich/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/RonnyPfannschmidt/rich/labels{/name}", "releases_url": "https://api.github.com/repos/RonnyPfannschmidt/rich/releases{/id}", "deployments_url": "https://api.github.com/repos/RonnyPfannschmidt/rich/deployments", "created_at": "2021-09-18T10:58:40Z", "updated_at": "2022-01-05T10:58:22Z", "pushed_at": "2021-09-18T11:16:55Z", "git_url": "git://github.com/RonnyPfannschmidt/rich.git", "ssh_url": "git@github.com:RonnyPfannschmidt/rich.git", "clone_url": "https://github.com/RonnyPfannschmidt/rich.git", "svn_url": "https://github.com/RonnyPfannschmidt/rich", "homepage": "https://rich.readthedocs.io/en/latest/", "size": 40361, "stargazers_count": 0, "watchers_count": 0, "language": null, "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 0, "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit", "node_id": "MDc6TGljZW5zZTEz"}, "allow_forking": true, "is_template": false, "topics": [], "visibility": "public", "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "Textualize:master", "ref": "master", "sha": "23aa71774457c34fe6d1fb527c1c2972447bb18d", "user": {"login": "Textualize", "id": 93378883, "node_id": "O_kgDOBZDZQw", "avatar_url": "https://avatars.githubusercontent.com/u/93378883?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Textualize", "html_url": "https://github.com/Textualize", "followers_url": "https://api.github.com/users/Textualize/followers", "following_url": "https://api.github.com/users/Textualize/following{/other_user}", "gists_url": "https://api.github.com/users/Textualize/gists{/gist_id}", "starred_url": "https://api.github.com/users/Textualize/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Textualize/subscriptions", "organizations_url": "https://api.github.com/users/Textualize/orgs", "repos_url": "https://api.github.com/users/Textualize/repos", "events_url": "https://api.github.com/users/Textualize/events{/privacy}", "received_events_url": "https://api.github.com/users/Textualize/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 220809393, "node_id": "MDEwOlJlcG9zaXRvcnkyMjA4MDkzOTM=", "name": "rich", "full_name": "Textualize/rich", "private": false, "owner": {"login": "Textualize", "id": 93378883, "node_id": "O_kgDOBZDZQw", "avatar_url": "https://avatars.githubusercontent.com/u/93378883?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Textualize", "html_url": "https://github.com/Textualize", "followers_url": "https://api.github.com/users/Textualize/followers", "following_url": "https://api.github.com/users/Textualize/following{/other_user}", "gists_url": "https://api.github.com/users/Textualize/gists{/gist_id}", "starred_url": "https://api.github.com/users/Textualize/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Textualize/subscriptions", "organizations_url": "https://api.github.com/users/Textualize/orgs", "repos_url": "https://api.github.com/users/Textualize/repos", "events_url": "https://api.github.com/users/Textualize/events{/privacy}", "received_events_url": "https://api.github.com/users/Textualize/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/Textualize/rich", "description": "Rich is a Python library for rich text and beautiful formatting in the terminal.", "fork": false, "url": "https://api.github.com/repos/Textualize/rich", "forks_url": "https://api.github.com/repos/Textualize/rich/forks", "keys_url": "https://api.github.com/repos/Textualize/rich/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/Textualize/rich/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/Textualize/rich/teams", "hooks_url": "https://api.github.com/repos/Textualize/rich/hooks", "issue_events_url": "https://api.github.com/repos/Textualize/rich/issues/events{/number}", "events_url": "https://api.github.com/repos/Textualize/rich/events", "assignees_url": "https://api.github.com/repos/Textualize/rich/assignees{/user}", "branches_url": "https://api.github.com/repos/Textualize/rich/branches{/branch}", "tags_url": "https://api.github.com/repos/Textualize/rich/tags", "blobs_url": "https://api.github.com/repos/Textualize/rich/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/Textualize/rich/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/Textualize/rich/git/refs{/sha}", "trees_url": "https://api.github.com/repos/Textualize/rich/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/Textualize/rich/statuses/{sha}", "languages_url": "https://api.github.com/repos/Textualize/rich/languages", "stargazers_url": "https://api.github.com/repos/Textualize/rich/stargazers", "contributors_url": "https://api.github.com/repos/Textualize/rich/contributors", "subscribers_url": "https://api.github.com/repos/Textualize/rich/subscribers", "subscription_url": "https://api.github.com/repos/Textualize/rich/subscription", "commits_url": "https://api.github.com/repos/Textualize/rich/commits{/sha}", "git_commits_url": "https://api.github.com/repos/Textualize/rich/git/commits{/sha}", "comments_url": "https://api.github.com/repos/Textualize/rich/comments{/number}", "issue_comment_url": "https://api.github.com/repos/Textualize/rich/issues/comments{/number}", "contents_url": "https://api.github.com/repos/Textualize/rich/contents/{+path}", "compare_url": "https://api.github.com/repos/Textualize/rich/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/Textualize/rich/merges", "archive_url": "https://api.github.com/repos/Textualize/rich/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/Textualize/rich/downloads", "issues_url": "https://api.github.com/repos/Textualize/rich/issues{/number}", "pulls_url": "https://api.github.com/repos/Textualize/rich/pulls{/number}", "milestones_url": "https://api.github.com/repos/Textualize/rich/milestones{/number}", "notifications_url": "https://api.github.com/repos/Textualize/rich/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/Textualize/rich/labels{/name}", "releases_url": "https://api.github.com/repos/Textualize/rich/releases{/id}", "deployments_url": "https://api.github.com/repos/Textualize/rich/deployments", "created_at": "2019-11-10T15:28:09Z", "updated_at": "2022-03-31T21:04:50Z", "pushed_at": "2022-03-31T17:58:25Z", "git_url": "git://github.com/Textualize/rich.git", "ssh_url": "git@github.com:Textualize/rich.git", "clone_url": "https://github.com/Textualize/rich.git", "svn_url": "https://github.com/Textualize/rich", "homepage": "https://rich.readthedocs.io/en/latest/", "size": 48072, "stargazers_count": 36147, "watchers_count": 36147, "language": "Python", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 1180, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 42, "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit", "node_id": "MDc6TGljZW5zZTEz"}, "allow_forking": true, "is_template": false, "topics": ["ansi-colors", "emoji", "markdown", "progress-bar", "progress-bar-python", "python", "python-library", "python3", "rich", "syntax-highlighting", "tables", "terminal", "terminal-color", "traceback", "tracebacks-rich"], "visibility": "public", "forks": 1180, "open_issues": 42, "watchers": 36147, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/Textualize/rich/pulls/1497"}, "html": {"href": "https://github.com/Textualize/rich/pull/1497"}, "issue": {"href": "https://api.github.com/repos/Textualize/rich/issues/1497"}, "comments": {"href": "https://api.github.com/repos/Textualize/rich/issues/1497/comments"}, "review_comments": {"href": "https://api.github.com/repos/Textualize/rich/pulls/1497/comments"}, "review_comment": {"href": "https://api.github.com/repos/Textualize/rich/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/Textualize/rich/pulls/1497/commits"}, "statuses": {"href": "https://api.github.com/repos/Textualize/rich/statuses/f7a20473141af57c7dde64a190a7a13e7d59cf1c"}}, "author_association": "NONE", "auto_merge": null, "active_lock_reason": null}, {"url": "https://api.github.com/repos/Textualize/rich/pulls/1473", "id": 730555297, "node_id": "MDExOlB1bGxSZXF1ZXN0NzMwNTU1Mjk3", "html_url": "https://github.com/Textualize/rich/pull/1473", "diff_url": "https://github.com/Textualize/rich/pull/1473.diff", "patch_url": "https://github.com/Textualize/rich/pull/1473.patch", "issue_url": "https://api.github.com/repos/Textualize/rich/issues/1473", "number": 1473, "state": "open", "locked": false, "title": "Add arrows option to rich.tree", "user": {"login": "tusharsadhwani", "id": 43412083, "node_id": "MDQ6VXNlcjQzNDEyMDgz", "avatar_url": "https://avatars.githubusercontent.com/u/43412083?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tusharsadhwani", "html_url": "https://github.com/tusharsadhwani", "followers_url": "https://api.github.com/users/tusharsadhwani/followers", "following_url": "https://api.github.com/users/tusharsadhwani/following{/other_user}", "gists_url": "https://api.github.com/users/tusharsadhwani/gists{/gist_id}", "starred_url": "https://api.github.com/users/tusharsadhwani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tusharsadhwani/subscriptions", "organizations_url": "https://api.github.com/users/tusharsadhwani/orgs", "repos_url": "https://api.github.com/users/tusharsadhwani/repos", "events_url": "https://api.github.com/users/tusharsadhwani/events{/privacy}", "received_events_url": "https://api.github.com/users/tusharsadhwani/received_events", "type": "User", "site_admin": false}, "body": "## Type of changes\r\n\r\n- [ ] Bug fix\r\n- [x] New feature\r\n- [ ] Documentation / docstrings\r\n- [ ] Tests\r\n- [ ] Other\r\n\r\n## Checklist\r\n\r\n- [x] I've run the latest [black](https://github.com/psf/black) with default args on new code.\r\n- [ ] I've updated CHANGELOG.md and CONTRIBUTORS.md where appropriate.\r\n- [ ] I've added tests for new code.\r\n- [x] I accept that @willmcgugan may be pedantic in the code review.\r\n\r\n## Description\r\n\r\nSaw some arrows in another project. Looked pretty neat, so I tried adding those into rich.\r\n\r\n<details><summary>Code snippet:</summary>\r\n\r\n```python\r\nfrom rich import print\r\nfrom rich.tree import Tree\r\n\r\ntree = Tree(\"my tree\", guide_style=\"red\", arrows=True)\r\nfor i in range(5):\r\n    tree.add(f\"item {i}\")\r\nprint(tree)\r\n\r\ntree = Tree(\"my tree\", guide_style=\"bold\", arrows=True)\r\nfor i in range(5):\r\n    tree.add(f\"item {i}\")\r\nprint(tree)\r\n```\r\n\r\n</details>\r\n\r\nExample output:\r\n\r\n![image](https://user-images.githubusercontent.com/43412083/132689359-c65a9240-7811-47c9-9093-6c2627541955.png)\r\n\r\nThoughts?\r\n", "created_at": "2021-09-09T12:54:36Z", "updated_at": "2022-02-27T11:19:29Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "8796d5f110558272a28b68524a32658b4f4066e7", "assignee": null, "assignees": [], "requested_reviewers": [], "requested_teams": [], "labels": [], "milestone": null, "draft": false, "commits_url": "https://api.github.com/repos/Textualize/rich/pulls/1473/commits", "review_comments_url": "https://api.github.com/repos/Textualize/rich/pulls/1473/comments", "review_comment_url": "https://api.github.com/repos/Textualize/rich/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/Textualize/rich/issues/1473/comments", "statuses_url": "https://api.github.com/repos/Textualize/rich/statuses/9168a39e0228ed71a55c5a6217270285362b7ae7", "head": {"label": "tusharsadhwani:tree-arrows", "ref": "tree-arrows", "sha": "9168a39e0228ed71a55c5a6217270285362b7ae7", "user": {"login": "tusharsadhwani", "id": 43412083, "node_id": "MDQ6VXNlcjQzNDEyMDgz", "avatar_url": "https://avatars.githubusercontent.com/u/43412083?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tusharsadhwani", "html_url": "https://github.com/tusharsadhwani", "followers_url": "https://api.github.com/users/tusharsadhwani/followers", "following_url": "https://api.github.com/users/tusharsadhwani/following{/other_user}", "gists_url": "https://api.github.com/users/tusharsadhwani/gists{/gist_id}", "starred_url": "https://api.github.com/users/tusharsadhwani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tusharsadhwani/subscriptions", "organizations_url": "https://api.github.com/users/tusharsadhwani/orgs", "repos_url": "https://api.github.com/users/tusharsadhwani/repos", "events_url": "https://api.github.com/users/tusharsadhwani/events{/privacy}", "received_events_url": "https://api.github.com/users/tusharsadhwani/received_events", "type": "User", "site_admin": false}, "repo": {"id": 401114431, "node_id": "MDEwOlJlcG9zaXRvcnk0MDExMTQ0MzE=", "name": "rich", "full_name": "tusharsadhwani/rich", "private": false, "owner": {"login": "tusharsadhwani", "id": 43412083, "node_id": "MDQ6VXNlcjQzNDEyMDgz", "avatar_url": "https://avatars.githubusercontent.com/u/43412083?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tusharsadhwani", "html_url": "https://github.com/tusharsadhwani", "followers_url": "https://api.github.com/users/tusharsadhwani/followers", "following_url": "https://api.github.com/users/tusharsadhwani/following{/other_user}", "gists_url": "https://api.github.com/users/tusharsadhwani/gists{/gist_id}", "starred_url": "https://api.github.com/users/tusharsadhwani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tusharsadhwani/subscriptions", "organizations_url": "https://api.github.com/users/tusharsadhwani/orgs", "repos_url": "https://api.github.com/users/tusharsadhwani/repos", "events_url": "https://api.github.com/users/tusharsadhwani/events{/privacy}", "received_events_url": "https://api.github.com/users/tusharsadhwani/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/tusharsadhwani/rich", "description": "Rich is a Python library for rich text and beautiful formatting in the terminal.", "fork": true, "url": "https://api.github.com/repos/tusharsadhwani/rich", "forks_url": "https://api.github.com/repos/tusharsadhwani/rich/forks", "keys_url": "https://api.github.com/repos/tusharsadhwani/rich/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/tusharsadhwani/rich/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/tusharsadhwani/rich/teams", "hooks_url": "https://api.github.com/repos/tusharsadhwani/rich/hooks", "issue_events_url": "https://api.github.com/repos/tusharsadhwani/rich/issues/events{/number}", "events_url": "https://api.github.com/repos/tusharsadhwani/rich/events", "assignees_url": "https://api.github.com/repos/tusharsadhwani/rich/assignees{/user}", "branches_url": "https://api.github.com/repos/tusharsadhwani/rich/branches{/branch}", "tags_url": "https://api.github.com/repos/tusharsadhwani/rich/tags", "blobs_url": "https://api.github.com/repos/tusharsadhwani/rich/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/tusharsadhwani/rich/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/tusharsadhwani/rich/git/refs{/sha}", "trees_url": "https://api.github.com/repos/tusharsadhwani/rich/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/tusharsadhwani/rich/statuses/{sha}", "languages_url": "https://api.github.com/repos/tusharsadhwani/rich/languages", "stargazers_url": "https://api.github.com/repos/tusharsadhwani/rich/stargazers", "contributors_url": "https://api.github.com/repos/tusharsadhwani/rich/contributors", "subscribers_url": "https://api.github.com/repos/tusharsadhwani/rich/subscribers", "subscription_url": "https://api.github.com/repos/tusharsadhwani/rich/subscription", "commits_url": "https://api.github.com/repos/tusharsadhwani/rich/commits{/sha}", "git_commits_url": "https://api.github.com/repos/tusharsadhwani/rich/git/commits{/sha}", "comments_url": "https://api.github.com/repos/tusharsadhwani/rich/comments{/number}", "issue_comment_url": "https://api.github.com/repos/tusharsadhwani/rich/issues/comments{/number}", "contents_url": "https://api.github.com/repos/tusharsadhwani/rich/contents/{+path}", "compare_url": "https://api.github.com/repos/tusharsadhwani/rich/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/tusharsadhwani/rich/merges", "archive_url": "https://api.github.com/repos/tusharsadhwani/rich/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/tusharsadhwani/rich/downloads", "issues_url": "https://api.github.com/repos/tusharsadhwani/rich/issues{/number}", "pulls_url": "https://api.github.com/repos/tusharsadhwani/rich/pulls{/number}", "milestones_url": "https://api.github.com/repos/tusharsadhwani/rich/milestones{/number}", "notifications_url": "https://api.github.com/repos/tusharsadhwani/rich/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/tusharsadhwani/rich/labels{/name}", "releases_url": "https://api.github.com/repos/tusharsadhwani/rich/releases{/id}", "deployments_url": "https://api.github.com/repos/tusharsadhwani/rich/deployments", "created_at": "2021-08-29T18:30:54Z", "updated_at": "2022-01-05T10:58:20Z", "pushed_at": "2021-10-01T16:12:32Z", "git_url": "git://github.com/tusharsadhwani/rich.git", "ssh_url": "git@github.com:tusharsadhwani/rich.git", "clone_url": "https://github.com/tusharsadhwani/rich.git", "svn_url": "https://github.com/tusharsadhwani/rich", "homepage": "https://rich.readthedocs.io/en/latest/", "size": 47551, "stargazers_count": 1, "watchers_count": 1, "language": "Python", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 1, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 1, "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit", "node_id": "MDc6TGljZW5zZTEz"}, "allow_forking": true, "is_template": false, "topics": [], "visibility": "public", "forks": 1, "open_issues": 1, "watchers": 1, "default_branch": "master"}}, "base": {"label": "Textualize:master", "ref": "master", "sha": "03ea4a271405d3ca14459eb28ff3b5de8b2b1fc9", "user": {"login": "Textualize", "id": 93378883, "node_id": "O_kgDOBZDZQw", "avatar_url": "https://avatars.githubusercontent.com/u/93378883?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Textualize", "html_url": "https://github.com/Textualize", "followers_url": "https://api.github.com/users/Textualize/followers", "following_url": "https://api.github.com/users/Textualize/following{/other_user}", "gists_url": "https://api.github.com/users/Textualize/gists{/gist_id}", "starred_url": "https://api.github.com/users/Textualize/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Textualize/subscriptions", "organizations_url": "https://api.github.com/users/Textualize/orgs", "repos_url": "https://api.github.com/users/Textualize/repos", "events_url": "https://api.github.com/users/Textualize/events{/privacy}", "received_events_url": "https://api.github.com/users/Textualize/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 220809393, "node_id": "MDEwOlJlcG9zaXRvcnkyMjA4MDkzOTM=", "name": "rich", "full_name": "Textualize/rich", "private": false, "owner": {"login": "Textualize", "id": 93378883, "node_id": "O_kgDOBZDZQw", "avatar_url": "https://avatars.githubusercontent.com/u/93378883?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Textualize", "html_url": "https://github.com/Textualize", "followers_url": "https://api.github.com/users/Textualize/followers", "following_url": "https://api.github.com/users/Textualize/following{/other_user}", "gists_url": "https://api.github.com/users/Textualize/gists{/gist_id}", "starred_url": "https://api.github.com/users/Textualize/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Textualize/subscriptions", "organizations_url": "https://api.github.com/users/Textualize/orgs", "repos_url": "https://api.github.com/users/Textualize/repos", "events_url": "https://api.github.com/users/Textualize/events{/privacy}", "received_events_url": "https://api.github.com/users/Textualize/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/Textualize/rich", "description": "Rich is a Python library for rich text and beautiful formatting in the terminal.", "fork": false, "url": "https://api.github.com/repos/Textualize/rich", "forks_url": "https://api.github.com/repos/Textualize/rich/forks", "keys_url": "https://api.github.com/repos/Textualize/rich/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/Textualize/rich/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/Textualize/rich/teams", "hooks_url": "https://api.github.com/repos/Textualize/rich/hooks", "issue_events_url": "https://api.github.com/repos/Textualize/rich/issues/events{/number}", "events_url": "https://api.github.com/repos/Textualize/rich/events", "assignees_url": "https://api.github.com/repos/Textualize/rich/assignees{/user}", "branches_url": "https://api.github.com/repos/Textualize/rich/branches{/branch}", "tags_url": "https://api.github.com/repos/Textualize/rich/tags", "blobs_url": "https://api.github.com/repos/Textualize/rich/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/Textualize/rich/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/Textualize/rich/git/refs{/sha}", "trees_url": "https://api.github.com/repos/Textualize/rich/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/Textualize/rich/statuses/{sha}", "languages_url": "https://api.github.com/repos/Textualize/rich/languages", "stargazers_url": "https://api.github.com/repos/Textualize/rich/stargazers", "contributors_url": "https://api.github.com/repos/Textualize/rich/contributors", "subscribers_url": "https://api.github.com/repos/Textualize/rich/subscribers", "subscription_url": "https://api.github.com/repos/Textualize/rich/subscription", "commits_url": "https://api.github.com/repos/Textualize/rich/commits{/sha}", "git_commits_url": "https://api.github.com/repos/Textualize/rich/git/commits{/sha}", "comments_url": "https://api.github.com/repos/Textualize/rich/comments{/number}", "issue_comment_url": "https://api.github.com/repos/Textualize/rich/issues/comments{/number}", "contents_url": "https://api.github.com/repos/Textualize/rich/contents/{+path}", "compare_url": "https://api.github.com/repos/Textualize/rich/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/Textualize/rich/merges", "archive_url": "https://api.github.com/repos/Textualize/rich/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/Textualize/rich/downloads", "issues_url": "https://api.github.com/repos/Textualize/rich/issues{/number}", "pulls_url": "https://api.github.com/repos/Textualize/rich/pulls{/number}", "milestones_url": "https://api.github.com/repos/Textualize/rich/milestones{/number}", "notifications_url": "https://api.github.com/repos/Textualize/rich/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/Textualize/rich/labels{/name}", "releases_url": "https://api.github.com/repos/Textualize/rich/releases{/id}", "deployments_url": "https://api.github.com/repos/Textualize/rich/deployments", "created_at": "2019-11-10T15:28:09Z", "updated_at": "2022-03-31T21:04:50Z", "pushed_at": "2022-03-31T17:58:25Z", "git_url": "git://github.com/Textualize/rich.git", "ssh_url": "git@github.com:Textualize/rich.git", "clone_url": "https://github.com/Textualize/rich.git", "svn_url": "https://github.com/Textualize/rich", "homepage": "https://rich.readthedocs.io/en/latest/", "size": 48072, "stargazers_count": 36147, "watchers_count": 36147, "language": "Python", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 1180, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 42, "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit", "node_id": "MDc6TGljZW5zZTEz"}, "allow_forking": true, "is_template": false, "topics": ["ansi-colors", "emoji", "markdown", "progress-bar", "progress-bar-python", "python", "python-library", "python3", "rich", "syntax-highlighting", "tables", "terminal", "terminal-color", "traceback", "tracebacks-rich"], "visibility": "public", "forks": 1180, "open_issues": 42, "watchers": 36147, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/Textualize/rich/pulls/1473"}, "html": {"href": "https://github.com/Textualize/rich/pull/1473"}, "issue": {"href": "https://api.github.com/repos/Textualize/rich/issues/1473"}, "comments": {"href": "https://api.github.com/repos/Textualize/rich/issues/1473/comments"}, "review_comments": {"href": "https://api.github.com/repos/Textualize/rich/pulls/1473/comments"}, "review_comment": {"href": "https://api.github.com/repos/Textualize/rich/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/Textualize/rich/pulls/1473/commits"}, "statuses": {"href": "https://api.github.com/repos/Textualize/rich/statuses/9168a39e0228ed71a55c5a6217270285362b7ae7"}}, "author_association": "CONTRIBUTOR", "auto_merge": null, "active_lock_reason": null}], "issues": [{"url": "https://api.github.com/repos/Textualize/rich/issues/2139", "repository_url": "https://api.github.com/repos/Textualize/rich", "labels_url": "https://api.github.com/repos/Textualize/rich/issues/2139/labels{/name}", "comments_url": "https://api.github.com/repos/Textualize/rich/issues/2139/comments", "events_url": "https://api.github.com/repos/Textualize/rich/issues/2139/events", "html_url": "https://github.com/Textualize/rich/issues/2139", "id": 1188500086, "node_id": "I_kwDODSlIsc5G1xJ2", "number": 2139, "title": "[BUG] Flickering large progress display on Alacritty", "user": {"login": "naterichman", "id": 68390038, "node_id": "MDQ6VXNlcjY4MzkwMDM4", "avatar_url": "https://avatars.githubusercontent.com/u/68390038?v=4", "gravatar_id": "", "url": "https://api.github.com/users/naterichman", "html_url": "https://github.com/naterichman", "followers_url": "https://api.github.com/users/naterichman/followers", "following_url": "https://api.github.com/users/naterichman/following{/other_user}", "gists_url": "https://api.github.com/users/naterichman/gists{/gist_id}", "starred_url": "https://api.github.com/users/naterichman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/naterichman/subscriptions", "organizations_url": "https://api.github.com/users/naterichman/orgs", "repos_url": "https://api.github.com/users/naterichman/repos", "events_url": "https://api.github.com/users/naterichman/events{/privacy}", "received_events_url": "https://api.github.com/users/naterichman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2200581776, "node_id": "MDU6TGFiZWwyMjAwNTgxNzc2", "url": "https://api.github.com/repos/Textualize/rich/labels/Needs%20triage", "name": "Needs triage", "color": "bfdadc", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-03-31T18:45:21Z", "updated_at": "2022-03-31T18:58:26Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "\r\n**Describe the bug**\r\n\r\nI have a progress bar that sometimes has up to 20 items, and it flickers kind of annoyingly.\r\n\r\nI made a representative example that flickers:\r\n\r\n```python\r\nfrom rich.progress import (\r\n    Progress,\r\n    TimeElapsedColumn,\r\n    SpinnerColumn,\r\n    TimeRemainingColumn,\r\n    TransferSpeedColumn,\r\n    BarColumn,\r\n    DownloadColumn,\r\n)\r\nfrom rich.console import Console\r\nimport time\r\n\r\n\r\ndef gen_stream():\r\n    for i in range(20):\r\n        msg = {\"bar\": i, \"total\": 1, \"completed\": 0}\r\n        yield msg\r\n    for i in range(20_000):\r\n        cycle = int(i / 20)\r\n        bar_num = i % 20\r\n        msg = {\"bar\": bar_num, \"total\": 1000, \"completed\": cycle}\r\n        yield msg\r\n\r\n\r\ndef main():\r\n    console = Console(record=True)\r\n    bars = {}\r\n\r\n    with Progress(\r\n        SpinnerColumn(),\r\n        BarColumn(),\r\n        DownloadColumn(),\r\n        TransferSpeedColumn(),\r\n        TimeElapsedColumn(),\r\n        TimeRemainingColumn(),\r\n        console=console,\r\n        transient=True,\r\n    ) as progress:\r\n\r\n        for msg in gen_stream():\r\n            bar = msg[\"bar\"]\r\n            if bar not in bars:\r\n                bars[bar] = progress.add_task(\"bar1\", start=False, total=1)\r\n            else:\r\n                to_update = {}\r\n                task_id = bars[bar]\r\n                task = progress._tasks[task_id]\r\n                if not task.started:\r\n                    progress.start_task(bars[bar])\r\n                if task.total == 1:\r\n                    to_update[\"total\"] = msg[\"total\"]\r\n                to_update[\"completed\"] = msg[\"completed\"]\r\n\r\n                progress.update(task_id, **to_update)\r\n            time.sleep(0.01)\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    main()\r\n```\r\n\r\n**Platform**\r\n<details>\r\n<summary>Mac OSX with Alacritty</summary>\r\n\r\nWhat platform (Win/Linux/Mac) are you running on? What terminal software are you using?\r\n\r\nMac OSX with Alacritty as a terminal, however I've had the same issue on a Linux box as well.  NOTE: It seems to perform fine on iterm\r\n\r\nI may ask you to copy and paste the output of the following commands. It may save some time if you do it now.\r\n\r\nIf you're using Rich in a terminal:\r\n```\r\npoetry run python -m rich.diagnose\r\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 <class 'rich.console.Console'> \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n\u2502 A high level console interface.                                                  \u2502\r\n\u2502                                                                                  \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\r\n\u2502 \u2502 <console width=205 ColorSystem.TRUECOLOR>                                    \u2502 \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\r\n\u2502                                                                                  \u2502\r\n\u2502     color_system = 'truecolor'                                                   \u2502\r\n\u2502         encoding = 'utf-8'                                                       \u2502\r\n\u2502             file = <_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'> \u2502\r\n\u2502           height = 53                                                            \u2502\r\n\u2502    is_alt_screen = False                                                         \u2502\r\n\u2502 is_dumb_terminal = False                                                         \u2502\r\n\u2502   is_interactive = True                                                          \u2502\r\n\u2502       is_jupyter = False                                                         \u2502\r\n\u2502      is_terminal = True                                                          \u2502\r\n\u2502   legacy_windows = False                                                         \u2502\r\n\u2502         no_color = False                                                         \u2502\r\n\u2502          options = ConsoleOptions(                                               \u2502\r\n\u2502                        size=ConsoleDimensions(width=205, height=53),             \u2502\r\n\u2502                        legacy_windows=False,                                     \u2502\r\n\u2502                        min_width=1,                                              \u2502\r\n\u2502                        max_width=205,                                            \u2502\r\n\u2502                        is_terminal=True,                                         \u2502\r\n\u2502                        encoding='utf-8',                                         \u2502\r\n\u2502                        max_height=53,                                            \u2502\r\n\u2502                        justify=None,                                             \u2502\r\n\u2502                        overflow=None,                                            \u2502\r\n\u2502                        no_wrap=False,                                            \u2502\r\n\u2502                        highlight=None,                                           \u2502\r\n\u2502                        markup=None,                                              \u2502\r\n\u2502                        height=None                                               \u2502\r\n\u2502                    )                                                             \u2502\r\n\u2502            quiet = False                                                         \u2502\r\n\u2502           record = False                                                         \u2502\r\n\u2502         safe_box = True                                                          \u2502\r\n\u2502             size = ConsoleDimensions(width=205, height=53)                       \u2502\r\n\u2502        soft_wrap = False                                                         \u2502\r\n\u2502           stderr = False                                                         \u2502\r\n\u2502            style = None                                                          \u2502\r\n\u2502         tab_size = 8                                                             \u2502\r\n\u2502            width = 205                                                           \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\n```\r\n\r\n```\r\npoetry show rich\r\n poetry show rich\r\nname         : rich\r\nversion      : 10.16.2\r\ndescription  : Render rich text, tables, progress bars, syntax highlighting, markdown and more to the terminal\r\n\r\ndependencies\r\n - colorama >=0.4.0,<0.5.0\r\n - commonmark >=0.9.0,<0.10.0\r\n - pygments >=2.6.0,<3.0.0\r\n - typing-extensions >=3.7.4,<5.0\r\n```\r\n\r\n\r\n\r\n\r\n</details>\r\n", "reactions": {"url": "https://api.github.com/repos/Textualize/rich/issues/2139/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Textualize/rich/issues/2139/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/Textualize/rich/issues/2138", "repository_url": "https://api.github.com/repos/Textualize/rich", "labels_url": "https://api.github.com/repos/Textualize/rich/issues/2138/labels{/name}", "comments_url": "https://api.github.com/repos/Textualize/rich/issues/2138/comments", "events_url": "https://api.github.com/repos/Textualize/rich/issues/2138/events", "html_url": "https://github.com/Textualize/rich/pull/2138", "id": 1188439257, "node_id": "PR_kwDODSlIsc41atD4", "number": 2138, "title": "typo fix", "user": {"login": "akettmann-e24", "id": 50422880, "node_id": "MDQ6VXNlcjUwNDIyODgw", "avatar_url": "https://avatars.githubusercontent.com/u/50422880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akettmann-e24", "html_url": "https://github.com/akettmann-e24", "followers_url": "https://api.github.com/users/akettmann-e24/followers", "following_url": "https://api.github.com/users/akettmann-e24/following{/other_user}", "gists_url": "https://api.github.com/users/akettmann-e24/gists{/gist_id}", "starred_url": "https://api.github.com/users/akettmann-e24/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akettmann-e24/subscriptions", "organizations_url": "https://api.github.com/users/akettmann-e24/orgs", "repos_url": "https://api.github.com/users/akettmann-e24/repos", "events_url": "https://api.github.com/users/akettmann-e24/events{/privacy}", "received_events_url": "https://api.github.com/users/akettmann-e24/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-03-31T17:58:24Z", "updated_at": "2022-03-31T17:59:27Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/Textualize/rich/pulls/2138", "html_url": "https://github.com/Textualize/rich/pull/2138", "diff_url": "https://github.com/Textualize/rich/pull/2138.diff", "patch_url": "https://github.com/Textualize/rich/pull/2138.patch", "merged_at": null}, "body": "Typo fix", "reactions": {"url": "https://api.github.com/repos/Textualize/rich/issues/2138/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Textualize/rich/issues/2138/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/Textualize/rich/issues/2137", "repository_url": "https://api.github.com/repos/Textualize/rich", "labels_url": "https://api.github.com/repos/Textualize/rich/issues/2137/labels{/name}", "comments_url": "https://api.github.com/repos/Textualize/rich/issues/2137/comments", "events_url": "https://api.github.com/repos/Textualize/rich/issues/2137/events", "html_url": "https://github.com/Textualize/rich/issues/2137", "id": 1188361429, "node_id": "I_kwDODSlIsc5G1PTV", "number": 2137, "title": "[QUESTION] How to override markdown header justification?", "user": {"login": "philwareublox", "id": 20516919, "node_id": "MDQ6VXNlcjIwNTE2OTE5", "avatar_url": "https://avatars.githubusercontent.com/u/20516919?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philwareublox", "html_url": "https://github.com/philwareublox", "followers_url": "https://api.github.com/users/philwareublox/followers", "following_url": "https://api.github.com/users/philwareublox/following{/other_user}", "gists_url": "https://api.github.com/users/philwareublox/gists{/gist_id}", "starred_url": "https://api.github.com/users/philwareublox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philwareublox/subscriptions", "organizations_url": "https://api.github.com/users/philwareublox/orgs", "repos_url": "https://api.github.com/users/philwareublox/repos", "events_url": "https://api.github.com/users/philwareublox/events{/privacy}", "received_events_url": "https://api.github.com/users/philwareublox/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-03-31T16:45:59Z", "updated_at": "2022-03-31T16:45:59Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Hello, \r\nCan I override the classes inside the markdown module?\r\nI'd like to change the Heading class, specifically I'd like to override the text.justify = \"center\" in the markdown Heading class. \r\nHow can I do this?\r\n\r\nMany thanks,\r\nPhil.", "reactions": {"url": "https://api.github.com/repos/Textualize/rich/issues/2137/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Textualize/rich/issues/2137/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/Textualize/rich/issues/2133", "repository_url": "https://api.github.com/repos/Textualize/rich", "labels_url": "https://api.github.com/repos/Textualize/rich/issues/2133/labels{/name}", "comments_url": "https://api.github.com/repos/Textualize/rich/issues/2133/comments", "events_url": "https://api.github.com/repos/Textualize/rich/issues/2133/events", "html_url": "https://github.com/Textualize/rich/pull/2133", "id": 1186316437, "node_id": "PR_kwDODSlIsc41TjJ5", "number": 2133, "title": "Fallback to text lexer when lexer not found", "user": {"login": "darrenburns", "id": 5740731, "node_id": "MDQ6VXNlcjU3NDA3MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/5740731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darrenburns", "html_url": "https://github.com/darrenburns", "followers_url": "https://api.github.com/users/darrenburns/followers", "following_url": "https://api.github.com/users/darrenburns/following{/other_user}", "gists_url": "https://api.github.com/users/darrenburns/gists{/gist_id}", "starred_url": "https://api.github.com/users/darrenburns/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darrenburns/subscriptions", "organizations_url": "https://api.github.com/users/darrenburns/orgs", "repos_url": "https://api.github.com/users/darrenburns/repos", "events_url": "https://api.github.com/users/darrenburns/events{/privacy}", "received_events_url": "https://api.github.com/users/darrenburns/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-03-30T11:28:30Z", "updated_at": "2022-03-30T11:34:39Z", "closed_at": null, "author_association": "COLLABORATOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/Textualize/rich/pulls/2133", "html_url": "https://github.com/Textualize/rich/pull/2133", "diff_url": "https://github.com/Textualize/rich/pull/2133.diff", "patch_url": "https://github.com/Textualize/rich/pull/2133.patch", "merged_at": null}, "body": "## Type of changes\r\n\r\n- [x] Bug fix\r\n- [ ] New feature\r\n- [ ] Documentation / docstrings\r\n- [ ] Tests\r\n- [ ] Other\r\n\r\n## Checklist\r\n\r\n- [x] I've run the latest [black](https://github.com/psf/black) with default args on new code.\r\n- [x] I've updated CHANGELOG.md and CONTRIBUTORS.md where appropriate.\r\n- [x] I've added tests for new code.\r\n- [x] I accept that @willmcgugan may be pedantic in the code review.\r\n\r\n## Description\r\n\r\nCatches an exception raised inside pygments by `guess_lexer_for_filename` in the event that no lexer could be found. When this happens, we now fall back to the `TextLexer`.\r\n\r\nCloses #2018\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Textualize/rich/issues/2133/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Textualize/rich/issues/2133/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/Textualize/rich/issues/2131", "repository_url": "https://api.github.com/repos/Textualize/rich", "labels_url": "https://api.github.com/repos/Textualize/rich/issues/2131/labels{/name}", "comments_url": "https://api.github.com/repos/Textualize/rich/issues/2131/comments", "events_url": "https://api.github.com/repos/Textualize/rich/issues/2131/events", "html_url": "https://github.com/Textualize/rich/pull/2131", "id": 1185242821, "node_id": "PR_kwDODSlIsc41P-gG", "number": 2131, "title": "fix(types): typing fixes exposed by extra checking", "user": {"login": "henryiii", "id": 4616906, "node_id": "MDQ6VXNlcjQ2MTY5MDY=", "avatar_url": "https://avatars.githubusercontent.com/u/4616906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/henryiii", "html_url": "https://github.com/henryiii", "followers_url": "https://api.github.com/users/henryiii/followers", "following_url": "https://api.github.com/users/henryiii/following{/other_user}", "gists_url": "https://api.github.com/users/henryiii/gists{/gist_id}", "starred_url": "https://api.github.com/users/henryiii/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/henryiii/subscriptions", "organizations_url": "https://api.github.com/users/henryiii/orgs", "repos_url": "https://api.github.com/users/henryiii/repos", "events_url": "https://api.github.com/users/henryiii/events{/privacy}", "received_events_url": "https://api.github.com/users/henryiii/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-03-29T18:16:24Z", "updated_at": "2022-03-29T18:25:27Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/Textualize/rich/pulls/2131", "html_url": "https://github.com/Textualize/rich/pull/2131", "diff_url": "https://github.com/Textualize/rich/pull/2131.diff", "patch_url": "https://github.com/Textualize/rich/pull/2131.patch", "merged_at": null}, "body": "## Type of changes\r\n\r\n- [ ] Bug fix\r\n- [ ] New feature\r\n- [ ] Documentation / docstrings\r\n- [ ] Tests\r\n- [x] Other\r\n\r\n## Checklist\r\n\r\n- [x] I've run the latest [black](https://github.com/psf/black) with default args on new code.\r\n- [ ] I've updated CHANGELOG.md and CONTRIBUTORS.md where appropriate.\r\n- [ ] I've added tests for new code.\r\n- [x] I accept that @willmcgugan may be pedantic in the code review.\r\n\r\n## Description\r\n\r\nThis enables a few extra mypy checks, and fixes type bugs exposed by those. There were three features enabled, but I've left one off: `warn_unrachable = true`. While it is really useful, and helped expose a couple of the issues fixed here, it also requires type ignoring in about 5-7 places unavoidably, so I've left it off. The most irritating one is `if sys.platform.startswith(\"win\")` constructs, which it will notice are unreachable if you are typing targeting a different platform. MyPy might fix this in https://github.com/python/mypy/issues/12286, which would run all platforms/versions in parallel and then combine the results (which would be really fantastic!), but until then, it's likely better just to manually add `--warn-unreachable` once in a while and make sure the errors reported are expected. (Depending on your preference, of course - I've been turning it on mostly, but I usually don't have quite as many ignores due to it - I thik I counted at least 7 here. If you want to see it, let me know, and I'll PR it).\r\n\r\nI'll comment inline on the others, but this is one fix:\r\n\r\n```python\r\nx: Iterable[Any] = ...\r\nlen(x)\r\n```\r\n\r\nis invalid. You can't take the length of an iterator. Someone could correctly put an iterator function in here, and this will break. Either this should be `Sequence` (which is what I've used here), or you should iterate over the iterator and build a sequence like a list or a tuple and then use that.\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Textualize/rich/issues/2131/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Textualize/rich/issues/2131/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/Textualize/rich/issues/2122", "repository_url": "https://api.github.com/repos/Textualize/rich", "labels_url": "https://api.github.com/repos/Textualize/rich/issues/2122/labels{/name}", "comments_url": "https://api.github.com/repos/Textualize/rich/issues/2122/comments", "events_url": "https://api.github.com/repos/Textualize/rich/issues/2122/events", "html_url": "https://github.com/Textualize/rich/pull/2122", "id": 1182596379, "node_id": "PR_kwDODSlIsc41HOpX", "number": 2122, "title": "Allow default Console parameters to be configured with environment variables", "user": {"login": "joouha", "id": 12154190, "node_id": "MDQ6VXNlcjEyMTU0MTkw", "avatar_url": "https://avatars.githubusercontent.com/u/12154190?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joouha", "html_url": "https://github.com/joouha", "followers_url": "https://api.github.com/users/joouha/followers", "following_url": "https://api.github.com/users/joouha/following{/other_user}", "gists_url": "https://api.github.com/users/joouha/gists{/gist_id}", "starred_url": "https://api.github.com/users/joouha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joouha/subscriptions", "organizations_url": "https://api.github.com/users/joouha/orgs", "repos_url": "https://api.github.com/users/joouha/repos", "events_url": "https://api.github.com/users/joouha/events{/privacy}", "received_events_url": "https://api.github.com/users/joouha/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2022-03-27T17:07:51Z", "updated_at": "2022-03-28T18:51:17Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/Textualize/rich/pulls/2122", "html_url": "https://github.com/Textualize/rich/pull/2122", "diff_url": "https://github.com/Textualize/rich/pull/2122.diff", "patch_url": "https://github.com/Textualize/rich/pull/2122.patch", "merged_at": null}, "body": "## Type of changes\r\n\r\n- [ ] Bug fix\r\n- [x] New feature\r\n- [ ] Documentation / docstrings\r\n- [ ] Tests\r\n- [ ] Other\r\n\r\n## Checklist\r\n\r\n- [x] I've run the latest [black](https://github.com/psf/black) with default args on new code.\r\n- [x] I've updated CHANGELOG.md and CONTRIBUTORS.md where appropriate.\r\n- [x] I've added tests for new code.\r\n- [x] I accept that @willmcgugan may be pedantic in the code review.\r\n\r\n## Description\r\n\r\nThis allows the default values of the `Console` parameters `force_jupyter`, `force_terminal` & `force_interactive` to be overridden by setting the environment variables `RICH_FORCE_JUPYTER`, `RICH_FORCE_TERMINAL` & `RICH_FORCE_INTERACTIVE`.\r\n\r\nFixes issue #2119 \r\n", "reactions": {"url": "https://api.github.com/repos/Textualize/rich/issues/2122/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Textualize/rich/issues/2122/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/Textualize/rich/issues/2120", "repository_url": "https://api.github.com/repos/Textualize/rich", "labels_url": "https://api.github.com/repos/Textualize/rich/issues/2120/labels{/name}", "comments_url": "https://api.github.com/repos/Textualize/rich/issues/2120/comments", "events_url": "https://api.github.com/repos/Textualize/rich/issues/2120/events", "html_url": "https://github.com/Textualize/rich/issues/2120", "id": 1182366546, "node_id": "I_kwDODSlIsc5GeXtS", "number": 2120, "title": "[QUESTION] How to print multiple lines of text in Layout with Live?", "user": {"login": "cassiompf", "id": 20346767, "node_id": "MDQ6VXNlcjIwMzQ2NzY3", "avatar_url": "https://avatars.githubusercontent.com/u/20346767?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cassiompf", "html_url": "https://github.com/cassiompf", "followers_url": "https://api.github.com/users/cassiompf/followers", "following_url": "https://api.github.com/users/cassiompf/following{/other_user}", "gists_url": "https://api.github.com/users/cassiompf/gists{/gist_id}", "starred_url": "https://api.github.com/users/cassiompf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cassiompf/subscriptions", "organizations_url": "https://api.github.com/users/cassiompf/orgs", "repos_url": "https://api.github.com/users/cassiompf/repos", "events_url": "https://api.github.com/users/cassiompf/events{/privacy}", "received_events_url": "https://api.github.com/users/cassiompf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-03-27T05:58:18Z", "updated_at": "2022-03-27T05:58:18Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Hello Folks \ud83d\udc4b, Goodnight. I have a question about the use of this library and I would like to know if there is something ready for it or if you know any way to solve it.\r\n\r\nMy question is if it is possible to print my Logs using Layout with the name of \"body\" in my code. I'm using Layout and always updating with Live.\r\n\r\nThe idea I want to do is similar to this gif I saw:\r\n\r\n<img src=\"https://user-images.githubusercontent.com/20346767/160268564-40562825-70f0-4e6f-b33f-2b7e592512b1.gif\" width=\"60%\">\r\n\r\n, where each newest print is displayed at the bottom and the oldest print is removed from the screen by the top of the screen (as if doing an automatic scroll)\r\n\r\n\r\nCurrently my code that I am using to test is like this:\r\n\r\n```python\r\nfrom rich import print\r\nfrom rich.panel import Panel\r\nfrom rich.layout import Layout\r\nfrom rich.console import Console\r\nfrom rich.text import Text\r\nfrom rich.table import Table, Column\r\nfrom rich.live import Live\r\nfrom time import sleep\r\n\r\n\r\nconsole = Console()\r\nconsole.set_alt_screen(True)\r\nconsole.clear()\r\n\r\nlayout = Layout()\r\n\r\nlogs_table = Table(Column(\"Logs\"), expand=True)\r\n\r\nlayout.split_column(\r\n    Layout(name=\"header\", ratio=4),\r\n    Layout(logs_table, name=\"body\", ratio=6)\r\n)\r\n\r\nheader = layout.get('header')\r\n\r\nheader.split_row(\r\n    Layout(Panel(''), name=\"account-info\"),\r\n    Layout(Panel(''), name=\"bot-status-info\")\r\n)\r\n\r\nlive = Live(layout, refresh_per_second=1)\r\nlive_render.start(refresh=True)\r\n\r\nfor i in range(30):\r\n    logs_table.add_row(f'Test line {i}.')\r\n\r\nsleep(5)\r\n```\r\n\r\nThe output result is like:\r\n\r\n<img src=\"https://user-images.githubusercontent.com/20346767/160268770-5943ed95-a0b6-46c1-8b94-1f98ee91f007.gif\" width=\"60%\">\r\n\r\nThe problem is that it displays only the first rows of the table instead of displaying the most recent ones (in this case, the last rows of the table that were inserted)", "reactions": {"url": "https://api.github.com/repos/Textualize/rich/issues/2120/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Textualize/rich/issues/2120/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/Textualize/rich/issues/2119", "repository_url": "https://api.github.com/repos/Textualize/rich", "labels_url": "https://api.github.com/repos/Textualize/rich/issues/2119/labels{/name}", "comments_url": "https://api.github.com/repos/Textualize/rich/issues/2119/comments", "events_url": "https://api.github.com/repos/Textualize/rich/issues/2119/events", "html_url": "https://github.com/Textualize/rich/issues/2119", "id": 1182126698, "node_id": "I_kwDODSlIsc5GddJq", "number": 2119, "title": "[REQUEST] Allow setting default parameters for `Console` via environment variables", "user": {"login": "joouha", "id": 12154190, "node_id": "MDQ6VXNlcjEyMTU0MTkw", "avatar_url": "https://avatars.githubusercontent.com/u/12154190?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joouha", "html_url": "https://github.com/joouha", "followers_url": "https://api.github.com/users/joouha/followers", "following_url": "https://api.github.com/users/joouha/following{/other_user}", "gists_url": "https://api.github.com/users/joouha/gists{/gist_id}", "starred_url": "https://api.github.com/users/joouha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joouha/subscriptions", "organizations_url": "https://api.github.com/users/joouha/orgs", "repos_url": "https://api.github.com/users/joouha/repos", "events_url": "https://api.github.com/users/joouha/events{/privacy}", "received_events_url": "https://api.github.com/users/joouha/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2200581776, "node_id": "MDU6TGFiZWwyMjAwNTgxNzc2", "url": "https://api.github.com/repos/Textualize/rich/labels/Needs%20triage", "name": "Needs triage", "color": "bfdadc", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2022-03-26T22:18:30Z", "updated_at": "2022-03-27T17:08:46Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nWhen using `rich` in [`euporie`](https://github.com/joouha/euporie) (a terminal Jupyter notebook client), `rich` detects that it is running in a Jupyter notebook and not running in a TTY, and so returns HTML output.\r\n\r\nHowever, you get a far superior experience when using `rich` in `euporie` by by setting the following `Console` parameters:\r\n\r\n```python\r\nConsole(force_jupyter=False, force_terminal=True)\r\n```\r\n\r\nI'd like to be able to pre-configure `rich` to use these parameters by default when running in `euporie`. \r\n\r\nThe Jupyter kernel in which `rich` runs is a separate process to `euporie`, but will almost always be a sub-process of it. This means that if the default `Console` parameters could be set using environment variables, this would allow me to pre-configure `rich` to give the best user experience when used in `euporie`.\r\n\r\nI'm happy to take stab at implementing this.\r\n\r\nLet me know your thoughts,\r\nThanks\r\n", "reactions": {"url": "https://api.github.com/repos/Textualize/rich/issues/2119/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Textualize/rich/issues/2119/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/Textualize/rich/issues/2113", "repository_url": "https://api.github.com/repos/Textualize/rich", "labels_url": "https://api.github.com/repos/Textualize/rich/issues/2113/labels{/name}", "comments_url": "https://api.github.com/repos/Textualize/rich/issues/2113/comments", "events_url": "https://api.github.com/repos/Textualize/rich/issues/2113/events", "html_url": "https://github.com/Textualize/rich/pull/2113", "id": 1181065328, "node_id": "PR_kwDODSlIsc41CB5c", "number": 2113, "title": "adding indonesian translation for readme", "user": {"login": "theDreamer911", "id": 71202864, "node_id": "MDQ6VXNlcjcxMjAyODY0", "avatar_url": "https://avatars.githubusercontent.com/u/71202864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theDreamer911", "html_url": "https://github.com/theDreamer911", "followers_url": "https://api.github.com/users/theDreamer911/followers", "following_url": "https://api.github.com/users/theDreamer911/following{/other_user}", "gists_url": "https://api.github.com/users/theDreamer911/gists{/gist_id}", "starred_url": "https://api.github.com/users/theDreamer911/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theDreamer911/subscriptions", "organizations_url": "https://api.github.com/users/theDreamer911/orgs", "repos_url": "https://api.github.com/users/theDreamer911/repos", "events_url": "https://api.github.com/users/theDreamer911/events{/privacy}", "received_events_url": "https://api.github.com/users/theDreamer911/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2022-03-25T17:40:52Z", "updated_at": "2022-03-29T21:45:26Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/Textualize/rich/pulls/2113", "html_url": "https://github.com/Textualize/rich/pull/2113", "diff_url": "https://github.com/Textualize/rich/pull/2113.diff", "patch_url": "https://github.com/Textualize/rich/pull/2113.patch", "merged_at": null}, "body": "## Type of changes\r\n\r\n- [ ] Bug fix\r\n- [ ] New feature\r\n- [x] Documentation / docstrings\r\n- [ ] Tests\r\n- [ ] Other\r\n\r\n## Checklist\r\n\r\n- [ ] I've run the latest [black](https://github.com/psf/black) with default args on new code.\r\n- [x] I've updated CHANGELOG.md and CONTRIBUTORS.md where appropriate.\r\n- [ ] I've added tests for new code.\r\n- [x] I accept that @willmcgugan may be pedantic in the code review.\r\n\r\n## Description\r\n\r\nI'm adding Indonesian translation for the readme section\r\n", "reactions": {"url": "https://api.github.com/repos/Textualize/rich/issues/2113/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Textualize/rich/issues/2113/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/Textualize/rich/issues/2112", "repository_url": "https://api.github.com/repos/Textualize/rich", "labels_url": "https://api.github.com/repos/Textualize/rich/issues/2112/labels{/name}", "comments_url": "https://api.github.com/repos/Textualize/rich/issues/2112/comments", "events_url": "https://api.github.com/repos/Textualize/rich/issues/2112/events", "html_url": "https://github.com/Textualize/rich/issues/2112", "id": 1180974993, "node_id": "I_kwDODSlIsc5GZD-R", "number": 2112, "title": "[BUG] Using status overwrites all previous output when in Jupyter notebook", "user": {"login": "ggydush-fn", "id": 69013027, "node_id": "MDQ6VXNlcjY5MDEzMDI3", "avatar_url": "https://avatars.githubusercontent.com/u/69013027?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ggydush-fn", "html_url": "https://github.com/ggydush-fn", "followers_url": "https://api.github.com/users/ggydush-fn/followers", "following_url": "https://api.github.com/users/ggydush-fn/following{/other_user}", "gists_url": "https://api.github.com/users/ggydush-fn/gists{/gist_id}", "starred_url": "https://api.github.com/users/ggydush-fn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ggydush-fn/subscriptions", "organizations_url": "https://api.github.com/users/ggydush-fn/orgs", "repos_url": "https://api.github.com/users/ggydush-fn/repos", "events_url": "https://api.github.com/users/ggydush-fn/events{/privacy}", "received_events_url": "https://api.github.com/users/ggydush-fn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2200581776, "node_id": "MDU6TGFiZWwyMjAwNTgxNzc2", "url": "https://api.github.com/repos/Textualize/rich/labels/Needs%20triage", "name": "Needs triage", "color": "bfdadc", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2022-03-25T16:06:13Z", "updated_at": "2022-03-26T14:36:28Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\n\r\nWhen in a Jupyter notebook, using `status` overwrites all previous output.\r\n\r\n```python\r\nimport time\r\n\r\nfrom rich.console import Console\r\n\r\nprint(\"Previous output\")\r\nconsole = Console()\r\n\r\nwith console.status('This overwrites previous output'):\r\n    time.sleep(2)\r\n```\r\n\r\n**Platform**\r\n<details>\r\n<summary>Click to expand</summary>\r\n\r\nWhat platform (Win/Linux/Mac) are you running on? What terminal software are you using?\r\n\r\nI may ask you to copy and paste the output of the following commands. It may save some time if you do it now.\r\n\r\nIf you're using Rich in a terminal:\r\n```\r\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 <class 'rich.console.Console'> \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n\u2502 A high level console interface.                                            \u2502\r\n\u2502                                                                            \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\r\n\u2502 \u2502 <console width=93 ColorSystem.TRUECOLOR>                               \u2502 \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\r\n\u2502                                                                            \u2502\r\n\u2502     color_system = 'truecolor'                                             \u2502\r\n\u2502         encoding = 'utf-8'                                                 \u2502\r\n\u2502             file = <ipykernel.iostream.OutStream object at 0x7f9c0ea1eb20> \u2502\r\n\u2502           height = 100                                                     \u2502\r\n\u2502    is_alt_screen = False                                                   \u2502\r\n\u2502 is_dumb_terminal = False                                                   \u2502\r\n\u2502   is_interactive = False                                                   \u2502\r\n\u2502       is_jupyter = True                                                    \u2502\r\n\u2502      is_terminal = False                                                   \u2502\r\n\u2502   legacy_windows = False                                                   \u2502\r\n\u2502         no_color = False                                                   \u2502\r\n\u2502          options = ConsoleOptions(                                         \u2502\r\n\u2502                        size=ConsoleDimensions(width=93, height=100),       \u2502\r\n\u2502                        legacy_windows=False,                               \u2502\r\n\u2502                        min_width=1,                                        \u2502\r\n\u2502                        max_width=93,                                       \u2502\r\n\u2502                        is_terminal=False,                                  \u2502\r\n\u2502                        encoding='utf-8',                                   \u2502\r\n\u2502                        max_height=100,                                     \u2502\r\n\u2502                        justify=None,                                       \u2502\r\n\u2502                        overflow=None,                                      \u2502\r\n\u2502                        no_wrap=False,                                      \u2502\r\n\u2502                        highlight=None,                                     \u2502\r\n\u2502                        markup=None,                                        \u2502\r\n\u2502                        height=None                                         \u2502\r\n\u2502                    )                                                       \u2502\r\n\u2502            quiet = False                                                   \u2502\r\n\u2502           record = False                                                   \u2502\r\n\u2502         safe_box = True                                                    \u2502\r\n\u2502             size = ConsoleDimensions(width=93, height=100)                 \u2502\r\n\u2502        soft_wrap = False                                                   \u2502\r\n\u2502           stderr = False                                                   \u2502\r\n\u2502            style = None                                                    \u2502\r\n\u2502         tab_size = 8                                                       \u2502\r\n\u2502            width = 93                                                      \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\n\u256d\u2500\u2500\u2500 <class 'rich._windows.WindowsConsoleFeatures'> \u2500\u2500\u2500\u2500\u256e\r\n\u2502 Windows features available.                           \u2502\r\n\u2502                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\r\n\u2502 \u2502 WindowsConsoleFeatures(vt=False, truecolor=False) \u2502 \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\r\n\u2502                                                       \u2502\r\n\u2502 truecolor = False                                     \u2502\r\n\u2502        vt = False                                     \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500 Environment Variables \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n\u2502 {                                  \u2502\r\n\u2502     'TERM': 'xterm-color',         \u2502\r\n\u2502     'COLORTERM': None,             \u2502\r\n\u2502     'CLICOLOR': '1',               \u2502\r\n\u2502     'NO_COLOR': None,              \u2502\r\n\u2502     'TERM_PROGRAM': None,          \u2502\r\n\u2502     'COLUMNS': None,               \u2502\r\n\u2502     'LINES': None,                 \u2502\r\n\u2502     'JPY_PARENT_PID': '53',        \u2502\r\n\u2502     'VSCODE_VERBOSE_LOGGING': None \u2502\r\n\u2502 }                                  \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\nplatform=\"Linux\"\r\n```", "reactions": {"url": "https://api.github.com/repos/Textualize/rich/issues/2112/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Textualize/rich/issues/2112/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/Textualize/rich/issues/2094", "repository_url": "https://api.github.com/repos/Textualize/rich", "labels_url": "https://api.github.com/repos/Textualize/rich/issues/2094/labels{/name}", "comments_url": "https://api.github.com/repos/Textualize/rich/issues/2094/comments", "events_url": "https://api.github.com/repos/Textualize/rich/issues/2094/events", "html_url": "https://github.com/Textualize/rich/issues/2094", "id": 1176630480, "node_id": "I_kwDODSlIsc5GIfTQ", "number": 2094, "title": "[BUG] ASV failed to publish", "user": {"login": "willmcgugan", "id": 554369, "node_id": "MDQ6VXNlcjU1NDM2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/554369?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willmcgugan", "html_url": "https://github.com/willmcgugan", "followers_url": "https://api.github.com/users/willmcgugan/followers", "following_url": "https://api.github.com/users/willmcgugan/following{/other_user}", "gists_url": "https://api.github.com/users/willmcgugan/gists{/gist_id}", "starred_url": "https://api.github.com/users/willmcgugan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willmcgugan/subscriptions", "organizations_url": "https://api.github.com/users/willmcgugan/orgs", "repos_url": "https://api.github.com/users/willmcgugan/repos", "events_url": "https://api.github.com/users/willmcgugan/events{/privacy}", "received_events_url": "https://api.github.com/users/willmcgugan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2200581776, "node_id": "MDU6TGFiZWwyMjAwNTgxNzc2", "url": "https://api.github.com/repos/Textualize/rich/labels/Needs%20triage", "name": "Needs triage", "color": "bfdadc", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "darrenburns", "id": 5740731, "node_id": "MDQ6VXNlcjU3NDA3MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/5740731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darrenburns", "html_url": "https://github.com/darrenburns", "followers_url": "https://api.github.com/users/darrenburns/followers", "following_url": "https://api.github.com/users/darrenburns/following{/other_user}", "gists_url": "https://api.github.com/users/darrenburns/gists{/gist_id}", "starred_url": "https://api.github.com/users/darrenburns/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darrenburns/subscriptions", "organizations_url": "https://api.github.com/users/darrenburns/orgs", "repos_url": "https://api.github.com/users/darrenburns/repos", "events_url": "https://api.github.com/users/darrenburns/events{/privacy}", "received_events_url": "https://api.github.com/users/darrenburns/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "darrenburns", "id": 5740731, "node_id": "MDQ6VXNlcjU3NDA3MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/5740731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darrenburns", "html_url": "https://github.com/darrenburns", "followers_url": "https://api.github.com/users/darrenburns/followers", "following_url": "https://api.github.com/users/darrenburns/following{/other_user}", "gists_url": "https://api.github.com/users/darrenburns/gists{/gist_id}", "starred_url": "https://api.github.com/users/darrenburns/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darrenburns/subscriptions", "organizations_url": "https://api.github.com/users/darrenburns/orgs", "repos_url": "https://api.github.com/users/darrenburns/repos", "events_url": "https://api.github.com/users/darrenburns/events{/privacy}", "received_events_url": "https://api.github.com/users/darrenburns/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2022-03-22T11:14:46Z", "updated_at": "2022-03-29T15:50:01Z", "closed_at": null, "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "https://github.com/Textualize/rich/actions/runs/2021954439", "reactions": {"url": "https://api.github.com/repos/Textualize/rich/issues/2094/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Textualize/rich/issues/2094/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/Textualize/rich/issues/2085", "repository_url": "https://api.github.com/repos/Textualize/rich", "labels_url": "https://api.github.com/repos/Textualize/rich/issues/2085/labels{/name}", "comments_url": "https://api.github.com/repos/Textualize/rich/issues/2085/comments", "events_url": "https://api.github.com/repos/Textualize/rich/issues/2085/events", "html_url": "https://github.com/Textualize/rich/issues/2085", "id": 1174047564, "node_id": "I_kwDODSlIsc5F-otM", "number": 2085, "title": "[REQUEST] Would be helpful if `rich.inspect` with `help=True` could format the param list so that it is one param per line to improve readability", "user": {"login": "taranlu-houzz", "id": 52425255, "node_id": "MDQ6VXNlcjUyNDI1MjU1", "avatar_url": "https://avatars.githubusercontent.com/u/52425255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taranlu-houzz", "html_url": "https://github.com/taranlu-houzz", "followers_url": "https://api.github.com/users/taranlu-houzz/followers", "following_url": "https://api.github.com/users/taranlu-houzz/following{/other_user}", "gists_url": "https://api.github.com/users/taranlu-houzz/gists{/gist_id}", "starred_url": "https://api.github.com/users/taranlu-houzz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taranlu-houzz/subscriptions", "organizations_url": "https://api.github.com/users/taranlu-houzz/orgs", "repos_url": "https://api.github.com/users/taranlu-houzz/repos", "events_url": "https://api.github.com/users/taranlu-houzz/events{/privacy}", "received_events_url": "https://api.github.com/users/taranlu-houzz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2200581776, "node_id": "MDU6TGFiZWwyMjAwNTgxNzc2", "url": "https://api.github.com/repos/Textualize/rich/labels/Needs%20triage", "name": "Needs triage", "color": "bfdadc", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-03-18T21:27:19Z", "updated_at": "2022-03-18T21:27:19Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "**How would you improve Rich?**\r\n\r\nCurrently, `rich.inspect(..., help=True)` prints the definition as a single line. For functions/classes with a large number of parameters, this is unwieldily to read (especially if the docs do not have a nicely formatted param list). Here is an example of what I get for `rich.inspect(click.Command, help=True)` (`click` actually does have good doc strings, but it is just a quick example of a class with many params):\r\n\r\n```\r\n>>> inspect(click.Command, help=True)\r\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 <class 'click.core.Command'> \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n\u2502 def Command(name: Union[str, NoneType], context_settings: Union[Dict[str, Any], NoneType] = None, callback:             \u2502\r\n\u2502 Union[Callable[..., Any], NoneType] = None, params: Union[List[ForwardRef('Parameter')], NoneType] = None, help:        \u2502\r\n\u2502 Union[str, NoneType] = None, epilog: Union[str, NoneType] = None, short_help: Union[str, NoneType] = None,              \u2502\r\n\u2502 options_metavar: Union[str, NoneType] = '[OPTIONS]', add_help_option: bool = True, no_args_is_help: bool = False,       \u2502\r\n\u2502 hidden: bool = False, deprecated: bool = False) -> None:                                                                \u2502\r\n\u2502                                                                                                                         \u2502\r\n\u2502 Commands are the basic building block of command line interfaces in                                                     \u2502\r\n\u2502 Click.  A basic command handles command line parsing and might dispatch                                                 \u2502\r\n\u2502 more parsing to commands nested below it.                                                                               \u2502\r\n\u2502                                                                                                                         \u2502\r\n\u2502 .. versionchanged:: 2.0                                                                                                 \u2502\r\n\u2502    Added the `context_settings` parameter.                                                                              \u2502\r\n\u2502 .. versionchanged:: 8.0                                                                                                 \u2502\r\n\u2502    Added repr showing the command name                                                                                  \u2502\r\n\u2502 .. versionchanged:: 7.1                                                                                                 \u2502\r\n\u2502    Added the `no_args_is_help` parameter.                                                                               \u2502\r\n\u2502                                                                                                                         \u2502\r\n\u2502 :param name: the name of the command to use unless a group overrides it.                                                \u2502\r\n\u2502 :param context_settings: an optional dictionary with defaults that are                                                  \u2502\r\n\u2502                          passed to the context object.                                                                  \u2502\r\n\u2502 :param callback: the callback to invoke.  This is optional.                                                             \u2502\r\n\u2502 :param params: the parameters to register with this command.  This can                                                  \u2502\r\n\u2502                be either :class:`Option` or :class:`Argument` objects.                                                  \u2502\r\n\u2502 :param help: the help string to use for this command.                                                                   \u2502\r\n\u2502 :param epilog: like the help string but it's printed at the end of the                                                  \u2502\r\n\u2502                help page after everything else.                                                                         \u2502\r\n\u2502 :param short_help: the short help to use for this command.  This is                                                     \u2502\r\n\u2502                    shown on the command listing of the parent command.                                                  \u2502\r\n\u2502 :param add_help_option: by default each command registers a ``--help``                                                  \u2502\r\n\u2502                         option.  This can be disabled by this parameter.                                                \u2502\r\n\u2502 :param no_args_is_help: this controls what happens if no arguments are                                                  \u2502\r\n\u2502                         provided.  This option is disabled by default.                                                  \u2502\r\n\u2502                         If enabled this will add ``--help`` as argument                                                 \u2502\r\n\u2502                         if no arguments are passed                                                                      \u2502\r\n\u2502 :param hidden: hide this command from help outputs.                                                                     \u2502\r\n\u2502                                                                                                                         \u2502\r\n\u2502 :param deprecated: issues a message indicating that                                                                     \u2502\r\n\u2502                          the command is deprecated.                                                                     \u2502\r\n\u2502                                                                                                                         \u2502\r\n\u2502        allow_extra_args = False                                                                                         \u2502\r\n\u2502 allow_interspersed_args = True                                                                                          \u2502\r\n\u2502  ignore_unknown_options = False                                                                                         \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\n>>> \r\n```\r\nI feel like it would be much more readable if the definition was printed the way that `black` would format it:\r\n```python\r\ndef Command(\r\n    name: Union[str, NoneType],\r\n    context_settings: Union[Dict[str, Any], NoneType] = None,\r\n    callback: Union[Callable[..., Any], NoneType] = None,\r\n    params: Union[List[ForwardRef(\"Parameter\")], NoneType] = None,\r\n    help: Union[str, NoneType] = None,\r\n    epilog: Union[str, NoneType] = None,\r\n    short_help: Union[str, NoneType] = None,\r\n    options_metavar: Union[str, NoneType] = \"[OPTIONS]\",\r\n    add_help_option: bool = True,\r\n    no_args_is_help: bool = False,\r\n    hidden: bool = False,\r\n    deprecated: bool = False,\r\n) -> None:\r\n\r\n    ...\r\n```\r\n\r\n**What problem does it solve for you?**\r\n\r\nImproves help clarity for `click.inspect()`, especially when using it to investigate an unfamiliar package or library.\r\n", "reactions": {"url": "https://api.github.com/repos/Textualize/rich/issues/2085/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Textualize/rich/issues/2085/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/Textualize/rich/issues/2079", "repository_url": "https://api.github.com/repos/Textualize/rich", "labels_url": "https://api.github.com/repos/Textualize/rich/issues/2079/labels{/name}", "comments_url": "https://api.github.com/repos/Textualize/rich/issues/2079/comments", "events_url": "https://api.github.com/repos/Textualize/rich/issues/2079/events", "html_url": "https://github.com/Textualize/rich/issues/2079", "id": 1173159133, "node_id": "I_kwDODSlIsc5F7Pzd", "number": 2079, "title": "[BUG]'Alternate screen' on windows 7-10 does not clear after completio (RE)", "user": {"login": "snooppr", "id": 61022210, "node_id": "MDQ6VXNlcjYxMDIyMjEw", "avatar_url": "https://avatars.githubusercontent.com/u/61022210?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snooppr", "html_url": "https://github.com/snooppr", "followers_url": "https://api.github.com/users/snooppr/followers", "following_url": "https://api.github.com/users/snooppr/following{/other_user}", "gists_url": "https://api.github.com/users/snooppr/gists{/gist_id}", "starred_url": "https://api.github.com/users/snooppr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snooppr/subscriptions", "organizations_url": "https://api.github.com/users/snooppr/orgs", "repos_url": "https://api.github.com/users/snooppr/repos", "events_url": "https://api.github.com/users/snooppr/events{/privacy}", "received_events_url": "https://api.github.com/users/snooppr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2200581776, "node_id": "MDU6TGFiZWwyMjAwNTgxNzc2", "url": "https://api.github.com/repos/Textualize/rich/labels/Needs%20triage", "name": "Needs triage", "color": "bfdadc", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-03-18T03:53:07Z", "updated_at": "2022-03-18T03:53:07Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nimport time\r\nfrom rich.console import Console\r\n\r\nconsole = Console()\r\n\r\nprint(\"Great_Rich\")\r\n\r\nwith console.screen():\r\n    console.print(\"Banner\")\r\n    time.sleep(2)\r\n\r\nfor i in \"Text\":\r\n    time.sleep(0.04)\r\n    print(f\"\\033[31;1m{i}\", end='', flush=True)\r\nprint(\"\\n\\n exit\")\r\n```\r\n\r\nscreen windows 10\r\nhttps://user-images.githubusercontent.com/61022210/158059480-7fb9b0d6-0ae0-4af8-aefb-1313bdf142b4.png\r\n\r\nI also [compiled](https://disk.yandex.ru/d/JEqpCvFNb5XeuA) this source into an .exe, which is on the screen and in the code\r\n\r\nI tested this on Windows 10 and Windows 7. In both cases, the terminal was not cleared (the word \"Banner\" remained in the terminal). That is, in Windows, the alternative terminal works like a simple \"print\". On GNU/Linux everything works and is in perfect order, please check it out.\r\n\r\np.s. This [project](https://github.com/peterbrittain/asciimatics) here works as an alternative screen on Windows 7 and Windows 10 (the text is cleared after itself).", "reactions": {"url": "https://api.github.com/repos/Textualize/rich/issues/2079/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Textualize/rich/issues/2079/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/Textualize/rich/issues/2073", "repository_url": "https://api.github.com/repos/Textualize/rich", "labels_url": "https://api.github.com/repos/Textualize/rich/issues/2073/labels{/name}", "comments_url": "https://api.github.com/repos/Textualize/rich/issues/2073/comments", "events_url": "https://api.github.com/repos/Textualize/rich/issues/2073/events", "html_url": "https://github.com/Textualize/rich/issues/2073", "id": 1170823103, "node_id": "I_kwDODSlIsc5FyVe_", "number": 2073, "title": "[BUG] When pretty-printed, items with a multi-line repr are not indented", "user": {"login": "leroyvn", "id": 34740232, "node_id": "MDQ6VXNlcjM0NzQwMjMy", "avatar_url": "https://avatars.githubusercontent.com/u/34740232?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leroyvn", "html_url": "https://github.com/leroyvn", "followers_url": "https://api.github.com/users/leroyvn/followers", "following_url": "https://api.github.com/users/leroyvn/following{/other_user}", "gists_url": "https://api.github.com/users/leroyvn/gists{/gist_id}", "starred_url": "https://api.github.com/users/leroyvn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leroyvn/subscriptions", "organizations_url": "https://api.github.com/users/leroyvn/orgs", "repos_url": "https://api.github.com/users/leroyvn/repos", "events_url": "https://api.github.com/users/leroyvn/events{/privacy}", "received_events_url": "https://api.github.com/users/leroyvn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1809645463, "node_id": "MDU6TGFiZWwxODA5NjQ1NDYz", "url": "https://api.github.com/repos/Textualize/rich/labels/accepted", "name": "accepted", "color": "c5def5", "default": false, "description": "Task was accepted"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-03-16T10:26:40Z", "updated_at": "2022-03-16T10:52:57Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\n\r\n*Not entirely sure if it's a proper bug or a won't fix, but at least getting an answer would be great.*\r\n\r\n**Context:** I'm using Rich to display nicely a hierarchy of `attrs`-powered objects using `rich.pretty.pprint()`. This works very well and Rich saves me a lot of trouble when visually inspecting those objects.\r\n\r\nSome of the fields in my objects consist of Numpy or xarray data whose repr may span accros multiple lines. Here is an example:\r\n\r\n```python\r\nimport numpy as np\r\nfrom rich.pretty import pprint\r\nzeros = np.zeros((4,4))\r\npprint(zeros)\r\n```\r\nI get a nicely indented repr:\r\n```\r\narray([[0., 0., 0., 0.],\r\n\u2502      [0., 0., 0., 0.],\r\n\u2502      [0., 0., 0., 0.],\r\n\u2502      [0., 0., 0., 0.]])\r\n```\r\nNow, if I use one of these in a dictionary, like this\r\n```python\r\nd = {\"foo\": \"bar\", \"zeros\": zeros}\r\npprint(d)\r\n```\r\nI get that\r\n```\r\n{\r\n\u2502   'foo': 'bar',\r\n\u2502   'zeros': array([[0., 0., 0., 0.],\r\n\u2502      [0., 0., 0., 0.],\r\n\u2502      [0., 0., 0., 0.],\r\n\u2502      [0., 0., 0., 0.]])\r\n}\r\n```\r\nwhile I'd expect indentation to be adjusted like this\r\n```\r\n{\r\n\u2502   'foo': 'bar',\r\n\u2502   'zeros': array([[0., 0., 0., 0.],\r\n\u2502                   [0., 0., 0., 0.],\r\n\u2502                   [0., 0., 0., 0.],\r\n\u2502                   [0., 0., 0., 0.]])\r\n}\r\n```\r\nor at least something like this (saves horizontal space, no need to guess length of first line)\r\n```\r\n{\r\n\u2502   'foo': 'bar',\r\n\u2502   'zeros': \r\n|   |   array([[0., 0., 0., 0.],\r\n\u2502   |          [0., 0., 0., 0.],\r\n\u2502   |          [0., 0., 0., 0.],\r\n\u2502   |          [0., 0., 0., 0.]])\r\n}\r\n```\r\nI'm showing here an example with a dict, but this also applies when pretty printing `attrs` objects with fields containing Numpy or xarray data.\r\n\r\n**Platform**\r\n<details>\r\n<summary>Click to expand</summary>\r\n\r\n**Platform**: macOS, Linux\r\n**Rich version**: 12.0.0\r\n**Output**: Terminal, PyCharm and VSCode embedded consoles, Jupyter Lab (intentionally not cluttering the issue with terminal info, I can add them if it's relevant)\r\n\r\n</details>\r\n", "reactions": {"url": "https://api.github.com/repos/Textualize/rich/issues/2073/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Textualize/rich/issues/2073/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/Textualize/rich/issues/2047", "repository_url": "https://api.github.com/repos/Textualize/rich", "labels_url": "https://api.github.com/repos/Textualize/rich/issues/2047/labels{/name}", "comments_url": "https://api.github.com/repos/Textualize/rich/issues/2047/comments", "events_url": "https://api.github.com/repos/Textualize/rich/issues/2047/events", "html_url": "https://github.com/Textualize/rich/issues/2047", "id": 1165695634, "node_id": "I_kwDODSlIsc5FexqS", "number": 2047, "title": "[BUG] printing -\\n- in rich.progress context manager will kill the jupyter.", "user": {"login": "kkasra12", "id": 24565544, "node_id": "MDQ6VXNlcjI0NTY1NTQ0", "avatar_url": "https://avatars.githubusercontent.com/u/24565544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kkasra12", "html_url": "https://github.com/kkasra12", "followers_url": "https://api.github.com/users/kkasra12/followers", "following_url": "https://api.github.com/users/kkasra12/following{/other_user}", "gists_url": "https://api.github.com/users/kkasra12/gists{/gist_id}", "starred_url": "https://api.github.com/users/kkasra12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kkasra12/subscriptions", "organizations_url": "https://api.github.com/users/kkasra12/orgs", "repos_url": "https://api.github.com/users/kkasra12/repos", "events_url": "https://api.github.com/users/kkasra12/events{/privacy}", "received_events_url": "https://api.github.com/users/kkasra12/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2200581776, "node_id": "MDU6TGFiZWwyMjAwNTgxNzc2", "url": "https://api.github.com/repos/Textualize/rich/labels/Needs%20triage", "name": "Needs triage", "color": "bfdadc", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-03-10T20:39:33Z", "updated_at": "2022-03-10T21:16:59Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "try this code in the jupyter notebook:\r\n\r\n```python\r\nfrom rich.progress import Progress\r\nwith Progress() as progress:\r\n    print(\"-\\n-\")\r\nprint(\"finished\")\r\n```\r\nand it will show a popup message displaying that the kernel has died.\r\nI have tested it on google colab and mint.\r\n\r\nalso, I have installed rich using\r\n```\r\npip install rich[jupyter]\r\n```", "reactions": {"url": "https://api.github.com/repos/Textualize/rich/issues/2047/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Textualize/rich/issues/2047/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/Textualize/rich/issues/2046", "repository_url": "https://api.github.com/repos/Textualize/rich", "labels_url": "https://api.github.com/repos/Textualize/rich/issues/2046/labels{/name}", "comments_url": "https://api.github.com/repos/Textualize/rich/issues/2046/comments", "events_url": "https://api.github.com/repos/Textualize/rich/issues/2046/events", "html_url": "https://github.com/Textualize/rich/issues/2046", "id": 1165354945, "node_id": "I_kwDODSlIsc5FdefB", "number": 2046, "title": "The process gets stuck (in a deadlock?) when using the RichHandler for logging", "user": {"login": "ivanprado", "id": 895720, "node_id": "MDQ6VXNlcjg5NTcyMA==", "avatar_url": "https://avatars.githubusercontent.com/u/895720?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivanprado", "html_url": "https://github.com/ivanprado", "followers_url": "https://api.github.com/users/ivanprado/followers", "following_url": "https://api.github.com/users/ivanprado/following{/other_user}", "gists_url": "https://api.github.com/users/ivanprado/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivanprado/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivanprado/subscriptions", "organizations_url": "https://api.github.com/users/ivanprado/orgs", "repos_url": "https://api.github.com/users/ivanprado/repos", "events_url": "https://api.github.com/users/ivanprado/events{/privacy}", "received_events_url": "https://api.github.com/users/ivanprado/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2200581776, "node_id": "MDU6TGFiZWwyMjAwNTgxNzc2", "url": "https://api.github.com/repos/Textualize/rich/labels/Needs%20triage", "name": "Needs triage", "color": "bfdadc", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2022-03-10T15:13:53Z", "updated_at": "2022-03-21T11:22:31Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\n\r\nI'm running a multiprocessing + multithreading app, and I was using the `RichHandler`. The process is a long-running process, and it always got stuck at some point. I was analyzing the dumped stack when the process got in this state using `py-spy` and I got to the conclusion that the problem is that the `RichHandler` gets stuck in this line: https://github.com/Textualize/rich/blob/v11.0.0/rich/live.py#L246\r\n\r\nIf I remove the `RichHandler` then I don't experience the problem anymore.\r\n\r\nThis is part of a stack trace of the thread that gets stuck (I removed some calls):\r\n\r\n```\r\n    process_renderables (rich/live.py:246)\r\n    print (rich/console.py:1600)\r\n    emit (rich/logging.py:154)\r\n    handle (logging/__init__.py:954)\r\n    callHandlers (logging/__init__.py:1661)\r\n    handle (logging/__init__.py:1599)\r\n    _log (logging/__init__.py:1589)\r\n    log (logging/__init__.py:1512)\r\n    log_it (tenacity/before_sleep.py:51)\r\n    iter (tenacity/__init__.py:373)\r\n    __call__ (tenacity/_asyncio.py:48)\r\n    async_wrapped (tenacity/_asyncio.py:86)\r\n    ...\r\n    _run (asyncio/events.py:81)\r\n    _run_once (asyncio/base_events.py:1859)\r\n    run_forever (asyncio/base_events.py:570)\r\n    run_until_complete (asyncio/base_events.py:603)\r\n    run (asyncio/runners.py:44)\r\n   ... \r\n    run (threading.py:870)\r\n    _bootstrap_inner (threading.py:932)\r\n    _bootstrap (threading.py:890)\r\n```\r\n\r\nAs I told you, the app is using multiprocessing and multithreading and also using rich progress and rich in other parts without problems. It is only the `RichHandler` the one causing troubles. \r\n\r\nUnfortunately, I have no more details. Probably what I gave you is not enough, but well, I just wanted to share in case you get inspired about what could be happening. \r\n\r\n**Platform**\r\nLinux with fish cmd\r\n\r\n```\r\npython -m rich.diagnose\r\n\r\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 <class 'rich.console.Console'> \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n\u2502 A high level console interface.                                                  \u2502\r\n\u2502                                                                                  \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\r\n\u2502 \u2502 <console width=214 ColorSystem.STANDARD>                                     \u2502 \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\r\n\u2502                                                                                  \u2502\r\n\u2502     color_system = 'standard'                                                    \u2502\r\n\u2502         encoding = 'utf-8'                                                       \u2502\r\n\u2502             file = <_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'> \u2502\r\n\u2502           height = 45                                                            \u2502\r\n\u2502    is_alt_screen = False                                                         \u2502\r\n\u2502 is_dumb_terminal = False                                                         \u2502\r\n\u2502   is_interactive = True                                                          \u2502\r\n\u2502       is_jupyter = False                                                         \u2502\r\n\u2502      is_terminal = True                                                          \u2502\r\n\u2502   legacy_windows = False                                                         \u2502\r\n\u2502         no_color = False                                                         \u2502\r\n\u2502          options = ConsoleOptions(                                               \u2502\r\n\u2502                        size=ConsoleDimensions(width=214, height=45),             \u2502\r\n\u2502                        legacy_windows=False,                                     \u2502\r\n\u2502                        min_width=1,                                              \u2502\r\n\u2502                        max_width=214,                                            \u2502\r\n\u2502                        is_terminal=True,                                         \u2502\r\n\u2502                        encoding='utf-8',                                         \u2502\r\n\u2502                        max_height=45,                                            \u2502\r\n\u2502                        justify=None,                                             \u2502\r\n\u2502                        overflow=None,                                            \u2502\r\n\u2502                        no_wrap=False,                                            \u2502\r\n\u2502                        highlight=None,                                           \u2502\r\n\u2502                        markup=None,                                              \u2502\r\n\u2502                        height=None                                               \u2502\r\n\u2502                    )                                                             \u2502\r\n\u2502            quiet = False                                                         \u2502\r\n\u2502           record = False                                                         \u2502\r\n\u2502         safe_box = True                                                          \u2502\r\n\u2502             size = ConsoleDimensions(width=214, height=45)                       \u2502\r\n\u2502        soft_wrap = False                                                         \u2502\r\n\u2502           stderr = False                                                         \u2502\r\n\u2502            style = None                                                          \u2502\r\n\u2502         tab_size = 8                                                             \u2502\r\n\u2502            width = 214                                                           \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\n\r\npip freeze | grep rich\r\n\r\nrich==11.0.0\r\n```\r\n\r\nTo finish, thank you very much for Rich. It is an amazing library!\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Textualize/rich/issues/2046/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Textualize/rich/issues/2046/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/Textualize/rich/issues/2018", "repository_url": "https://api.github.com/repos/Textualize/rich", "labels_url": "https://api.github.com/repos/Textualize/rich/issues/2018/labels{/name}", "comments_url": "https://api.github.com/repos/Textualize/rich/issues/2018/comments", "events_url": "https://api.github.com/repos/Textualize/rich/issues/2018/events", "html_url": "https://github.com/Textualize/rich/issues/2018", "id": 1158314591, "node_id": "I_kwDODSlIsc5FCnpf", "number": 2018, "title": "[BUG] rich.traceback: no lexer for filename X found", "user": {"login": "pbsds", "id": 140964, "node_id": "MDQ6VXNlcjE0MDk2NA==", "avatar_url": "https://avatars.githubusercontent.com/u/140964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pbsds", "html_url": "https://github.com/pbsds", "followers_url": "https://api.github.com/users/pbsds/followers", "following_url": "https://api.github.com/users/pbsds/following{/other_user}", "gists_url": "https://api.github.com/users/pbsds/gists{/gist_id}", "starred_url": "https://api.github.com/users/pbsds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pbsds/subscriptions", "organizations_url": "https://api.github.com/users/pbsds/orgs", "repos_url": "https://api.github.com/users/pbsds/repos", "events_url": "https://api.github.com/users/pbsds/events{/privacy}", "received_events_url": "https://api.github.com/users/pbsds/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1668492270, "node_id": "MDU6TGFiZWwxNjY4NDkyMjcw", "url": "https://api.github.com/repos/Textualize/rich/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "open", "locked": false, "assignee": {"login": "darrenburns", "id": 5740731, "node_id": "MDQ6VXNlcjU3NDA3MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/5740731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darrenburns", "html_url": "https://github.com/darrenburns", "followers_url": "https://api.github.com/users/darrenburns/followers", "following_url": "https://api.github.com/users/darrenburns/following{/other_user}", "gists_url": "https://api.github.com/users/darrenburns/gists{/gist_id}", "starred_url": "https://api.github.com/users/darrenburns/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darrenburns/subscriptions", "organizations_url": "https://api.github.com/users/darrenburns/orgs", "repos_url": "https://api.github.com/users/darrenburns/repos", "events_url": "https://api.github.com/users/darrenburns/events{/privacy}", "received_events_url": "https://api.github.com/users/darrenburns/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "darrenburns", "id": 5740731, "node_id": "MDQ6VXNlcjU3NDA3MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/5740731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darrenburns", "html_url": "https://github.com/darrenburns", "followers_url": "https://api.github.com/users/darrenburns/followers", "following_url": "https://api.github.com/users/darrenburns/following{/other_user}", "gists_url": "https://api.github.com/users/darrenburns/gists{/gist_id}", "starred_url": "https://api.github.com/users/darrenburns/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darrenburns/subscriptions", "organizations_url": "https://api.github.com/users/darrenburns/orgs", "repos_url": "https://api.github.com/users/darrenburns/repos", "events_url": "https://api.github.com/users/darrenburns/events{/privacy}", "received_events_url": "https://api.github.com/users/darrenburns/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2022-03-03T11:49:17Z", "updated_at": "2022-03-30T11:16:45Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\n\r\nThe rich.traceback doesn't know how to render tracebacks originating from inside jinja2 templates.\r\nThe issue is twofold: (1) rich doesn't recognize the `.yaml.j2` extension as `jinja2+yaml`,  and (2) the fallback isn't to print the file contents without highlighting but instead to **simply not print it at all**.\r\nAs such this bug likely also affects other languages to compile to python bytecode, such as [dg](http://pyos.github.io/dg/), [Hylang](https://docs.hylang.org/en/stable/) and [hissp/hebigo](https://github.com/gilch/hissp).\r\n\r\nRepro:\r\n\r\ntest.py:\r\n```python\r\nimport jinja2, os\r\nfrom rich.traceback import install\r\ninstall()\r\ndef raiser():\r\n    raise Exception\r\nenv = jinja2.Environment(\r\n    loader = jinja2.FileSystemLoader([os.getcwd(), \"/\"], followlinks=True),\r\n)\r\nenv.globals[\"raiser\"] = raiser    \r\ntemplate = env.get_template(\"test.yaml.j2\")\r\nprint(template.render())\r\n```\r\ntest.yaml.j2:\r\n```jinja2\r\nfoobar:\r\n    something: {{ raiser() }}\r\n    else: {{ 5 + 5 }}\r\n```\r\n\r\nVanilla traceback:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/pbsds/tmp/repro/test.py\", line 13, in <module>\r\n    print(template.render())\r\n  File \"/usr/lib/python3.10/site-packages/jinja2/environment.py\", line 1291, in render\r\n    self.environment.handle_exception()\r\n  File \"/usr/lib/python3.10/site-packages/jinja2/environment.py\", line 925, in handle_exception\r\n    raise rewrite_traceback_stack(source=source)\r\n  File \"/home/pbsds/tmp/repro/test.yaml.j2\", line 2, in top-level template code\r\n    something: {{ raiser() }}\r\n  File \"/home/pbsds/tmp/repro/test.py\", line 4, in raiser\r\n    raise Exception\r\nException\r\n```\r\n\r\nrich.traceback:\r\n```\r\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Traceback (most recent call last) \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/pbsds/tmp/repro/test.py:15 in <module>                                                     \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   12                                                                                             \u2502\r\n\u2502   13 template = env.get_template(\"test.yaml.j2\")                                                 \u2502\r\n\u2502   14                                                                                             \u2502\r\n\u2502 \u2771 15 print(template.render())                                                                    \u2502\r\n\u2502   16                                                                                             \u2502\r\n\u2502 /usr/lib/python3.10/site-packages/jinja2/environment.py:1291 in render                           \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   1288 \u2502   \u2502   try:                                                                              \u2502\r\n\u2502   1289 \u2502   \u2502   \u2502   return concat(self.root_render_func(ctx))  # type: ignore                     \u2502\r\n\u2502   1290 \u2502   \u2502   except Exception:                                                                 \u2502\r\n\u2502 \u2771 1291 \u2502   \u2502   \u2502   self.environment.handle_exception()                                           \u2502\r\n\u2502   1292 \u2502                                                                                         \u2502\r\n\u2502   1293 \u2502   async def render_async(self, *args: t.Any, **kwargs: t.Any) -> str:                   \u2502\r\n\u2502   1294 \u2502   \u2502   \"\"\"This works similar to :meth:`render` but returns a coroutine                   \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /usr/lib/python3.10/site-packages/jinja2/environment.py:925 in handle_exception                  \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502    922 \u2502   \u2502   \"\"\"                                                                               \u2502\r\n\u2502    923 \u2502   \u2502   from .debug import rewrite_traceback_stack                                        \u2502\r\n\u2502    924 \u2502   \u2502                                                                                     \u2502\r\n\u2502 \u2771  925 \u2502   \u2502   raise rewrite_traceback_stack(source=source)                                      \u2502\r\n\u2502    926 \u2502                                                                                         \u2502\r\n\u2502    927 \u2502   def join_path(self, template: str, parent: str) -> str:                               \u2502\r\n\u2502    928 \u2502   \u2502   \"\"\"Join a template with the parent.  By default all the lookups are               \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/pbsds/tmp/repro/test.yaml.j2:2 in top-level template code                                  \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 no lexer for filename 'test.yaml.j2' found                                                       \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/pbsds/tmp/repro/test.py:6 in raiser                                                        \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502    3 install()                                                                                   \u2502\r\n\u2502    4                                                                                             \u2502\r\n\u2502    5 def raiser():                                                                               \u2502\r\n\u2502 \u2771  6 \u2502   raise Exception                                                                         \u2502\r\n\u2502    7                                                                                             \u2502\r\n\u2502    8 env = jinja2.Environment(                                                                   \u2502\r\n\u2502    9 \u2502   loader = jinja2.FileSystemLoader([os.getcwd(), \"/\"], followlinks=True),                 \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\n```\r\n\r\n\r\n\r\n**Platform**\r\n<details>\r\n<summary>Click to expand</summary>\r\n\r\nWhat platform (Win/Linux/Mac) are you running on? What terminal software are you using?\r\n\r\nManjaro GNOME, python 3.10.2, lxterminal\r\n\r\nI may ask you to copy and paste the output of the following commands. It may save some time if you do it now.\r\n\r\nIf you're using Rich in a terminal:\r\n\r\n```\r\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 <class 'rich.console.Console'> \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n\u2502 A high level console interface.                                              \u2502\r\n\u2502                                                                              \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\r\n\u2502 \u2502 <console width=80 ColorSystem.TRUECOLOR>                                 \u2502 \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\r\n\u2502                                                                              \u2502\r\n\u2502     color_system = 'truecolor'                                               \u2502\r\n\u2502         encoding = 'utf-8'                                                   \u2502\r\n\u2502             file = <_io.TextIOWrapper name='<stdout>' mode='w'               \u2502\r\n\u2502                    encoding='utf-8'>                                         \u2502\r\n\u2502           height = 24                                                        \u2502\r\n\u2502    is_alt_screen = False                                                     \u2502\r\n\u2502 is_dumb_terminal = False                                                     \u2502\r\n\u2502   is_interactive = True                                                      \u2502\r\n\u2502       is_jupyter = False                                                     \u2502\r\n\u2502      is_terminal = True                                                      \u2502\r\n\u2502   legacy_windows = False                                                     \u2502\r\n\u2502         no_color = False                                                     \u2502\r\n\u2502          options = ConsoleOptions(                                           \u2502\r\n\u2502                        size=ConsoleDimensions(width=80, height=24),          \u2502\r\n\u2502                        legacy_windows=False,                                 \u2502\r\n\u2502                        min_width=1,                                          \u2502\r\n\u2502                        max_width=80,                                         \u2502\r\n\u2502                        is_terminal=True,                                     \u2502\r\n\u2502                        encoding='utf-8',                                     \u2502\r\n\u2502                        max_height=24,                                        \u2502\r\n\u2502                        justify=None,                                         \u2502\r\n\u2502                        overflow=None,                                        \u2502\r\n\u2502                        no_wrap=False,                                        \u2502\r\n\u2502                        highlight=None,                                       \u2502\r\n\u2502                        markup=None,                                          \u2502\r\n\u2502                        height=None                                           \u2502\r\n\u2502                    )                                                         \u2502\r\n\u2502            quiet = False                                                     \u2502\r\n\u2502           record = False                                                     \u2502\r\n\u2502         safe_box = True                                                      \u2502\r\n\u2502             size = ConsoleDimensions(width=80, height=24)                    \u2502\r\n\u2502        soft_wrap = False                                                     \u2502\r\n\u2502           stderr = False                                                     \u2502\r\n\u2502            style = None                                                      \u2502\r\n\u2502         tab_size = 8                                                         \u2502\r\n\u2502            width = 80                                                        \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\nrich==11.0.0\r\n```\r\n\r\n</details>\r\n", "reactions": {"url": "https://api.github.com/repos/Textualize/rich/issues/2018/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Textualize/rich/issues/2018/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/Textualize/rich/issues/2013", "repository_url": "https://api.github.com/repos/Textualize/rich", "labels_url": "https://api.github.com/repos/Textualize/rich/issues/2013/labels{/name}", "comments_url": "https://api.github.com/repos/Textualize/rich/issues/2013/comments", "events_url": "https://api.github.com/repos/Textualize/rich/issues/2013/events", "html_url": "https://github.com/Textualize/rich/pull/2013", "id": 1154379768, "node_id": "PR_kwDODSlIsc4zrfT1", "number": 2013, "title": "Add the `log_omit_repeated_times` option to `Console`", "user": {"login": "apcamargo", "id": 22940964, "node_id": "MDQ6VXNlcjIyOTQwOTY0", "avatar_url": "https://avatars.githubusercontent.com/u/22940964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apcamargo", "html_url": "https://github.com/apcamargo", "followers_url": "https://api.github.com/users/apcamargo/followers", "following_url": "https://api.github.com/users/apcamargo/following{/other_user}", "gists_url": "https://api.github.com/users/apcamargo/gists{/gist_id}", "starred_url": "https://api.github.com/users/apcamargo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apcamargo/subscriptions", "organizations_url": "https://api.github.com/users/apcamargo/orgs", "repos_url": "https://api.github.com/users/apcamargo/repos", "events_url": "https://api.github.com/users/apcamargo/events{/privacy}", "received_events_url": "https://api.github.com/users/apcamargo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2022-02-28T17:49:12Z", "updated_at": "2022-03-28T15:31:24Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/Textualize/rich/pulls/2013", "html_url": "https://github.com/Textualize/rich/pull/2013", "diff_url": "https://github.com/Textualize/rich/pull/2013.diff", "patch_url": "https://github.com/Textualize/rich/pull/2013.patch", "merged_at": null}, "body": "## Type of changes\r\n\r\n- [ ] Bug fix\r\n- [x] New feature\r\n- [ ] Documentation / docstrings\r\n- [ ] Tests\r\n- [ ] Other\r\n\r\n## Checklist\r\n\r\n- [x] I've run the latest [black](https://github.com/psf/black) with default args on new code.\r\n- [x] I've updated CHANGELOG.md and CONTRIBUTORS.md where appropriate.\r\n- [ ] I've added tests for new code.\r\n- [x] I accept that @willmcgugan may be pedantic in the code review.\r\n\r\n## Description\r\n\r\nThis PR adds a `log_omit_repeated_times` option to the `Console` constructor. When set to `False`, the omission of repeated times by `log()` methods is disabled.\r\n", "reactions": {"url": "https://api.github.com/repos/Textualize/rich/issues/2013/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Textualize/rich/issues/2013/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/Textualize/rich/issues/1997", "repository_url": "https://api.github.com/repos/Textualize/rich", "labels_url": "https://api.github.com/repos/Textualize/rich/issues/1997/labels{/name}", "comments_url": "https://api.github.com/repos/Textualize/rich/issues/1997/comments", "events_url": "https://api.github.com/repos/Textualize/rich/issues/1997/events", "html_url": "https://github.com/Textualize/rich/issues/1997", "id": 1149142916, "node_id": "I_kwDODSlIsc5EfoeE", "number": 1997, "title": "CONTRIBUTING.md guidlines inadequate", "user": {"login": "willmcgugan", "id": 554369, "node_id": "MDQ6VXNlcjU1NDM2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/554369?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willmcgugan", "html_url": "https://github.com/willmcgugan", "followers_url": "https://api.github.com/users/willmcgugan/followers", "following_url": "https://api.github.com/users/willmcgugan/following{/other_user}", "gists_url": "https://api.github.com/users/willmcgugan/gists{/gist_id}", "starred_url": "https://api.github.com/users/willmcgugan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willmcgugan/subscriptions", "organizations_url": "https://api.github.com/users/willmcgugan/orgs", "repos_url": "https://api.github.com/users/willmcgugan/repos", "events_url": "https://api.github.com/users/willmcgugan/events{/privacy}", "received_events_url": "https://api.github.com/users/willmcgugan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1668492271, "node_id": "MDU6TGFiZWwxNjY4NDkyMjcx", "url": "https://api.github.com/repos/Textualize/rich/labels/documentation", "name": "documentation", "color": "0075ca", "default": true, "description": "Improvements or additions to documentation"}], "state": "open", "locked": false, "assignee": {"login": "willmcgugan", "id": 554369, "node_id": "MDQ6VXNlcjU1NDM2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/554369?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willmcgugan", "html_url": "https://github.com/willmcgugan", "followers_url": "https://api.github.com/users/willmcgugan/followers", "following_url": "https://api.github.com/users/willmcgugan/following{/other_user}", "gists_url": "https://api.github.com/users/willmcgugan/gists{/gist_id}", "starred_url": "https://api.github.com/users/willmcgugan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willmcgugan/subscriptions", "organizations_url": "https://api.github.com/users/willmcgugan/orgs", "repos_url": "https://api.github.com/users/willmcgugan/repos", "events_url": "https://api.github.com/users/willmcgugan/events{/privacy}", "received_events_url": "https://api.github.com/users/willmcgugan/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "willmcgugan", "id": 554369, "node_id": "MDQ6VXNlcjU1NDM2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/554369?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willmcgugan", "html_url": "https://github.com/willmcgugan", "followers_url": "https://api.github.com/users/willmcgugan/followers", "following_url": "https://api.github.com/users/willmcgugan/following{/other_user}", "gists_url": "https://api.github.com/users/willmcgugan/gists{/gist_id}", "starred_url": "https://api.github.com/users/willmcgugan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willmcgugan/subscriptions", "organizations_url": "https://api.github.com/users/willmcgugan/orgs", "repos_url": "https://api.github.com/users/willmcgugan/repos", "events_url": "https://api.github.com/users/willmcgugan/events{/privacy}", "received_events_url": "https://api.github.com/users/willmcgugan/received_events", "type": "User", "site_admin": false}, {"login": "darrenburns", "id": 5740731, "node_id": "MDQ6VXNlcjU3NDA3MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/5740731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darrenburns", "html_url": "https://github.com/darrenburns", "followers_url": "https://api.github.com/users/darrenburns/followers", "following_url": "https://api.github.com/users/darrenburns/following{/other_user}", "gists_url": "https://api.github.com/users/darrenburns/gists{/gist_id}", "starred_url": "https://api.github.com/users/darrenburns/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darrenburns/subscriptions", "organizations_url": "https://api.github.com/users/darrenburns/orgs", "repos_url": "https://api.github.com/users/darrenburns/repos", "events_url": "https://api.github.com/users/darrenburns/events{/privacy}", "received_events_url": "https://api.github.com/users/darrenburns/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2022-02-24T10:57:00Z", "updated_at": "2022-02-24T10:57:19Z", "closed_at": null, "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "We should review and update CONTRIBUTING.md from the point of view of a beginner starting afresh.", "reactions": {"url": "https://api.github.com/repos/Textualize/rich/issues/1997/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Textualize/rich/issues/1997/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/Textualize/rich/issues/1978", "repository_url": "https://api.github.com/repos/Textualize/rich", "labels_url": "https://api.github.com/repos/Textualize/rich/issues/1978/labels{/name}", "comments_url": "https://api.github.com/repos/Textualize/rich/issues/1978/comments", "events_url": "https://api.github.com/repos/Textualize/rich/issues/1978/events", "html_url": "https://github.com/Textualize/rich/issues/1978", "id": 1143127849, "node_id": "I_kwDODSlIsc5EIr8p", "number": 1978, "title": "[QUESTION] How to save_html while using Progress", "user": {"login": "AnthoBalitrand", "id": 24936333, "node_id": "MDQ6VXNlcjI0OTM2MzMz", "avatar_url": "https://avatars.githubusercontent.com/u/24936333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AnthoBalitrand", "html_url": "https://github.com/AnthoBalitrand", "followers_url": "https://api.github.com/users/AnthoBalitrand/followers", "following_url": "https://api.github.com/users/AnthoBalitrand/following{/other_user}", "gists_url": "https://api.github.com/users/AnthoBalitrand/gists{/gist_id}", "starred_url": "https://api.github.com/users/AnthoBalitrand/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AnthoBalitrand/subscriptions", "organizations_url": "https://api.github.com/users/AnthoBalitrand/orgs", "repos_url": "https://api.github.com/users/AnthoBalitrand/repos", "events_url": "https://api.github.com/users/AnthoBalitrand/events{/privacy}", "received_events_url": "https://api.github.com/users/AnthoBalitrand/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-02-18T14:07:24Z", "updated_at": "2022-02-22T19:20:38Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Need some help here if possible : \r\nhow to render a readable output using console.save_html() while having Progress objects ? \r\n\r\nThe Progress outputs are also wrote on the html (which makes it unreadable), while I would like to export only logged stuff. \r\n\r\nThanks for your help !", "reactions": {"url": "https://api.github.com/repos/Textualize/rich/issues/1978/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Textualize/rich/issues/1978/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/Textualize/rich/issues/1918", "repository_url": "https://api.github.com/repos/Textualize/rich", "labels_url": "https://api.github.com/repos/Textualize/rich/issues/1918/labels{/name}", "comments_url": "https://api.github.com/repos/Textualize/rich/issues/1918/comments", "events_url": "https://api.github.com/repos/Textualize/rich/issues/1918/events", "html_url": "https://github.com/Textualize/rich/pull/1918", "id": 1124571706, "node_id": "PR_kwDODSlIsc4yGiXY", "number": 1918, "title": "Fixed force_terminal on Jupyter", "user": {"login": "verdimrc", "id": 2340781, "node_id": "MDQ6VXNlcjIzNDA3ODE=", "avatar_url": "https://avatars.githubusercontent.com/u/2340781?v=4", "gravatar_id": "", "url": "https://api.github.com/users/verdimrc", "html_url": "https://github.com/verdimrc", "followers_url": "https://api.github.com/users/verdimrc/followers", "following_url": "https://api.github.com/users/verdimrc/following{/other_user}", "gists_url": "https://api.github.com/users/verdimrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/verdimrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/verdimrc/subscriptions", "organizations_url": "https://api.github.com/users/verdimrc/orgs", "repos_url": "https://api.github.com/users/verdimrc/repos", "events_url": "https://api.github.com/users/verdimrc/events{/privacy}", "received_events_url": "https://api.github.com/users/verdimrc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2022-02-04T20:03:59Z", "updated_at": "2022-02-27T10:57:38Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/Textualize/rich/pulls/1918", "html_url": "https://github.com/Textualize/rich/pull/1918", "diff_url": "https://github.com/Textualize/rich/pull/1918.diff", "patch_url": "https://github.com/Textualize/rich/pull/1918.patch", "merged_at": null}, "body": "## Type of changes\r\n\r\n- [x] Bug fix\r\n- [ ] New feature\r\n- [ ] Documentation / docstrings\r\n- [ ] Tests\r\n- [ ] Other\r\n\r\n## Checklist\r\n\r\n- [x] I've run the latest [black](https://github.com/psf/black) with default args on new code.\r\n- [ ] I've updated CHANGELOG.md and CONTRIBUTORS.md where appropriate.\r\n- [ ] I've added tests for new code.\r\n- [x] I accept that @willmcgugan may be pedantic in the code review.\r\n\r\n## Description\r\n\r\nPlease describe your changes here. If this fixes a bug, please link to the issue, if possible.\r\n\r\nFixes behavior after running `rich.pretty.install()` Jupyter Lab:\r\n\r\n- Do not show `<Figure size 432x288 with 1 Axes>` on Matplotlib figures\r\n- With `force_terminal=True`. and `force_jupyter=None` (or `True`), pandas dataframe must still be rendered once (i.e., the html repr).\r\n\r\nScreenshot below (from this [notebook](https://gist.github.com/verdimrc/221f602a90b6c0733cb29c8d665ad674)) compares the four behaviors: (1) vanilla Python, (2 and 3) rich, and (4) this PR.\r\n\r\n![screenshot](https://user-images.githubusercontent.com/2340781/154830727-6ac50554-4cfa-4281-83cb-02ad3f6e52db.png)\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Textualize/rich/issues/1918/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Textualize/rich/issues/1918/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/Textualize/rich/issues/1906", "repository_url": "https://api.github.com/repos/Textualize/rich", "labels_url": "https://api.github.com/repos/Textualize/rich/issues/1906/labels{/name}", "comments_url": "https://api.github.com/repos/Textualize/rich/issues/1906/comments", "events_url": "https://api.github.com/repos/Textualize/rich/issues/1906/events", "html_url": "https://github.com/Textualize/rich/issues/1906", "id": 1122332007, "node_id": "I_kwDODSlIsc5C5W1n", "number": 1906, "title": "[REQUEST] Optional RichHandler Keywords", "user": {"login": "aaronst", "id": 7453602, "node_id": "MDQ6VXNlcjc0NTM2MDI=", "avatar_url": "https://avatars.githubusercontent.com/u/7453602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aaronst", "html_url": "https://github.com/aaronst", "followers_url": "https://api.github.com/users/aaronst/followers", "following_url": "https://api.github.com/users/aaronst/following{/other_user}", "gists_url": "https://api.github.com/users/aaronst/gists{/gist_id}", "starred_url": "https://api.github.com/users/aaronst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aaronst/subscriptions", "organizations_url": "https://api.github.com/users/aaronst/orgs", "repos_url": "https://api.github.com/users/aaronst/repos", "events_url": "https://api.github.com/users/aaronst/events{/privacy}", "received_events_url": "https://api.github.com/users/aaronst/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2200581776, "node_id": "MDU6TGFiZWwyMjAwNTgxNzc2", "url": "https://api.github.com/repos/Textualize/rich/labels/Needs%20triage", "name": "Needs triage", "color": "bfdadc", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-02-02T20:00:35Z", "updated_at": "2022-02-04T13:32:10Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**How would you improve Rich?**\r\n\r\nCurrently, `RichHandler.KEYWORDS` is a class variable containing common HTTP methods.\r\nhttps://github.com/Textualize/rich/blob/94273ee7030be773542110c0c70809535a08c6eb/rich/logging.py#L46-L55\r\n\r\nIt would be cool if `RichHandler()` had an optional `keywords` parameter that allowed for a custom set of keywords.\r\n\r\nI'd be happy to submit a PR for this, let me know!", "reactions": {"url": "https://api.github.com/repos/Textualize/rich/issues/1906/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Textualize/rich/issues/1906/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/Textualize/rich/issues/1903", "repository_url": "https://api.github.com/repos/Textualize/rich", "labels_url": "https://api.github.com/repos/Textualize/rich/issues/1903/labels{/name}", "comments_url": "https://api.github.com/repos/Textualize/rich/issues/1903/comments", "events_url": "https://api.github.com/repos/Textualize/rich/issues/1903/events", "html_url": "https://github.com/Textualize/rich/issues/1903", "id": 1120514261, "node_id": "I_kwDODSlIsc5CybDV", "number": 1903, "title": "[BUG] Thread race tracking bug", "user": {"login": "GBeauregard", "id": 1444900, "node_id": "MDQ6VXNlcjE0NDQ5MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1444900?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GBeauregard", "html_url": "https://github.com/GBeauregard", "followers_url": "https://api.github.com/users/GBeauregard/followers", "following_url": "https://api.github.com/users/GBeauregard/following{/other_user}", "gists_url": "https://api.github.com/users/GBeauregard/gists{/gist_id}", "starred_url": "https://api.github.com/users/GBeauregard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GBeauregard/subscriptions", "organizations_url": "https://api.github.com/users/GBeauregard/orgs", "repos_url": "https://api.github.com/users/GBeauregard/repos", "events_url": "https://api.github.com/users/GBeauregard/events{/privacy}", "received_events_url": "https://api.github.com/users/GBeauregard/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2200581776, "node_id": "MDU6TGFiZWwyMjAwNTgxNzc2", "url": "https://api.github.com/repos/Textualize/rich/labels/Needs%20triage", "name": "Needs triage", "color": "bfdadc", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-02-01T10:57:17Z", "updated_at": "2022-02-01T10:57:17Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\n\r\nThis is a tracking bug for #1530 \r\n", "reactions": {"url": "https://api.github.com/repos/Textualize/rich/issues/1903/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Textualize/rich/issues/1903/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/Textualize/rich/issues/1888", "repository_url": "https://api.github.com/repos/Textualize/rich", "labels_url": "https://api.github.com/repos/Textualize/rich/issues/1888/labels{/name}", "comments_url": "https://api.github.com/repos/Textualize/rich/issues/1888/comments", "events_url": "https://api.github.com/repos/Textualize/rich/issues/1888/events", "html_url": "https://github.com/Textualize/rich/issues/1888", "id": 1118739805, "node_id": "I_kwDODSlIsc5Crp1d", "number": 1888, "title": "Extra output in progress bars running on jupyter notebooks. ", "user": {"login": "tylerflex", "id": 92756888, "node_id": "U_kgDOBYdbmA", "avatar_url": "https://avatars.githubusercontent.com/u/92756888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tylerflex", "html_url": "https://github.com/tylerflex", "followers_url": "https://api.github.com/users/tylerflex/followers", "following_url": "https://api.github.com/users/tylerflex/following{/other_user}", "gists_url": "https://api.github.com/users/tylerflex/gists{/gist_id}", "starred_url": "https://api.github.com/users/tylerflex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tylerflex/subscriptions", "organizations_url": "https://api.github.com/users/tylerflex/orgs", "repos_url": "https://api.github.com/users/tylerflex/repos", "events_url": "https://api.github.com/users/tylerflex/events{/privacy}", "received_events_url": "https://api.github.com/users/tylerflex/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2200581776, "node_id": "MDU6TGFiZWwyMjAwNTgxNzc2", "url": "https://api.github.com/repos/Textualize/rich/labels/Needs%20triage", "name": "Needs triage", "color": "bfdadc", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-01-30T22:29:03Z", "updated_at": "2022-01-31T16:24:04Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\n\r\nI have a simple progressbar running in a jupyter notebook.\r\n\r\n```\r\nfrom rich.progress import track\r\n\r\nfor n in track(range(10), description=\"Processing...\"):\r\n    time.sleep(.1)\r\n```\r\n\r\nWhen the progressbar exists, the final state is displayed along with the updating progressbar, creating a duplicate\r\n\r\n<img width=\"510\" alt=\"image\" src=\"https://user-images.githubusercontent.com/92756888/151720512-0b0c8753-5a8e-44b3-b284-fc0d62d81837.png\">\r\n\r\nIs there a recommended way to have the final display replace the updating display?  Note: works as expected in interactive ipython shell or script.\r\n\r\nThank you!\r\n\r\n```\r\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 <class 'rich.console.Console'> \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n\u2502 A high level console interface.                                     \u2502\r\n\u2502                                                                     \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\r\n\u2502 \u2502 <console width=71 ColorSystem.TRUECOLOR>                        \u2502 \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\r\n\u2502                                                                     \u2502\r\n\u2502     color_system = 'truecolor'                                      \u2502\r\n\u2502         encoding = 'utf-8'                                          \u2502\r\n\u2502             file = <_io.TextIOWrapper name='<stdout>' mode='w'      \u2502\r\n\u2502                    encoding='utf-8'>                                \u2502\r\n\u2502           height = 51                                               \u2502\r\n\u2502    is_alt_screen = False                                            \u2502\r\n\u2502 is_dumb_terminal = False                                            \u2502\r\n\u2502   is_interactive = True                                             \u2502\r\n\u2502       is_jupyter = False                                            \u2502\r\n\u2502      is_terminal = True                                             \u2502\r\n\u2502   legacy_windows = False                                            \u2502\r\n\u2502         no_color = False                                            \u2502\r\n\u2502          options = ConsoleOptions(                                  \u2502\r\n\u2502                        size=ConsoleDimensions(width=71, height=51), \u2502\r\n\u2502                        legacy_windows=False,                        \u2502\r\n\u2502                        min_width=1,                                 \u2502\r\n\u2502                        max_width=71,                                \u2502\r\n\u2502                        is_terminal=True,                            \u2502\r\n\u2502                        encoding='utf-8',                            \u2502\r\n\u2502                        max_height=51,                               \u2502\r\n\u2502                        justify=None,                                \u2502\r\n\u2502                        overflow=None,                               \u2502\r\n\u2502                        no_wrap=False,                               \u2502\r\n\u2502                        highlight=None,                              \u2502\r\n\u2502                        markup=None,                                 \u2502\r\n\u2502                        height=None                                  \u2502\r\n\u2502                    )                                                \u2502\r\n\u2502            quiet = False                                            \u2502\r\n\u2502           record = False                                            \u2502\r\n\u2502         safe_box = True                                             \u2502\r\n\u2502             size = ConsoleDimensions(width=71, height=51)           \u2502\r\n\u2502        soft_wrap = False                                            \u2502\r\n\u2502           stderr = False                                            \u2502\r\n\u2502            style = None                                             \u2502\r\n\u2502         tab_size = 8                                                \u2502\r\n\u2502            width = 71                                               \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\nplatform=\"Darwin\"\r\nWindowsConsoleFeatures(vt=False, truecolor=False)\r\nrich==11.0.0\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/Textualize/rich/issues/1888/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Textualize/rich/issues/1888/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/Textualize/rich/issues/1877", "repository_url": "https://api.github.com/repos/Textualize/rich", "labels_url": "https://api.github.com/repos/Textualize/rich/issues/1877/labels{/name}", "comments_url": "https://api.github.com/repos/Textualize/rich/issues/1877/comments", "events_url": "https://api.github.com/repos/Textualize/rich/issues/1877/events", "html_url": "https://github.com/Textualize/rich/issues/1877", "id": 1117230210, "node_id": "I_kwDODSlIsc5Cl5SC", "number": 1877, "title": "[BUG] rich.progress should fallback to use \u2500 instead of -", "user": {"login": "pcroland", "id": 11183274, "node_id": "MDQ6VXNlcjExMTgzMjc0", "avatar_url": "https://avatars.githubusercontent.com/u/11183274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcroland", "html_url": "https://github.com/pcroland", "followers_url": "https://api.github.com/users/pcroland/followers", "following_url": "https://api.github.com/users/pcroland/following{/other_user}", "gists_url": "https://api.github.com/users/pcroland/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcroland/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcroland/subscriptions", "organizations_url": "https://api.github.com/users/pcroland/orgs", "repos_url": "https://api.github.com/users/pcroland/repos", "events_url": "https://api.github.com/users/pcroland/events{/privacy}", "received_events_url": "https://api.github.com/users/pcroland/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1809645463, "node_id": "MDU6TGFiZWwxODA5NjQ1NDYz", "url": "https://api.github.com/repos/Textualize/rich/labels/accepted", "name": "accepted", "color": "c5def5", "default": false, "description": "Task was accepted"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2022-01-28T10:20:30Z", "updated_at": "2022-02-18T11:32:02Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "So I use wsltty mainly where rich.progress uses the `\u2501\u2501` character for the progress bar. I checked it in cmd.exe and it showed `--` for the progress bar. The fallback should be `\u2500\u2500` (also used in tables), it would give a connected line.\r\n![img](https://i.kek.sh/4Sy5TIB4O6n.png)\r\n\r\nbtw: is there any terminal that does not support the `\u2501` character?", "reactions": {"url": "https://api.github.com/repos/Textualize/rich/issues/1877/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Textualize/rich/issues/1877/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/Textualize/rich/issues/1870", "repository_url": "https://api.github.com/repos/Textualize/rich", "labels_url": "https://api.github.com/repos/Textualize/rich/issues/1870/labels{/name}", "comments_url": "https://api.github.com/repos/Textualize/rich/issues/1870/comments", "events_url": "https://api.github.com/repos/Textualize/rich/issues/1870/events", "html_url": "https://github.com/Textualize/rich/issues/1870", "id": 1114424978, "node_id": "I_kwDODSlIsc5CbMaS", "number": 1870, "title": "[BUG] Rich is not using the full width of the Jupyter notebook", "user": {"login": "saiwing-yeung", "id": 12464429, "node_id": "MDQ6VXNlcjEyNDY0NDI5", "avatar_url": "https://avatars.githubusercontent.com/u/12464429?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saiwing-yeung", "html_url": "https://github.com/saiwing-yeung", "followers_url": "https://api.github.com/users/saiwing-yeung/followers", "following_url": "https://api.github.com/users/saiwing-yeung/following{/other_user}", "gists_url": "https://api.github.com/users/saiwing-yeung/gists{/gist_id}", "starred_url": "https://api.github.com/users/saiwing-yeung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saiwing-yeung/subscriptions", "organizations_url": "https://api.github.com/users/saiwing-yeung/orgs", "repos_url": "https://api.github.com/users/saiwing-yeung/repos", "events_url": "https://api.github.com/users/saiwing-yeung/events{/privacy}", "received_events_url": "https://api.github.com/users/saiwing-yeung/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2200581776, "node_id": "MDU6TGFiZWwyMjAwNTgxNzc2", "url": "https://api.github.com/repos/Textualize/rich/labels/Needs%20triage", "name": "Needs triage", "color": "bfdadc", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-01-25T22:28:00Z", "updated_at": "2022-01-27T15:15:16Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Rich is not using the full width of the Jupyter notebook.\r\n\r\nFor example, here I expect the lines for `index` and `sort` to be both fit on one line.\r\n\r\n![image](https://user-images.githubusercontent.com/12464429/151069934-e3c7f8cb-8e88-4aec-b684-be3f6609361f.png)\r\n\r\nI am not sure if this is the same issue as [this](https://github.com/Textualize/rich/issues/504). If it is, is there a way I can manually set the width (I'd do it at the beginning of the notebook)? Thanks!\r\n\r\nIt works fine on IPython in the terminal though.\r\n\r\n**Platform**\r\n<details>\r\n<summary>Click to expand</summary>\r\n\r\nWhat platform (Win/Linux/Mac) are you running on? What terminal software are you using?\r\n\r\nMac; Jupyter\r\n\r\nI may ask you to cut and paste the output of the following commands. It may save some time if you do it now.\r\n\r\n```\r\npython -m rich.diagnose\r\npython -m rich._windows\r\npip freeze | grep rich\r\n```\r\n \r\n```\r\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 <class 'rich.console.Console'> \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n\u2502 A high level console interface.                                              \u2502\r\n\u2502                                                                              \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\r\n\u2502 \u2502 <console width=80 ColorSystem.TRUECOLOR>                                 \u2502 \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\r\n\u2502                                                                              \u2502\r\n\u2502     color_system = 'truecolor'                                               \u2502\r\n\u2502         encoding = 'utf-8'                                                   \u2502\r\n\u2502             file = <_io.TextIOWrapper name='<stdout>' mode='w'               \u2502\r\n\u2502                    encoding='utf-8'>                                         \u2502\r\n\u2502           height = 24                                                        \u2502\r\n\u2502    is_alt_screen = False                                                     \u2502\r\n\u2502 is_dumb_terminal = False                                                     \u2502\r\n\u2502   is_interactive = True                                                      \u2502\r\n\u2502       is_jupyter = False                                                     \u2502\r\n\u2502      is_terminal = True                                                      \u2502\r\n\u2502   legacy_windows = False                                                     \u2502\r\n\u2502         no_color = False                                                     \u2502\r\n\u2502          options = ConsoleOptions(                                           \u2502\r\n\u2502                        size=ConsoleDimensions(width=80, height=24),          \u2502\r\n\u2502                        legacy_windows=False,                                 \u2502\r\n\u2502                        min_width=1,                                          \u2502\r\n\u2502                        max_width=80,                                         \u2502\r\n\u2502                        is_terminal=True,                                     \u2502\r\n\u2502                        encoding='utf-8',                                     \u2502\r\n\u2502                        max_height=24,                                        \u2502\r\n\u2502                        justify=None,                                         \u2502\r\n\u2502                        overflow=None,                                        \u2502\r\n\u2502                        no_wrap=False,                                        \u2502\r\n\u2502                        highlight=None,                                       \u2502\r\n\u2502                        markup=None,                                          \u2502\r\n\u2502                        height=None                                           \u2502\r\n\u2502                    )                                                         \u2502\r\n\u2502            quiet = False                                                     \u2502\r\n\u2502           record = False                                                     \u2502\r\n\u2502         safe_box = True                                                      \u2502\r\n\u2502             size = ConsoleDimensions(width=80, height=24)                    \u2502\r\n\u2502        soft_wrap = False                                                     \u2502\r\n\u2502           stderr = False                                                     \u2502\r\n\u2502            style = None                                                      \u2502\r\n\u2502         tab_size = 8                                                         \u2502\r\n\u2502            width = 80                                                        \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\nplatform=\"Darwin\"\r\nWindowsConsoleFeatures(vt=False, truecolor=False)\r\nrich @ file:///home/conda/feedstock_root/build_artifacts/rich_1641736075057/work\r\n```\r\n\r\n\r\n\r\n</details>\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Textualize/rich/issues/1870/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Textualize/rich/issues/1870/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/Textualize/rich/issues/1859", "repository_url": "https://api.github.com/repos/Textualize/rich", "labels_url": "https://api.github.com/repos/Textualize/rich/issues/1859/labels{/name}", "comments_url": "https://api.github.com/repos/Textualize/rich/issues/1859/comments", "events_url": "https://api.github.com/repos/Textualize/rich/issues/1859/events", "html_url": "https://github.com/Textualize/rich/issues/1859", "id": 1111169456, "node_id": "I_kwDODSlIsc5COxmw", "number": 1859, "title": "[REQUEST] Support for PEP 654 tracebacks (ExceptionGroups)", "user": {"login": "Tinche", "id": 1909233, "node_id": "MDQ6VXNlcjE5MDkyMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/1909233?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Tinche", "html_url": "https://github.com/Tinche", "followers_url": "https://api.github.com/users/Tinche/followers", "following_url": "https://api.github.com/users/Tinche/following{/other_user}", "gists_url": "https://api.github.com/users/Tinche/gists{/gist_id}", "starred_url": "https://api.github.com/users/Tinche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Tinche/subscriptions", "organizations_url": "https://api.github.com/users/Tinche/orgs", "repos_url": "https://api.github.com/users/Tinche/repos", "events_url": "https://api.github.com/users/Tinche/events{/privacy}", "received_events_url": "https://api.github.com/users/Tinche/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1668492275, "node_id": "MDU6TGFiZWwxNjY4NDkyMjc1", "url": "https://api.github.com/repos/Textualize/rich/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}, {"id": 1809645463, "node_id": "MDU6TGFiZWwxODA5NjQ1NDYz", "url": "https://api.github.com/repos/Textualize/rich/labels/accepted", "name": "accepted", "color": "c5def5", "default": false, "description": "Task was accepted"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-01-22T01:33:39Z", "updated_at": "2022-01-24T11:49:37Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nlet me provide some context first. [PEP 654](https://www.python.org/dev/peps/pep-0654/) introduces a new type of exception - an ExceptionGroup. (Also a BaseExceptionGroup, which is like the BaseException version of it). An ExceptionGroup is essentially a container for a list of inner exceptions. (It also introduces other things, like the except* clause, but I don't think that's relevant to Rich tracebacks.)\r\n\r\nThe hope is this ExceptionGroup will become a standard way for libraries to raise groups of exceptions. For example, this is a common use case for the Hypothesis library. There will be a backport package on PyPI to provide ExceptionGroups to older Python versions, so third party libraries will be able to use them without issue.\r\n\r\nThere is another PEP, [PEP 678](https://www.python.org/dev/peps/pep-0678/), that builds on ExceptionGroups to reify the concept of an exception note. This PEP has not yet been accepted, and is currently being discussed. (Due to a fluke, the CPython 3.11a4 release contains an implementation of it.) The idea of this PEP is for libraries to be able to attach a string to any exception under the `__note__` attribute, and for traceback machinery to simply print it out if it is present. The notes can and will be multiline in practice, I think.\r\n\r\nSo ExceptionGroups are an official thing, notes will maybe become a thing.\r\n\r\nI'm working on a couple of libraries that can benefit from ExceptionGroups so I can give an example. Imagine you're structuring a JSON payload into a class, and there are errors. Setup code:\r\n\r\n```python\r\nfrom attrs import define\r\nfrom cattrs import structure\r\n\r\n@define\r\nclass Test:\r\n    a: int\r\n    b: int\r\n    c: float\r\n\r\n\r\n@define\r\nclass Outer:\r\n    inner: Test\r\n    c: int\r\n\r\nstructure({\"inner\": {\"a\": 'not_an_int', \"b\": 1}}, Outer)\r\n```\r\nAn ExceptionGroup flies out, and the default traceback module in 3.11 renders it like this:\r\n```python\r\n  + Exception Group Traceback (most recent call last):\r\n  |   File \"/Users/tintvrtkovic/pg/cattrs/a01.py\", line 33, in <module>\r\n  |     structure({\"inner\": {\"a\": 'not_an_int', \"b\": 1}}, Outer)\r\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  |   File \"/Users/tintvrtkovic/pg/cattrs/src/cattr/converters.py\", line 308, in structure\r\n  |     return self._structure_func.dispatch(cl)(obj, cl)\r\n  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  |   File \"<cattrs generated structure __main__.Outer>\", line 14, in structure_Outer\r\n  | ExceptionGroup\r\n  +-+---------------- 1 ----------------\r\n    | Exception Group Traceback (most recent call last):\r\n    |   File \"<cattrs generated structure __main__.Outer>\", line 5, in structure_Outer\r\n    |   File \"<cattrs generated structure __main__.Test>\", line 19, in structure_Test\r\n    | ExceptionGroup\r\n    | Structuring class attribute Outer.inner\r\n    +-+---------------- 1 ----------------\r\n      | Traceback (most recent call last):\r\n      |   File \"<cattrs generated structure __main__.Test>\", line 5, in structure_Test\r\n      | ValueError: invalid literal for int() with base 10: 'not_an_int'\r\n      | Structuring class attribute Test.a\r\n      +---------------- 2 ----------------\r\n      | Traceback (most recent call last):\r\n      |   File \"<cattrs generated structure __main__.Test>\", line 15, in structure_Test\r\n      | KeyError: 'c'\r\n      | Structuring class attribute Test.c\r\n      +------------------------------------\r\n    +---------------- 2 ----------------\r\n    | Traceback (most recent call last):\r\n    |   File \"<cattrs generated structure __main__.Outer>\", line 10, in structure_Outer\r\n    | KeyError: 'c'\r\n    | Structuring class attribute Outer.c\r\n    +------------------------------------\r\n```\r\n\r\nThe `Structuring class attribute Test.a` strings are notes, added by cattrs.\r\n\r\nIt's a little messy, but there's a lot of information in there. The `Outer` class has errors for attributes `inner` (an ExceptionGroup) and `c` (a KeyError), and diving in, the Inner class (under `inner`) has errors for `a` (ValueError) and `c` (KeyError).\r\n\r\nAnyway, this is how the traceback module prints this. I'm sure a Rich version would be much easier on the eyes ;)", "reactions": {"url": "https://api.github.com/repos/Textualize/rich/issues/1859/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Textualize/rich/issues/1859/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/Textualize/rich/issues/1824", "repository_url": "https://api.github.com/repos/Textualize/rich", "labels_url": "https://api.github.com/repos/Textualize/rich/issues/1824/labels{/name}", "comments_url": "https://api.github.com/repos/Textualize/rich/issues/1824/comments", "events_url": "https://api.github.com/repos/Textualize/rich/issues/1824/events", "html_url": "https://github.com/Textualize/rich/issues/1824", "id": 1098599849, "node_id": "I_kwDODSlIsc5Be02p", "number": 1824, "title": "[bug] rich + crlf = notepad python", "user": {"login": "philiparvidsson", "id": 1163299, "node_id": "MDQ6VXNlcjExNjMyOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1163299?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philiparvidsson", "html_url": "https://github.com/philiparvidsson", "followers_url": "https://api.github.com/users/philiparvidsson/followers", "following_url": "https://api.github.com/users/philiparvidsson/following{/other_user}", "gists_url": "https://api.github.com/users/philiparvidsson/gists{/gist_id}", "starred_url": "https://api.github.com/users/philiparvidsson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philiparvidsson/subscriptions", "organizations_url": "https://api.github.com/users/philiparvidsson/orgs", "repos_url": "https://api.github.com/users/philiparvidsson/repos", "events_url": "https://api.github.com/users/philiparvidsson/events{/privacy}", "received_events_url": "https://api.github.com/users/philiparvidsson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2200581776, "node_id": "MDU6TGFiZWwyMjAwNTgxNzc2", "url": "https://api.github.com/repos/Textualize/rich/labels/Needs%20triage", "name": "Needs triage", "color": "bfdadc", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2022-01-11T03:07:08Z", "updated_at": "2022-01-24T18:37:18Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "## How to h4x?\r\n\r\nAfter approx. 12 hours of debugging why my app is silently crashing, I have finally figured out the cause. Here's a minimal (non-)working example file for you to work on, lol. It only crashes on Windoze, and it does so in a really nasty way which seems to entirely screw up the Python runtime. Line 1088 in one of the rich source files may be related.\r\n\r\n```python\r\nimport os\r\nimport time\r\n\r\nfrom rich.layout import Layout\r\nfrom rich.live import Live\r\nfrom rich.text import Text\r\n\r\ntext = Text()\r\ntext.append(Text(\"foo\" + os.linesep, style=\"yellow\"))\r\nlayout = Layout(renderable=text)\r\n\r\nwith Live(layout):\r\n    while True:\r\n        time.sleep(0.1)\r\n```\r\n## Screenshot\r\n\r\n![image](https://user-images.githubusercontent.com/1163299/148874070-e5ced9d6-6e92-4390-999f-b78dc4d4931b.png)\r\n\r\n## Platform\r\n\r\nWindows 10 Command Prompt in a VM, but also tested on live Windows 10 system. Does not crash on Linux.\r\n\r\n```\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 <class 'rich.console.Console'> \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502 A high level console interface.                                              \u2502\r\n\u2502                                                                              \u2502\r\n\u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502\r\n\u2502 \u2502 <console width=189 ColorSystem.WINDOWS>                                  \u2502 \u2502\r\n\u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502\r\n\u2502                                                                              \u2502\r\n\u2502     color_system = 'windows'                                                 \u2502\r\n\u2502         encoding = 'utf-8'                                                   \u2502\r\n\u2502             file = <colorama.ansitowin32.StreamWrapper object at 0x01809C10> \u2502\r\n\u2502           height = 42                                                        \u2502\r\n\u2502    is_alt_screen = False                                                     \u2502\r\n\u2502 is_dumb_terminal = False                                                     \u2502\r\n\u2502   is_interactive = True                                                      \u2502\r\n\u2502       is_jupyter = False                                                     \u2502\r\n\u2502      is_terminal = True                                                      \u2502\r\n\u2502   legacy_windows = True                                                      \u2502\r\n\u2502         no_color = False                                                     \u2502\r\n\u2502          options = ConsoleOptions(                                           \u2502\r\n\u2502                        size=ConsoleDimensions(width=189, height=42),         \u2502\r\n\u2502                        legacy_windows=True,                                  \u2502\r\n\u2502                        min_width=1,                                          \u2502\r\n\u2502                        max_width=189,                                        \u2502\r\n\u2502                        is_terminal=True,                                     \u2502\r\n\u2502                        encoding='utf-8',                                     \u2502\r\n\u2502                        max_height=42,                                        \u2502\r\n\u2502                        justify=None,                                         \u2502\r\n\u2502                        overflow=None,                                        \u2502\r\n\u2502                        no_wrap=False,                                        \u2502\r\n\u2502                        highlight=None,                                       \u2502\r\n\u2502                        markup=None,                                          \u2502\r\n\u2502                        height=None                                           \u2502\r\n\u2502                    )                                                         \u2502\r\n\u2502            quiet = False                                                     \u2502\r\n\u2502           record = False                                                     \u2502\r\n\u2502         safe_box = True                                                      \u2502\r\n\u2502             size = ConsoleDimensions(width=189, height=42)                   \u2502\r\n\u2502        soft_wrap = False                                                     \u2502\r\n\u2502           stderr = False                                                     \u2502\r\n\u2502            style = None                                                      \u2502\r\n\u2502         tab_size = 8                                                         \u2502\r\n\u2502            width = 189                                                       \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\nplatform=\"Windows\"\r\nWindowsConsoleFeatures(vt=False, truecolor=False)\r\nrich==11.0.0\r\n```\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/Textualize/rich/issues/1824/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Textualize/rich/issues/1824/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/Textualize/rich/issues/1810", "repository_url": "https://api.github.com/repos/Textualize/rich", "labels_url": "https://api.github.com/repos/Textualize/rich/issues/1810/labels{/name}", "comments_url": "https://api.github.com/repos/Textualize/rich/issues/1810/comments", "events_url": "https://api.github.com/repos/Textualize/rich/issues/1810/events", "html_url": "https://github.com/Textualize/rich/issues/1810", "id": 1095442726, "node_id": "I_kwDODSlIsc5BSyEm", "number": 1810, "title": "[REQUEST] Ability to suppress the length of local variables or completely filter them in Rich tracebacks.", "user": {"login": "pbsds", "id": 140964, "node_id": "MDQ6VXNlcjE0MDk2NA==", "avatar_url": "https://avatars.githubusercontent.com/u/140964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pbsds", "html_url": "https://github.com/pbsds", "followers_url": "https://api.github.com/users/pbsds/followers", "following_url": "https://api.github.com/users/pbsds/following{/other_user}", "gists_url": "https://api.github.com/users/pbsds/gists{/gist_id}", "starred_url": "https://api.github.com/users/pbsds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pbsds/subscriptions", "organizations_url": "https://api.github.com/users/pbsds/orgs", "repos_url": "https://api.github.com/users/pbsds/repos", "events_url": "https://api.github.com/users/pbsds/events{/privacy}", "received_events_url": "https://api.github.com/users/pbsds/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1809645463, "node_id": "MDU6TGFiZWwxODA5NjQ1NDYz", "url": "https://api.github.com/repos/Textualize/rich/labels/accepted", "name": "accepted", "color": "c5def5", "default": false, "description": "Task was accepted"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-01-06T15:45:42Z", "updated_at": "2022-01-20T11:42:29Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Have you checked the issues for a similar suggestions?**\r\n#318 and #1378 is related\r\n\r\n**How would you improve Rich?**\r\n\r\nShowing the local variables in Rich tracebacks is incredibly helpful, but this does at times become too verbose prompting me to disable it. Especially when dealing with types such as `torch.nn.Module`, which feature _very_ long `__repr__` and `__str__` outputs (example of a single frame featured below). My feature request is twofold: the ability to _filter_ certain local variables entierly, and the ability to _suppress_/_truncate_ the length of others.\r\n\r\nVariable names that start with a double underscore prefix (e.g. `__init__`) is a prime target for filtering.\r\nI imagine parametrizing such behavior in `rich.traceback.install` with an optional lambda function (e.g. `locals_filterer=lambda x: not x.startswith(\"__\")`).\r\n\r\nFor suppressing/truncating the length, one could either fallback to the default `object.__repr__` format, or simply clip all `__repr__`() output to `n` lines with trailing ellipsis (as dictionaries already seem to do).\r\nFor deciding which locals to suppress, if not all, one could either provide a list of qualified class names (`type(obj).__qualname__`) and types (kinda like the existing `suppress` argument for modules), or provide a lambda which determines if it should be supressed (e.g. `locals_suppress=lambda x: any(isinstance(x, i) for i in list_of_types_to_suppress)`)\r\n\r\n<details>\r\n<summary>Example output (note the `module = MyMachineLearningModel`):</summary>\r\n\r\n```\r\n\u2502 /home/pbsds/ntnu/xxxxxxxxxxxxxxxxxxxxxxxxxx/yyyyyy/cli.py:332 in log_training_setup                                          \u2502\r\n\u2502                                                                                                                              \u2502\r\n\u2502   329 \u2502   \u2502   if logger is not None:                                                                                         \u2502\r\n\u2502   330 \u2502   \u2502   \u2502   print(f\"{logger.__class__.__qualname__} hparams:\")                                                         \u2502\r\n\u2502   331 \u2502   \u2502   \u2502   print_dict_twocolumn(config.logging)                                                                       \u2502\r\n\u2502 \u2771 332 \u2502   \u2502   \u2502   logging.log_config(logger, logger = {\"_class\": logger.__class__.__name__} |                                \u2502\r\n\u2502   333 \u2502   \u2502   \u2502                                                                                                              \u2502\r\n\u2502   334 \u2502   \u2502   \u2502   # host info                                                                                                \u2502\r\n\u2502   335 \u2502   \u2502   \u2502   def cmd(cmd: Union[str, list[str]]) -> str:                                                                \u2502\r\n\u2502                                                                                                                              \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\r\n\u2502 \u2502                 args = Namespace(mode='module', data_dir=<class 'inspect._empty'>, samples_per_object=12500,             \u2502 \u2502\r\n\u2502 \u2502                        batch_size=5, dataset_workers=4, checkpoint_callback=None, enable_checkpointing=True,             \u2502 \u2502\r\n\u2502 \u2502                        default_root_dir=None, gradient_clip_val=None, gradient_clip_algorithm=None, process_position=0,  \u2502 \u2502\r\n\u2502 \u2502                        num_nodes=1, num_processes=1, devices=None, gpus=None, auto_select_gpus=False, tpu_cores=None,    \u2502 \u2502\r\n\u2502 \u2502                        ipus=None, log_gpu_memory=True, progress_bar_refresh_rate=None, enable_progress_bar=True,         \u2502 \u2502\r\n\u2502 \u2502                        overfit_batches=0.0, track_grad_norm=-1, check_val_every_n_epoch=1, fast_dev_run=False,           \u2502 \u2502\r\n\u2502 \u2502                        accumulate_grad_batches=None, max_epochs=None, min_epochs=None, max_steps=-1, min_steps=None,     \u2502 \u2502\r\n\u2502 \u2502                        max_time=None, limit_train_batches=1.0, limit_val_batches=1.0, limit_test_batches=1.0,            \u2502 \u2502\r\n\u2502 \u2502                        limit_predict_batches=1.0, val_check_interval=1.0, flush_logs_every_n_steps=None,                 \u2502 \u2502\r\n\u2502 \u2502                        log_every_n_steps=50, accelerator=None, strategy=None, sync_batchnorm=False, precision=32,        \u2502 \u2502\r\n\u2502 \u2502                        enable_model_summary=True, weights_summary='top', weights_save_path=None, num_sanity_val_steps=2, \u2502 \u2502\r\n\u2502 \u2502                        resume_from_checkpoint=None, profiler=None, benchmark=False, deterministic=False,                 \u2502 \u2502\r\n\u2502 \u2502                        reload_dataloaders_every_n_epochs=0, reload_dataloaders_every_epoch=False, auto_lr_find=False,    \u2502 \u2502\r\n\u2502 \u2502                        replace_sampler_ddp=True, detect_anomaly=False, auto_scale_batch_size=False,                      \u2502 \u2502\r\n\u2502 \u2502                        prepare_data_per_node=None, plugins=None, amp_backend='native', amp_level=None,                   \u2502 \u2502\r\n\u2502 \u2502                        move_metrics_to_cpu=False, multiple_trainloader_mode='max_size_cycle',                            \u2502 \u2502\r\n\u2502 \u2502                        stochastic_weight_avg=False, terminate_on_nan=None, template=PosixPath('-'),                      \u2502 \u2502\r\n\u2502 \u2502                        jinja2_variables=[['select', '0'], ['hypernetwork_type', 'hypernetwork']], dot=False, onnx=None,  \u2502 \u2502\r\n\u2502 \u2502                        yaml=False, repr=False, summary=False)                                                            \u2502 \u2502\r\n\u2502 \u2502               config = Munch({'trainer': {}, 'datamodule': {}, 'logging': {'save_dir': 'logdir', 'type': 'tensorboard',  \u2502 \u2502\r\n\u2502 \u2502                        'project': 'yyyyyy'}, 'experiment_name': 'experiment_0-20220106-1537-jmdb',                       \u2502 \u2502\r\n\u2502 \u2502                        'MyMachineLearningModel': {'mode': 'medial_sphere', 'extended_plucker': False, 'latent_features': \u2502 \u2502\r\n\u2502 \u2502                        256, 'hidden_features': 256, 'hidden_layers': 4, 'compute_gradients': False, 'n_atoms': 1,        \u2502 \u2502\r\n\u2502 \u2502                        'normalization': None, 'nonlinearity': 'relu', 'use_film': False, 'dropout_prob': 0.0, 'omega_0': \u2502 \u2502\r\n\u2502 \u2502                        30, 'geom_init': None, 'HyperNetwork': {'hidden_layers': 4, 'hidden_features': 256,               \u2502 \u2502\r\n\u2502 \u2502                        'nonlinearity': 'relu', 'normalization': 'layernorm'}}})                                          \u2502 \u2502\r\n\u2502 \u2502           datamodule = <__main__.TODODataModule object at 0x7ff85256b430>                                                \u2502 \u2502\r\n\u2502 \u2502               logger = <pytorch_lightning.loggers.tensorboard.TensorBoardLogger object at 0x7ff852674430>                \u2502 \u2502\r\n\u2502 \u2502               module = MyMachineLearningModel(                                                                           \u2502 \u2502\r\n\u2502 \u2502                          (net): MedialAtomNet(                                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   (net): FCBlock(                                                                               \u2502 \u2502\r\n\u2502 \u2502                        \u2502     (net): MetaSequential(                                                                      \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   (0): FCLayer(                                                                             \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502     (parts): MetaSequential(                                                                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=6, out_features=256, bias=True)                      \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (1): ReLU(inplace=True)                                                               \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502     )                                                                                       \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   )                                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   (1): FCLayer(                                                                             \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502     (parts): MetaSequential(                                                                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                    \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (1): ReLU(inplace=True)                                                               \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502     )                                                                                       \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   )                                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   (2): FCLayer(                                                                             \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502     (parts): MetaSequential(                                                                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                    \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (1): ReLU(inplace=True)                                                               \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502     )                                                                                       \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   )                                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   (3): FCLayer(                                                                             \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502     (parts): MetaSequential(                                                                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                    \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (1): ReLU(inplace=True)                                                               \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502     )                                                                                       \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   )                                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   (4): FCLayer(                                                                             \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502     (parts): MetaSequential(                                                                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                    \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (1): ReLU(inplace=True)                                                               \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502     )                                                                                       \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   )                                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   (5): FCLayer(                                                                             \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502     (parts): MetaSequential(                                                                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=4, bias=True)                      \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502     )                                                                                       \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   )                                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502     )                                                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   )                                                                                             \u2502 \u2502\r\n\u2502 \u2502                        \u2502   (hyper_net): HyperNetwork(                                                                    \u2502 \u2502\r\n\u2502 \u2502                        \u2502     (nets): ModuleList(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   (0): FCBlock(                                                                             \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502     (net): MetaSequential(                                                                  \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (0): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)                        \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (2): ReLU(inplace=True)                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (1): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)                        \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (2): ReLU(inplace=True)                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (2): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)                        \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (2): ReLU(inplace=True)                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (3): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)                        \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (2): ReLU(inplace=True)                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (4): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)                        \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (2): ReLU(inplace=True)                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (5): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=1536, bias=True)               \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502     )                                                                                       \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   )                                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   (1): FCBlock(                                                                             \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502     (net): MetaSequential(                                                                  \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (0): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)                        \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (2): ReLU(inplace=True)                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (1): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)                        \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (2): ReLU(inplace=True)                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (2): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)                        \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (2): ReLU(inplace=True)                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (3): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)                        \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (2): ReLU(inplace=True)                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (4): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)                        \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (2): ReLU(inplace=True)                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (5): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502     )                                                                                       \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   )                                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   (2): FCBlock(                                                                             \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502     (net): MetaSequential(                                                                  \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (0): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)                        \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (2): ReLU(inplace=True)                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (1): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)                        \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (2): ReLU(inplace=True)                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (2): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)                        \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (2): ReLU(inplace=True)                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (3): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)                        \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (2): ReLU(inplace=True)                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (4): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)                        \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (2): ReLU(inplace=True)                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (5): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=65536, bias=True)              \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502     )                                                                                       \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   )                                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   (3): FCBlock(                                                                             \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502     (net): MetaSequential(                                                                  \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (0): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)                        \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (2): ReLU(inplace=True)                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (1): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)                        \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (2): ReLU(inplace=True)                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (2): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)                        \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (2): ReLU(inplace=True)                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (3): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)                        \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (2): ReLU(inplace=True)                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (4): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)                        \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (2): ReLU(inplace=True)                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (5): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502     )                                                                                       \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   )                                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   (4): FCBlock(                                                                             \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502     (net): MetaSequential(                                                                  \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (0): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)                        \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (2): ReLU(inplace=True)                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (1): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)                        \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (2): ReLU(inplace=True)                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (2): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)                        \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (2): ReLU(inplace=True)                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (3): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)                        \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (2): ReLU(inplace=True)                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (4): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)                        \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (2): ReLU(inplace=True)                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (5): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=65536, bias=True)              \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502     )                                                                                       \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   )                                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   (5): FCBlock(                                                                             \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502     (net): MetaSequential(                                                                  \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (0): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)                        \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (2): ReLU(inplace=True)                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (1): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)                        \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (2): ReLU(inplace=True)                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (2): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)                        \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (2): ReLU(inplace=True)                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (3): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)                        \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (2): ReLU(inplace=True)                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (4): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)                        \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (2): ReLU(inplace=True)                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (5): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502     )                                                                                       \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   )                                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   (6): FCBlock(                                                                             \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502     (net): MetaSequential(                                                                  \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (0): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)                        \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (2): ReLU(inplace=True)                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (1): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)                        \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (2): ReLU(inplace=True)                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (2): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)                        \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (2): ReLU(inplace=True)                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (3): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)                        \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (2): ReLU(inplace=True)                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (4): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)                        \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (2): ReLU(inplace=True)                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (5): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=65536, bias=True)              \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502     )                                                                                       \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   )                                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   (7): FCBlock(                                                                             \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502     (net): MetaSequential(                                                                  \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (0): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)                        \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (2): ReLU(inplace=True)                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (1): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)                        \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (2): ReLU(inplace=True)                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (2): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)                        \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (2): ReLU(inplace=True)                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (3): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)                        \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (2): ReLU(inplace=True)                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (4): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)                        \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (2): ReLU(inplace=True)                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (5): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502     )                                                                                       \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   )                                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   (8): FCBlock(                                                                             \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502     (net): MetaSequential(                                                                  \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (0): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)                        \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (2): ReLU(inplace=True)                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (1): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)                        \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (2): ReLU(inplace=True)                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (2): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)                        \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (2): ReLU(inplace=True)                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (3): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)                        \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (2): ReLU(inplace=True)                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (4): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)                        \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (2): ReLU(inplace=True)                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (5): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=65536, bias=True)              \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502     )                                                                                       \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   )                                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   (9): FCBlock(                                                                             \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502     (net): MetaSequential(                                                                  \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (0): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)                        \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (2): ReLU(inplace=True)                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (1): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)                        \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (2): ReLU(inplace=True)                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (2): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)                        \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (2): ReLU(inplace=True)                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (3): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)                        \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (2): ReLU(inplace=True)                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (4): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)                        \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (2): ReLU(inplace=True)                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (5): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502     )                                                                                       \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   )                                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   (10): FCBlock(                                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502     (net): MetaSequential(                                                                  \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (0): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)                        \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (2): ReLU(inplace=True)                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (1): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)                        \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (2): ReLU(inplace=True)                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (2): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)                        \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (2): ReLU(inplace=True)                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (3): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)                        \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (2): ReLU(inplace=True)                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (4): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)                        \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (2): ReLU(inplace=True)                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (5): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=1024, bias=True)               \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502     )                                                                                       \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   )                                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   (11): FCBlock(                                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502     (net): MetaSequential(                                                                  \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (0): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)                        \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (2): ReLU(inplace=True)                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (1): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)                        \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (2): ReLU(inplace=True)                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (2): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)                        \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (2): ReLU(inplace=True)                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (3): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)                        \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (2): ReLU(inplace=True)                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (4): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=256, bias=True)                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)                        \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (2): ReLU(inplace=True)                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   (5): FCLayer(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     (parts): MetaSequential(                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   (0): MetaBatchLinear(in_features=256, out_features=4, bias=True)                  \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502     )                                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   )                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502     )                                                                                       \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   )                                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502     )                                                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   )                                                                                             \u2502 \u2502\r\n\u2502 \u2502                          )                                                                                               \u2502 \u2502\r\n\u2502 \u2502                        )                                                                                                 \u2502 \u2502\r\n\u2502 \u2502       module_hparams = \"HyperNetwork\":      {'hidden_layers': 4, 'hidden_features': 256, 'nonlinearity': 'relu',         \u2502 \u2502\r\n\u2502 \u2502                        'normalization': 'layernorm'}                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \"compute_gradients\": False                                                                        \u2502 \u2502\r\n\u2502 \u2502                        \"dropout_prob\":      0.0                                                                          \u2502 \u2502\r\n\u2502 \u2502                        \"extended_plucker\":  False                                                                        \u2502 \u2502\r\n\u2502 \u2502                        \"geom_init\":         None                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \"hidden_features\":   256                                                                          \u2502 \u2502\r\n\u2502 \u2502                        \"hidden_layers\":     4                                                                            \u2502 \u2502\r\n\u2502 \u2502                        \"latent_features\":   256                                                                          \u2502 \u2502\r\n\u2502 \u2502                        \"mode\":              medial_sphere                                                                \u2502 \u2502\r\n\u2502 \u2502                        \"n_atoms\":           1                                                                            \u2502 \u2502\r\n\u2502 \u2502                        \"nonlinearity\":      relu                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \"normalization\":     None                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \"omega_0\":           30                                                                           \u2502 \u2502\r\n\u2502 \u2502                        \"use_film\":          False                                                                        \u2502 \u2502\r\n\u2502 \u2502             params_d = mappingproxy({                                                                                    \u2502 \u2502\r\n\u2502 \u2502                        \u2502   'self': <Parameter \"self\">,                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   'data_dir': <Parameter \"data_dir: Union[str, pathlib.Path]\">,                                 \u2502 \u2502\r\n\u2502 \u2502                        \u2502   'samples_per_object': <Parameter \"samples_per_object: int = 12500\">,                          \u2502 \u2502\r\n\u2502 \u2502                        \u2502   'batch_size': <Parameter \"batch_size: int = 5\">,                                              \u2502 \u2502\r\n\u2502 \u2502                        \u2502   'dataset_workers': <Parameter \"dataset_workers: int = 4\">                                     \u2502 \u2502\r\n\u2502 \u2502                        })                                                                                                \u2502 \u2502\r\n\u2502 \u2502       params_trainer = mappingproxy({                                                                                    \u2502 \u2502\r\n\u2502 \u2502                        \u2502   'self': <Parameter \"self\">,                                                                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   'logger': <Parameter \"logger: Union[pytorch_lightning.loggers.base.LightningLoggerBase,       \u2502 \u2502\r\n\u2502 \u2502                        Iterable[pytorch_lightning.loggers.base.LightningLoggerBase], bool] = True\">,                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   'checkpoint_callback': <Parameter \"checkpoint_callback: Optional[bool] = None\">,              \u2502 \u2502\r\n\u2502 \u2502                        \u2502   'enable_checkpointing': <Parameter \"enable_checkpointing: bool = True\">,                      \u2502 \u2502\r\n\u2502 \u2502                        \u2502   'callbacks': <Parameter \"callbacks: Union[List[pytorch_lightning.callbacks.base.Callback],    \u2502 \u2502\r\n\u2502 \u2502                        pytorch_lightning.callbacks.base.Callback, NoneType] = None\">,                                    \u2502 \u2502\r\n\u2502 \u2502                        \u2502   'default_root_dir': <Parameter \"default_root_dir: Optional[str] = None\">,                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   'gradient_clip_val': <Parameter \"gradient_clip_val: Union[int, float, NoneType] = None\">,     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   'gradient_clip_algorithm': <Parameter \"gradient_clip_algorithm: Optional[str] = None\">,       \u2502 \u2502\r\n\u2502 \u2502                        \u2502   'process_position': <Parameter \"process_position: int = 0\">,                                  \u2502 \u2502\r\n\u2502 \u2502                        \u2502   'num_nodes': <Parameter \"num_nodes: int = 1\">,                                                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   ... +52                                                                                       \u2502 \u2502\r\n\u2502 \u2502                        })                                                                                                \u2502 \u2502\r\n\u2502 \u2502 print_dict_twocolumn = <function CliInterface.log_training_setup.<locals>.print_dict_twocolumn at 0x7ff8525819d0>        \u2502 \u2502\r\n\u2502 \u2502                 self = CliInterface(                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   module_cls=<class 'yyyyyy.models.xxxxxxxxxxxxxxxxxxx.MyMachineLearningModel'>,                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   datamodule_cls=<class '__main__.TODODataModule'>,                                             \u2502 \u2502\r\n\u2502 \u2502                        \u2502   subparser_dest='mode',                                                                        \u2502 \u2502\r\n\u2502 \u2502                        \u2502   _included_in_config={                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   'trainer': (                                                                              \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   <class 'pytorch_lightning.trainer.trainer.Trainer'>,                                  \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   {                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   'commented': True,                                                                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   'exclude_list': {'logger'},                                                       \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   \u2502   'defaults': {'log_gpu_memory': True}                                              \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   }                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   ),                                                                                        \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   'datamodule': (<class '__main__.TODODataModule'>, {'commented': True}),                   \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   'logging': (                                                                              \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   <module 'yyyyyy.logging' from                                                         \u2502 \u2502\r\n\u2502 \u2502                        '/home/pbsds/ntnu/xxxxxxxxxxxxxxxxxxxxxxxxxx/yyyyyy/logging.py'>,                                 \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   \u2502   {'commented': False, 'save_dir': 'logdir'}                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   )                                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   }                                                                                             \u2502 \u2502\r\n\u2502 \u2502                        )                                                                                                 \u2502 \u2502\r\n\u2502 \u2502      trainer_hparams = {                                                                                                 \u2502 \u2502\r\n\u2502 \u2502                        \u2502   'checkpoint_callback': None,                                                                  \u2502 \u2502\r\n\u2502 \u2502                        \u2502   'enable_checkpointing': True,                                                                 \u2502 \u2502\r\n\u2502 \u2502                        \u2502   'default_root_dir': None,                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   'gradient_clip_val': None,                                                                    \u2502 \u2502\r\n\u2502 \u2502                        \u2502   'gradient_clip_algorithm': None,                                                              \u2502 \u2502\r\n\u2502 \u2502                        \u2502   'process_position': 0,                                                                        \u2502 \u2502\r\n\u2502 \u2502                        \u2502   'num_nodes': 1,                                                                               \u2502 \u2502\r\n\u2502 \u2502                        \u2502   'num_processes': 1,                                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   'devices': None,                                                                              \u2502 \u2502\r\n\u2502 \u2502                        \u2502   'gpus': None,                                                                                 \u2502 \u2502\r\n\u2502 \u2502                        \u2502   ... +49                                                                                       \u2502 \u2502\r\n\u2502 \u2502                        }                                                                                                 \u2502 \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\r\n```\r\n</details>\r\n\r\n**What problem does it solve for you?**\r\n\r\nWhen running my program on a supercluster, which often feature a queue time of several hours,  it sucks for it to immediately crash without me having set `show_locals=True` in `rich.traceback.install` simply due to it being too verbose.\r\nHaving it be enabled all the time, without it being too noisy, would _greatly_ reduce development friction and put a smile on my face.", "reactions": {"url": "https://api.github.com/repos/Textualize/rich/issues/1810/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Textualize/rich/issues/1810/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/Textualize/rich/issues/1797", "repository_url": "https://api.github.com/repos/Textualize/rich", "labels_url": "https://api.github.com/repos/Textualize/rich/issues/1797/labels{/name}", "comments_url": "https://api.github.com/repos/Textualize/rich/issues/1797/comments", "events_url": "https://api.github.com/repos/Textualize/rich/issues/1797/events", "html_url": "https://github.com/Textualize/rich/issues/1797", "id": 1092564310, "node_id": "I_kwDODSlIsc5BHzVW", "number": 1797, "title": "[REQUEST] Allow console.status(transient=False) to keep it in the console", "user": {"login": "zerothi", "id": 4789793, "node_id": "MDQ6VXNlcjQ3ODk3OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/4789793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zerothi", "html_url": "https://github.com/zerothi", "followers_url": "https://api.github.com/users/zerothi/followers", "following_url": "https://api.github.com/users/zerothi/following{/other_user}", "gists_url": "https://api.github.com/users/zerothi/gists{/gist_id}", "starred_url": "https://api.github.com/users/zerothi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zerothi/subscriptions", "organizations_url": "https://api.github.com/users/zerothi/orgs", "repos_url": "https://api.github.com/users/zerothi/repos", "events_url": "https://api.github.com/users/zerothi/events{/privacy}", "received_events_url": "https://api.github.com/users/zerothi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2200581776, "node_id": "MDU6TGFiZWwyMjAwNTgxNzc2", "url": "https://api.github.com/repos/Textualize/rich/labels/Needs%20triage", "name": "Needs triage", "color": "bfdadc", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-01-03T14:36:34Z", "updated_at": "2022-01-06T14:24:15Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "**How would you improve Rich?**\r\n\r\nIt would be great if one could allow the `Status` spinners to remain in the console when printing. Currently the `transient=True` is hard-coded in the `Status.__init__` method. Instead one could pass down the `transient` argument to the `Live` class instantiation. This would allow the status report to remain. \r\n\r\n**What problem does it solve for you?**\r\n\r\nIt allows me to have the entire thing in the prompt. Something that would make it easier for end-users since *every* step is maintained in the output.\r\n\r\nI would be happy to make a PR if you agree this would be nice, something like this would work:\r\n\r\n```python\r\nclass Status(JupyterMixin):\r\n    \"\"\"Displays a status indicator with a 'spinner' animation.\r\n\r\n    Args:\r\n        status (RenderableType): A status renderable (str or Text typically).\r\n        console (Console, optional): Console instance to use, or None for global console. Defaults to None.\r\n        spinner (str, optional): Name of spinner animation (see python -m rich.spinner). Defaults to \"dots\".\r\n        spinner_style (StyleType, optional): Style of spinner. Defaults to \"status.spinner\".\r\n        speed (float, optional): Speed factor for spinner animation. Defaults to 1.0.\r\n        refresh_per_second (float, optional): Number of refreshes per second. Defaults to 12.5.\r\n    \"\"\"\r\n\r\n    def __init__(\r\n        self,\r\n        status: RenderableType,\r\n        *,\r\n        console: Optional[Console] = None,\r\n        spinner: str = \"dots\",\r\n        spinner_style: StyleType = \"status.spinner\",\r\n        speed: float = 1.0,\r\n        refresh_per_second: float = 12.5,\r\n        transient: bool = True\r\n    ):\r\n        self.status = status\r\n        self.spinner_style = spinner_style\r\n        self.speed = speed\r\n        self._spinner = Spinner(spinner, text=status, style=spinner_style, speed=speed)\r\n        self._live = Live(\r\n            self.renderable,\r\n            console=console,\r\n            refresh_per_second=refresh_per_second,\r\n            transient=transient,\r\n        )\r\n    ....\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/Textualize/rich/issues/1797/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/Textualize/rich/issues/1797/timeline", "performed_via_github_app": null}]}