[
    {
        "url": "https://api.github.com/repos/apache/airflow/issues/22667",
        "repository_url": "https://api.github.com/repos/apache/airflow",
        "labels_url": "https://api.github.com/repos/apache/airflow/issues/22667/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/airflow/issues/22667/comments",
        "events_url": "https://api.github.com/repos/apache/airflow/issues/22667/events",
        "html_url": "https://github.com/apache/airflow/pull/22667",
        "id": 1188733954,
        "node_id": "PR_kwDOAgUK2841bv2-",
        "number": 22667,
        "title": "Pass custom headers through in SES email backend",
        "user": {
            "login": "repl-mike-roest",
            "id": 32706821,
            "node_id": "MDQ6VXNlcjMyNzA2ODIx",
            "avatar_url": "https://avatars.githubusercontent.com/u/32706821?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/repl-mike-roest",
            "html_url": "https://github.com/repl-mike-roest",
            "followers_url": "https://api.github.com/users/repl-mike-roest/followers",
            "following_url": "https://api.github.com/users/repl-mike-roest/following{/other_user}",
            "gists_url": "https://api.github.com/users/repl-mike-roest/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/repl-mike-roest/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/repl-mike-roest/subscriptions",
            "organizations_url": "https://api.github.com/users/repl-mike-roest/orgs",
            "repos_url": "https://api.github.com/users/repl-mike-roest/repos",
            "events_url": "https://api.github.com/users/repl-mike-roest/events{/privacy}",
            "received_events_url": "https://api.github.com/users/repl-mike-roest/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1471852032,
                "node_id": "MDU6TGFiZWwxNDcxODUyMDMy",
                "url": "https://api.github.com/repos/apache/airflow/labels/provider:AWS",
                "name": "provider:AWS",
                "color": "f89500",
                "default": false,
                "description": "AWS/Amazon - related issues"
            },
            {
                "id": 1697155831,
                "node_id": "MDU6TGFiZWwxNjk3MTU1ODMx",
                "url": "https://api.github.com/repos/apache/airflow/labels/area:providers",
                "name": "area:providers",
                "color": "d4c5f9",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-03-31T20:44:53Z",
        "updated_at": "2022-03-31T20:51:19Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/apache/airflow/pulls/22667",
            "html_url": "https://github.com/apache/airflow/pull/22667",
            "diff_url": "https://github.com/apache/airflow/pull/22667.diff",
            "patch_url": "https://github.com/apache/airflow/pull/22667.patch",
            "merged_at": null
        },
        "body": "<!--\r\nThank you for contributing! Please make sure that your code changes\r\nare covered with tests. And in case of new features or big changes\r\nremember to adjust the documentation.\r\n\r\nFeel free to ping committers for the review!\r\n\r\nIn case of existing issue, reference it using one of the following:\r\n\r\ncloses: #ISSUE\r\nrelated: #ISSUE\r\n\r\nHow to write a good git commit message:\r\nhttp://chris.beams.io/posts/git-commit/\r\n-->\r\n\r\nI noticed while looking through the source that the SES email provider was not passing through the custom headers.  This was fixed for SMTP in #19009 but SES appears to have been missed.\r\n**^ Add meaningful description above**\r\n\r\nRead the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/CONTRIBUTING.rst#pull-request-guidelines)** for more information.\r\nIn case of fundamental code change, Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvements+Proposals)) is needed.\r\nIn case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).\r\nIn case of backwards incompatible changes please leave a note in [UPDATING.md](https://github.com/apache/airflow/blob/main/UPDATING.md).\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/apache/airflow/issues/22667/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/airflow/issues/22667/timeline",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/apache/airflow/issues/22666",
        "repository_url": "https://api.github.com/repos/apache/airflow",
        "labels_url": "https://api.github.com/repos/apache/airflow/issues/22666/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/airflow/issues/22666/comments",
        "events_url": "https://api.github.com/repos/apache/airflow/issues/22666/events",
        "html_url": "https://github.com/apache/airflow/pull/22666",
        "id": 1188587769,
        "node_id": "PR_kwDOAgUK2841bOkP",
        "number": 22666,
        "title": "Cli next execution bug",
        "user": {
            "login": "frankbreetz",
            "id": 24467723,
            "node_id": "MDQ6VXNlcjI0NDY3NzIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/24467723?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/frankbreetz",
            "html_url": "https://github.com/frankbreetz",
            "followers_url": "https://api.github.com/users/frankbreetz/followers",
            "following_url": "https://api.github.com/users/frankbreetz/following{/other_user}",
            "gists_url": "https://api.github.com/users/frankbreetz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/frankbreetz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/frankbreetz/subscriptions",
            "organizations_url": "https://api.github.com/users/frankbreetz/orgs",
            "repos_url": "https://api.github.com/users/frankbreetz/repos",
            "events_url": "https://api.github.com/users/frankbreetz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/frankbreetz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1672279581,
                "node_id": "MDU6TGFiZWwxNjcyMjc5NTgx",
                "url": "https://api.github.com/repos/apache/airflow/labels/area:CLI",
                "name": "area:CLI",
                "color": "e99695",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-03-31T19:29:26Z",
        "updated_at": "2022-03-31T20:22:00Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/apache/airflow/pulls/22666",
            "html_url": "https://github.com/apache/airflow/pull/22666",
            "diff_url": "https://github.com/apache/airflow/pull/22666.diff",
            "patch_url": "https://github.com/apache/airflow/pull/22666.patch",
            "merged_at": null
        },
        "body": "<!--\r\nThank you for contributing! Please make sure that your code changes\r\nare covered with tests. And in case of new features or big changes\r\nremember to adjust the documentation.\r\n\r\nFeel free to ping committers for the review!\r\n\r\nIn case of existing issue, reference it using one of the following:\r\n\r\ncloses: #ISSUE\r\nrelated: #ISSUE\r\n\r\nHow to write a good git commit message:\r\nhttp://chris.beams.io/posts/git-commit/\r\n-->\r\n\r\n---\r\n**^ Add meaningful description above**\r\n\r\nRead the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/CONTRIBUTING.rst#pull-request-guidelines)** for more information.\r\nIn case of fundamental code change, Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvements+Proposals)) is needed.\r\nIn case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).\r\nIn case of backwards incompatible changes please leave a note in [UPDATING.md](https://github.com/apache/airflow/blob/main/UPDATING.md).\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/apache/airflow/issues/22666/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/airflow/issues/22666/timeline",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/apache/airflow/issues/22665",
        "repository_url": "https://api.github.com/repos/apache/airflow",
        "labels_url": "https://api.github.com/repos/apache/airflow/issues/22665/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/airflow/issues/22665/comments",
        "events_url": "https://api.github.com/repos/apache/airflow/issues/22665/events",
        "html_url": "https://github.com/apache/airflow/issues/22665",
        "id": 1188562585,
        "node_id": "I_kwDOAgUK285G2AaZ",
        "number": 22665,
        "title": "Superfluous TypeError when passing not-iterables to `expand()`",
        "user": {
            "login": "MatrixManAtYrService",
            "id": 5834582,
            "node_id": "MDQ6VXNlcjU4MzQ1ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5834582?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MatrixManAtYrService",
            "html_url": "https://github.com/MatrixManAtYrService",
            "followers_url": "https://api.github.com/users/MatrixManAtYrService/followers",
            "following_url": "https://api.github.com/users/MatrixManAtYrService/following{/other_user}",
            "gists_url": "https://api.github.com/users/MatrixManAtYrService/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MatrixManAtYrService/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MatrixManAtYrService/subscriptions",
            "organizations_url": "https://api.github.com/users/MatrixManAtYrService/orgs",
            "repos_url": "https://api.github.com/users/MatrixManAtYrService/repos",
            "events_url": "https://api.github.com/users/MatrixManAtYrService/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MatrixManAtYrService/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 199168283,
                "node_id": "MDU6TGFiZWwxOTkxNjgyODM=",
                "url": "https://api.github.com/repos/apache/airflow/labels/kind:bug",
                "name": "kind:bug",
                "color": "fc2929",
                "default": false,
                "description": "This is a clearly a bug"
            },
            {
                "id": 2500918862,
                "node_id": "MDU6TGFiZWwyNTAwOTE4ODYy",
                "url": "https://api.github.com/repos/apache/airflow/labels/area:core",
                "name": "area:core",
                "color": "d4c5f9",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-03-31T19:16:46Z",
        "updated_at": "2022-03-31T19:19:38Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Apache Airflow version\n\nmain (development)\n\n### What happened\n\nHere's a problematic dag.  `False` is invalid here.\r\n```python3\r\nfrom airflow.models import DAG\r\nfrom airflow.operators.python import PythonOperator\r\nfrom datetime import datetime, timedelta\r\n\r\nwith DAG(\r\n    dag_id=\"singleton_expanded\",\r\n    schedule_interval=timedelta(days=365),\r\n    start_date=datetime(2001, 1, 1),\r\n) as dag:\r\n\r\n    # has problem\r\n    PythonOperator.partial(\r\n        task_id=\"foo\",\r\n        python_callable=lambda x: \"hi\" if x else \"bye\",\r\n    ).expand(op_args=False)\r\n```\r\n\r\nWhen I check for errors like `python dags/the_dag.py` I get the following error:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/matt/2022/03/30/dags/the_dag.py\", line 13, in <module>\r\n    PythonOperator.partial(\r\n  File \"/Users/matt/src/airflow/airflow/models/mappedoperator.py\", line 187, in expand\r\n    validate_mapping_kwargs(self.operator_class, \"expand\", mapped_kwargs)\r\n  File \"/Users/matt/src/airflow/airflow/models/mappedoperator.py\", line 116, in validate_mapping_kwargs\r\n    raise ValueError(error)\r\nValueError: PythonOperator.expand() got an unexpected type 'bool' for keyword argument op_args\r\nException ignored in: <function OperatorPartial.__del__ at 0x10c63b1f0>\r\nTraceback (most recent call last):\r\n  File \"/Users/matt/src/airflow/airflow/models/mappedoperator.py\", line 182, in __del__\r\n    warnings.warn(f\"{self!r} was never mapped!\")\r\n  File \"/usr/local/Cellar/python@3.9/3.9.10/Frameworks/Python.framework/Versions/3.9/lib/python3.9/warnings.py\", line 109, in _showwarnmsg\r\n    sw(msg.message, msg.category, msg.filename, msg.lineno,\r\n  File \"/Users/matt/src/airflow/airflow/settings.py\", line 115, in custom_show_warning\r\n    from rich.markup import escape\r\n  File \"<frozen importlib._bootstrap>\", line 1007, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 982, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 925, in _find_spec\r\n  File \"<frozen importlib._bootstrap_external>\", line 1414, in find_spec\r\n  File \"<frozen importlib._bootstrap_external>\", line 1380, in _get_spec\r\nTypeError: 'NoneType' object is not iterable\r\n```\n\n### What you think should happen instead\n\nI'm not sure what's up with that type error, the ValueError is what I needed to see.  So I expected this:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/matt/2022/03/30/dags/the_dag.py\", line 13, in <module>\r\n    PythonOperator.partial(\r\n  File \"/Users/matt/src/airflow/airflow/models/mappedoperator.py\", line 187, in expand\r\n    validate_mapping_kwargs(self.operator_class, \"expand\", mapped_kwargs)\r\n  File \"/Users/matt/src/airflow/airflow/models/mappedoperator.py\", line 116, in validate_mapping_kwargs\r\n    raise ValueError(error)\r\nValueError: PythonOperator.expand() got an unexpected type 'bool' for keyword argument op_args\r\n```\n\n### How to reproduce\n\n_No response_\n\n### Operating System\n\nMac OS\n\n### Versions of Apache Airflow Providers\n\nn/a\n\n### Deployment\n\nVirtualenv installation\n\n### Deployment details\n\n- cloned main at 327eab3e2\r\n- created fresh venv and used pip to install\r\n- `airflow info`\r\n- `airflow db init`\r\n- add the dag\r\n- `python dags/the_dag.py`\r\n\n\n### Anything else\n\n_No response_\n\n### Are you willing to submit PR?\n\n- [ ] Yes I am willing to submit a PR!\n\n### Code of Conduct\n\n- [X] I agree to follow this project's [Code of Conduct](https://github.com/apache/airflow/blob/main/CODE_OF_CONDUCT.md)\n",
        "reactions": {
            "url": "https://api.github.com/repos/apache/airflow/issues/22665/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/airflow/issues/22665/timeline",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/apache/airflow/issues/22663",
        "repository_url": "https://api.github.com/repos/apache/airflow",
        "labels_url": "https://api.github.com/repos/apache/airflow/issues/22663/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/airflow/issues/22663/comments",
        "events_url": "https://api.github.com/repos/apache/airflow/issues/22663/events",
        "html_url": "https://github.com/apache/airflow/pull/22663",
        "id": 1188428602,
        "node_id": "PR_kwDOAgUK2841aqzI",
        "number": 22663,
        "title": "Add `securityContext` support to Redis",
        "user": {
            "login": "jedcunningham",
            "id": 66968678,
            "node_id": "MDQ6VXNlcjY2OTY4Njc4",
            "avatar_url": "https://avatars.githubusercontent.com/u/66968678?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jedcunningham",
            "html_url": "https://github.com/jedcunningham",
            "followers_url": "https://api.github.com/users/jedcunningham/followers",
            "following_url": "https://api.github.com/users/jedcunningham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jedcunningham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jedcunningham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jedcunningham/subscriptions",
            "organizations_url": "https://api.github.com/users/jedcunningham/orgs",
            "repos_url": "https://api.github.com/users/jedcunningham/repos",
            "events_url": "https://api.github.com/users/jedcunningham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jedcunningham/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1971984525,
                "node_id": "MDU6TGFiZWwxOTcxOTg0NTI1",
                "url": "https://api.github.com/repos/apache/airflow/labels/area:helm-chart",
                "name": "area:helm-chart",
                "color": "024e91",
                "default": false,
                "description": "Airflow Helm Chart"
            },
            {
                "id": 2451280808,
                "node_id": "MDU6TGFiZWwyNDUxMjgwODA4",
                "url": "https://api.github.com/repos/apache/airflow/labels/full%20tests%20needed",
                "name": "full tests needed",
                "color": "e0c514",
                "default": false,
                "description": "We need to run full set of tests for this PR to merge"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-03-31T17:47:27Z",
        "updated_at": "2022-03-31T19:37:59Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/apache/airflow/pulls/22663",
            "html_url": "https://github.com/apache/airflow/pull/22663",
            "diff_url": "https://github.com/apache/airflow/pull/22663.diff",
            "patch_url": "https://github.com/apache/airflow/pull/22663.patch",
            "merged_at": null
        },
        "body": "This is an alternative to #22182.\r\n\r\nThis allows users to set `securityContext` on the Redis pod.\r\n\r\ncc @pgvishnuram",
        "reactions": {
            "url": "https://api.github.com/repos/apache/airflow/issues/22663/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/airflow/issues/22663/timeline",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/apache/airflow/issues/22659",
        "repository_url": "https://api.github.com/repos/apache/airflow",
        "labels_url": "https://api.github.com/repos/apache/airflow/issues/22659/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/airflow/issues/22659/comments",
        "events_url": "https://api.github.com/repos/apache/airflow/issues/22659/events",
        "html_url": "https://github.com/apache/airflow/pull/22659",
        "id": 1188355072,
        "node_id": "PR_kwDOAgUK2841abM1",
        "number": 22659,
        "title": "Cloudera community provider added (Work in progress)",
        "user": {
            "login": "zomborinorbert",
            "id": 66429851,
            "node_id": "MDQ6VXNlcjY2NDI5ODUx",
            "avatar_url": "https://avatars.githubusercontent.com/u/66429851?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zomborinorbert",
            "html_url": "https://github.com/zomborinorbert",
            "followers_url": "https://api.github.com/users/zomborinorbert/followers",
            "following_url": "https://api.github.com/users/zomborinorbert/following{/other_user}",
            "gists_url": "https://api.github.com/users/zomborinorbert/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zomborinorbert/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zomborinorbert/subscriptions",
            "organizations_url": "https://api.github.com/users/zomborinorbert/orgs",
            "repos_url": "https://api.github.com/users/zomborinorbert/repos",
            "events_url": "https://api.github.com/users/zomborinorbert/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zomborinorbert/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1697155831,
                "node_id": "MDU6TGFiZWwxNjk3MTU1ODMx",
                "url": "https://api.github.com/repos/apache/airflow/labels/area:providers",
                "name": "area:providers",
                "color": "d4c5f9",
                "default": false,
                "description": ""
            },
            {
                "id": 1769003317,
                "node_id": "MDU6TGFiZWwxNzY5MDAzMzE3",
                "url": "https://api.github.com/repos/apache/airflow/labels/area:dev-tools",
                "name": "area:dev-tools",
                "color": "ededed",
                "default": false,
                "description": ""
            },
            {
                "id": 1993586993,
                "node_id": "MDU6TGFiZWwxOTkzNTg2OTkz",
                "url": "https://api.github.com/repos/apache/airflow/labels/kind:documentation",
                "name": "kind:documentation",
                "color": "0030b5",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2022-03-31T16:39:55Z",
        "updated_at": "2022-03-31T18:13:48Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/apache/airflow/pulls/22659",
            "html_url": "https://github.com/apache/airflow/pull/22659",
            "diff_url": "https://github.com/apache/airflow/pull/22659.diff",
            "patch_url": "https://github.com/apache/airflow/pull/22659.patch",
            "merged_at": null
        },
        "body": "Cloudera Airflow Provider (Work in progress)\r\nThis component provides two Cloudera operators to be integrated in your dags:\r\n\r\nCdeRunJobOperator, for triggering Cloudera Data Engineering jobs through API tokens\r\nCdwExecuteQueryOperator, for executing queries on the target Cloudera Data Warehouse instance",
        "reactions": {
            "url": "https://api.github.com/repos/apache/airflow/issues/22659/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/airflow/issues/22659/timeline",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/apache/airflow/issues/22658",
        "repository_url": "https://api.github.com/repos/apache/airflow",
        "labels_url": "https://api.github.com/repos/apache/airflow/issues/22658/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/airflow/issues/22658/comments",
        "events_url": "https://api.github.com/repos/apache/airflow/issues/22658/events",
        "html_url": "https://github.com/apache/airflow/pull/22658",
        "id": 1188342935,
        "node_id": "PR_kwDOAgUK2841aYl7",
        "number": 22658,
        "title": "Fix incorrect data_interval_start due to scheduling time change",
        "user": {
            "login": "wanlce",
            "id": 55907021,
            "node_id": "MDQ6VXNlcjU1OTA3MDIx",
            "avatar_url": "https://avatars.githubusercontent.com/u/55907021?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wanlce",
            "html_url": "https://github.com/wanlce",
            "followers_url": "https://api.github.com/users/wanlce/followers",
            "following_url": "https://api.github.com/users/wanlce/following{/other_user}",
            "gists_url": "https://api.github.com/users/wanlce/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wanlce/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wanlce/subscriptions",
            "organizations_url": "https://api.github.com/users/wanlce/orgs",
            "repos_url": "https://api.github.com/users/wanlce/repos",
            "events_url": "https://api.github.com/users/wanlce/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wanlce/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-03-31T16:29:10Z",
        "updated_at": "2022-03-31T16:57:09Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/apache/airflow/pulls/22658",
            "html_url": "https://github.com/apache/airflow/pull/22658",
            "diff_url": "https://github.com/apache/airflow/pull/22658.diff",
            "patch_url": "https://github.com/apache/airflow/pull/22658.patch",
            "merged_at": null
        },
        "body": "This PR fixes the incorrect first run of data_interval_start after\r\nchanging the scheduling time.\r\n\r\n* Added _align_to_prev function for scheduling alignment after time change.\r\n\r\n* renamed _align to _align_to_next.\r\n\r\nrelated: #21715 \r\n<!--\r\nThank you for contributing! Please make sure that your code changes\r\nare covered with tests. And in case of new features or big changes\r\nremember to adjust the documentation.\r\n\r\nFeel free to ping committers for the review!\r\n\r\nIn case of existing issue, reference it using one of the following:\r\n\r\ncloses: #ISSUE\r\nrelated: #21715 \r\n\r\nHow to write a good git commit message:\r\nhttp://chris.beams.io/posts/git-commit/\r\n-->\r\n\r\n---\r\n**^ Add meaningful description above**\r\n\r\nRead the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/CONTRIBUTING.rst#pull-request-guidelines)** for more information.\r\nIn case of fundamental code change, Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvements+Proposals)) is needed.\r\nIn case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).\r\nIn case of backwards incompatible changes please leave a note in [UPDATING.md](https://github.com/apache/airflow/blob/main/UPDATING.md).\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/apache/airflow/issues/22658/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/airflow/issues/22658/timeline",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/apache/airflow/issues/22657",
        "repository_url": "https://api.github.com/repos/apache/airflow",
        "labels_url": "https://api.github.com/repos/apache/airflow/issues/22657/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/airflow/issues/22657/comments",
        "events_url": "https://api.github.com/repos/apache/airflow/issues/22657/events",
        "html_url": "https://github.com/apache/airflow/issues/22657",
        "id": 1188331666,
        "node_id": "I_kwDOAgUK285G1ICS",
        "number": 22657,
        "title": "Wrong apiVersion Detected During Ingress Creation",
        "user": {
            "login": "Jmdaming",
            "id": 9086245,
            "node_id": "MDQ6VXNlcjkwODYyNDU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9086245?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Jmdaming",
            "html_url": "https://github.com/Jmdaming",
            "followers_url": "https://api.github.com/users/Jmdaming/followers",
            "following_url": "https://api.github.com/users/Jmdaming/following{/other_user}",
            "gists_url": "https://api.github.com/users/Jmdaming/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Jmdaming/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Jmdaming/subscriptions",
            "organizations_url": "https://api.github.com/users/Jmdaming/orgs",
            "repos_url": "https://api.github.com/users/Jmdaming/repos",
            "events_url": "https://api.github.com/users/Jmdaming/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Jmdaming/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 199168283,
                "node_id": "MDU6TGFiZWwxOTkxNjgyODM=",
                "url": "https://api.github.com/repos/apache/airflow/labels/kind:bug",
                "name": "kind:bug",
                "color": "fc2929",
                "default": false,
                "description": "This is a clearly a bug"
            },
            {
                "id": 1971984525,
                "node_id": "MDU6TGFiZWwxOTcxOTg0NTI1",
                "url": "https://api.github.com/repos/apache/airflow/labels/area:helm-chart",
                "name": "area:helm-chart",
                "color": "024e91",
                "default": false,
                "description": "Airflow Helm Chart"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-03-31T16:19:33Z",
        "updated_at": "2022-03-31T16:30:34Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Official Helm Chart version\r\n\r\n1.5.0 (latest released)\r\n\r\n### Apache Airflow version\r\n\r\n2.2.4 (latest released)\r\n\r\n### Kubernetes Version\r\n\r\nmicrok8s 1.23/stable\r\n\r\n### Helm Chart configuration\r\n\r\n```\r\nexecutor: KubernetesExecutor\r\n\r\ningress:\r\n  enabled: true\r\n\r\n  ## airflow webserver ingress configs\r\n  web:\r\n    annotations:\r\n      kubernetes.io/ingress.class: public\r\n    hosts: \r\n      -name: \"example.com\"\r\n    \r\n    path: \"/airflow\"\r\n\r\n## Disabled due to using KubernetesExecutor as recommended in the documentation\r\nflower:\r\n  enabled: false\r\n\r\n## Disabled due to using KubernetesExecutor as recommended in the documentation\r\nredis:\r\n  enabled: false\r\n```\r\n\r\n### Docker Image customisations\r\n\r\nNo customization required to recreate, the default image has the same behavior.\r\n\r\n### What happened\r\n\r\nInstallation notes below, as displayed the install fails due to the web ingress chart attempting a semVerCompare to check that the kube version is greater than 1.19 and, if it's not, it defaults back to the v1beta networking version.  The microk8s install exceeds this version so I would expect the Webserver Ingress version to utilize \"networking.k8s.io/v1\" instead of the beta version.\r\n\r\nAirflow installation\r\n```\r\n$: helm install airflow apache-airflow/airflow --namespace airflow --values ./custom-values.yaml\r\nError: unable to build kubernetes objects from release manifest: unable to recognize \"\": no matches for kind \"Ingress\" in version \"networking.k8s.io/v1beta1\"\r\n```\r\n\r\nmicrok8s installation\r\n```\r\n$: kubectl version\r\nClient Version: version.Info{Major:\"1\", Minor:\"23+\", GitVersion:\"v1.23.5-2+c812603a312d2b\", GitCommit:\"c812603a312d2b0c59687a1be1ae17c0878104cc\", GitTreeState:\"clean\", BuildDate:\"2022-03-17T16:14:08Z\", GoVersion:\"go1.17.8\", Compiler:\"gc\", Platform:\"linux/amd64\"}\r\nServer Version: version.Info{Major:\"1\", Minor:\"23+\", GitVersion:\"v1.23.5-2+c812603a312d2b\", GitCommit:\"c812603a312d2b0c59687a1be1ae17c0878104cc\", GitTreeState:\"clean\", BuildDate:\"2022-03-17T16:11:06Z\", GoVersion:\"go1.17.8\", Compiler:\"gc\", Platform:\"linux/amd64\"}\r\n```\r\n\r\n### What you think should happen instead\r\n\r\nThe Webserver Ingress chart should detect that the kube version is greater than 1.19 and utilize the version ```networking.k8s.io/v1```.\r\n\r\n### How to reproduce\r\n\r\nOn Ubuntu 18.04, run:\r\n\r\n1. ```sudo snap install microk8s --classic```\r\n2. ```microk8s status --wait-ready```\r\n3. ```microk8s enable dns ha-cluster helm3 ingress metrics-server storage```\r\n4. ```microk8s helm3 repo add apache-airflow https://airflow.apache.org```\r\n5. ```microk8s kubectl create namespace airflow```\r\n6. ```touch ./custom-values.yaml```\r\n7. ```vi ./custom-values.yaml``` and insert the values.yaml contents from above\r\n8. ```microk8s helm3 install airflow apache-airflow/airflow --namespace airflow --values ./custom-values.yaml```\r\n\r\n### Anything else\r\n\r\nThis problem can be reproduced consistently.\r\n\r\n### Are you willing to submit PR?\r\n\r\n- [ ] Yes I am willing to submit a PR!\r\n\r\n### Code of Conduct\r\n\r\n- [X] I agree to follow this project's [Code of Conduct](https://github.com/apache/airflow/blob/main/CODE_OF_CONDUCT.md)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/apache/airflow/issues/22657/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/airflow/issues/22657/timeline",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/apache/airflow/issues/22652",
        "repository_url": "https://api.github.com/repos/apache/airflow",
        "labels_url": "https://api.github.com/repos/apache/airflow/issues/22652/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/airflow/issues/22652/comments",
        "events_url": "https://api.github.com/repos/apache/airflow/issues/22652/events",
        "html_url": "https://github.com/apache/airflow/issues/22652",
        "id": 1188228906,
        "node_id": "I_kwDOAgUK285G0u8q",
        "number": 22652,
        "title": "Add support for topologySpreadConstraints to Helm Chart",
        "user": {
            "login": "Swalloow",
            "id": 2902097,
            "node_id": "MDQ6VXNlcjI5MDIwOTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2902097?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Swalloow",
            "html_url": "https://github.com/Swalloow",
            "followers_url": "https://api.github.com/users/Swalloow/followers",
            "following_url": "https://api.github.com/users/Swalloow/following{/other_user}",
            "gists_url": "https://api.github.com/users/Swalloow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Swalloow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Swalloow/subscriptions",
            "organizations_url": "https://api.github.com/users/Swalloow/orgs",
            "repos_url": "https://api.github.com/users/Swalloow/repos",
            "events_url": "https://api.github.com/users/Swalloow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Swalloow/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1923278889,
                "node_id": "MDU6TGFiZWwxOTIzMjc4ODg5",
                "url": "https://api.github.com/repos/apache/airflow/labels/kind:feature",
                "name": "kind:feature",
                "color": "5319e7",
                "default": false,
                "description": "Feature Requests"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "Swalloow",
            "id": 2902097,
            "node_id": "MDQ6VXNlcjI5MDIwOTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2902097?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Swalloow",
            "html_url": "https://github.com/Swalloow",
            "followers_url": "https://api.github.com/users/Swalloow/followers",
            "following_url": "https://api.github.com/users/Swalloow/following{/other_user}",
            "gists_url": "https://api.github.com/users/Swalloow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Swalloow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Swalloow/subscriptions",
            "organizations_url": "https://api.github.com/users/Swalloow/orgs",
            "repos_url": "https://api.github.com/users/Swalloow/repos",
            "events_url": "https://api.github.com/users/Swalloow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Swalloow/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "Swalloow",
                "id": 2902097,
                "node_id": "MDQ6VXNlcjI5MDIwOTc=",
                "avatar_url": "https://avatars.githubusercontent.com/u/2902097?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Swalloow",
                "html_url": "https://github.com/Swalloow",
                "followers_url": "https://api.github.com/users/Swalloow/followers",
                "following_url": "https://api.github.com/users/Swalloow/following{/other_user}",
                "gists_url": "https://api.github.com/users/Swalloow/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Swalloow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Swalloow/subscriptions",
                "organizations_url": "https://api.github.com/users/Swalloow/orgs",
                "repos_url": "https://api.github.com/users/Swalloow/repos",
                "events_url": "https://api.github.com/users/Swalloow/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Swalloow/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-03-31T15:02:37Z",
        "updated_at": "2022-03-31T18:00:46Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Description\n\nCurrently charts have options like `nodeSelector` and `affinity`, but no `topologySpreadConstraints`.\r\nKarpenter, which is for autoscaling of EKS, currently supports only topologySpreadConstraints.\r\nHow about adding additional support for this feature? Thanks.\n\n### Use case/motivation\n\nKarpenter, which is for autoscaling of EKS, currently supports only topologySpreadConstraints.\r\nRef: https://github.com/aws/karpenter/issues/942\n\n### Related issues\n\n_No response_\n\n### Are you willing to submit a PR?\n\n- [X] Yes I am willing to submit a PR!\n\n### Code of Conduct\n\n- [X] I agree to follow this project's [Code of Conduct](https://github.com/apache/airflow/blob/main/CODE_OF_CONDUCT.md)\n",
        "reactions": {
            "url": "https://api.github.com/repos/apache/airflow/issues/22652/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/airflow/issues/22652/timeline",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/apache/airflow/issues/22646",
        "repository_url": "https://api.github.com/repos/apache/airflow",
        "labels_url": "https://api.github.com/repos/apache/airflow/issues/22646/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/airflow/issues/22646/comments",
        "events_url": "https://api.github.com/repos/apache/airflow/issues/22646/events",
        "html_url": "https://github.com/apache/airflow/pull/22646",
        "id": 1187915466,
        "node_id": "PR_kwDOAgUK2841Y9kP",
        "number": 22646,
        "title": "Add new community provider: Flyte ",
        "user": {
            "login": "samhita-alla",
            "id": 27777173,
            "node_id": "MDQ6VXNlcjI3Nzc3MTcz",
            "avatar_url": "https://avatars.githubusercontent.com/u/27777173?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/samhita-alla",
            "html_url": "https://github.com/samhita-alla",
            "followers_url": "https://api.github.com/users/samhita-alla/followers",
            "following_url": "https://api.github.com/users/samhita-alla/following{/other_user}",
            "gists_url": "https://api.github.com/users/samhita-alla/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/samhita-alla/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/samhita-alla/subscriptions",
            "organizations_url": "https://api.github.com/users/samhita-alla/orgs",
            "repos_url": "https://api.github.com/users/samhita-alla/repos",
            "events_url": "https://api.github.com/users/samhita-alla/events{/privacy}",
            "received_events_url": "https://api.github.com/users/samhita-alla/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1697155831,
                "node_id": "MDU6TGFiZWwxNjk3MTU1ODMx",
                "url": "https://api.github.com/repos/apache/airflow/labels/area:providers",
                "name": "area:providers",
                "color": "d4c5f9",
                "default": false,
                "description": ""
            },
            {
                "id": 1769003317,
                "node_id": "MDU6TGFiZWwxNzY5MDAzMzE3",
                "url": "https://api.github.com/repos/apache/airflow/labels/area:dev-tools",
                "name": "area:dev-tools",
                "color": "ededed",
                "default": false,
                "description": ""
            },
            {
                "id": 1993586993,
                "node_id": "MDU6TGFiZWwxOTkzNTg2OTkz",
                "url": "https://api.github.com/repos/apache/airflow/labels/kind:documentation",
                "name": "kind:documentation",
                "color": "0030b5",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2022-03-31T11:10:33Z",
        "updated_at": "2022-03-31T15:25:16Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/apache/airflow/pulls/22646",
            "html_url": "https://github.com/apache/airflow/pull/22646",
            "diff_url": "https://github.com/apache/airflow/pull/22646.diff",
            "patch_url": "https://github.com/apache/airflow/pull/22646.patch",
            "merged_at": null
        },
        "body": "Signed-off-by: Samhita Alla <aallasamhita@gmail.com>\r\n\r\n<!--\r\nThank you for contributing! Please make sure that your code changes\r\nare covered with tests. And in case of new features or big changes\r\nremember to adjust the documentation.\r\n\r\nFeel free to ping committers for the review!\r\n\r\nIn case of existing issue, reference it using one of the following:\r\n\r\ncloses: #ISSUE\r\nrelated: #ISSUE\r\n\r\nHow to write a good git commit message:\r\nhttp://chris.beams.io/posts/git-commit/\r\n-->\r\n\r\nThis PR adds a new community provider to allow Airflow users to interact with Flyte from within Airflow. \r\n\r\nA bit about Flyte: [Flyte](https://www.flyte.org/) is an open-source, container-native, structured programming and distributed processing platform that enables highly concurrent, scalable, and maintainable workflows for machine learning and data processing pipelines.\r\n\r\nAs a more significant chunk of the users who are into _pipelines_ are using Airflow, it'd be really helpful to have a provider that bridges the gap between Airflow and Flyte, to help the Airflow users retain their existing pipelines and use Flyte from within the Airflow DAGs to run the machine learning jobs (say). \r\n\r\nWe've had this operator in the back of our minds for a long time; here's the [issue](https://github.com/flyteorg/flyte/issues/544).\r\n\r\nCode Interface\r\n---------------\r\nThe provider defines a `hook`, an `operator`, and a `sensor`. When the user instantiates the `AirflowFlyteOperator`, it creates a `FlyteRemote` (Flyte's Python API) object, triggers the execution in the Flyte environment, waits for the execution to complete, and finally, returns the execution name. This implementation is carried out using the methods defined in the `hook`. The executions are triggered synchronously by default. One can set `asynchronous` to `True` if the execution needs to be polled asynchronously; the polling would be handled by the `sensor`.\r\n\r\nTests\r\n------\r\nUnit tests have been added and tested. Also, I spun up an Airflow instance to validate the code in real-time.\r\n\r\nTODO\r\n------\r\n- [ ] Update the flytekit version from `0.32.0b0` to `0.32.0` after the latter release is out.\r\n\r\n---\r\n**^ Add meaningful description above**\r\n\r\nRead the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/CONTRIBUTING.rst#pull-request-guidelines)** for more information.\r\nIn case of fundamental code change, Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvements+Proposals)) is needed.\r\nIn case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).\r\nIn case of backwards incompatible changes please leave a note in [UPDATING.md](https://github.com/apache/airflow/blob/main/UPDATING.md).\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/apache/airflow/issues/22646/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/airflow/issues/22646/timeline",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/apache/airflow/issues/22641",
        "repository_url": "https://api.github.com/repos/apache/airflow",
        "labels_url": "https://api.github.com/repos/apache/airflow/issues/22641/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/airflow/issues/22641/comments",
        "events_url": "https://api.github.com/repos/apache/airflow/issues/22641/events",
        "html_url": "https://github.com/apache/airflow/pull/22641",
        "id": 1187562671,
        "node_id": "PR_kwDOAgUK2841XyV-",
        "number": 22641,
        "title": " Disable SLAs for mapped operators",
        "user": {
            "login": "dstandish",
            "id": 15932138,
            "node_id": "MDQ6VXNlcjE1OTMyMTM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/15932138?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dstandish",
            "html_url": "https://github.com/dstandish",
            "followers_url": "https://api.github.com/users/dstandish/followers",
            "following_url": "https://api.github.com/users/dstandish/following{/other_user}",
            "gists_url": "https://api.github.com/users/dstandish/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dstandish/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dstandish/subscriptions",
            "organizations_url": "https://api.github.com/users/dstandish/orgs",
            "repos_url": "https://api.github.com/users/dstandish/repos",
            "events_url": "https://api.github.com/users/dstandish/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dstandish/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1545560198,
                "node_id": "MDU6TGFiZWwxNTQ1NTYwMTk4",
                "url": "https://api.github.com/repos/apache/airflow/labels/area:scheduler/executor",
                "name": "area:scheduler/executor",
                "color": "6a3aaa",
                "default": false,
                "description": "Scheduler or Executor related Issues"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-03-31T06:06:43Z",
        "updated_at": "2022-03-31T18:53:12Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/apache/airflow/pulls/22641",
            "html_url": "https://github.com/apache/airflow/pull/22641",
            "diff_url": "https://github.com/apache/airflow/pull/22641.diff",
            "patch_url": "https://github.com/apache/airflow/pull/22641.patch",
            "merged_at": null
        },
        "body": "When trying to update SLA logic to handle mapped operators we discovered some odd behavior and decided to defer adding support for SLAs with mapped tasks.",
        "reactions": {
            "url": "https://api.github.com/repos/apache/airflow/issues/22641/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/airflow/issues/22641/timeline",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/apache/airflow/issues/22632",
        "repository_url": "https://api.github.com/repos/apache/airflow",
        "labels_url": "https://api.github.com/repos/apache/airflow/issues/22632/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/airflow/issues/22632/comments",
        "events_url": "https://api.github.com/repos/apache/airflow/issues/22632/events",
        "html_url": "https://github.com/apache/airflow/issues/22632",
        "id": 1186868992,
        "node_id": "I_kwDOAgUK285Gvi8A",
        "number": 22632,
        "title": "Missing doc and sample dag for ExasolToS3Operator",
        "user": {
            "login": "vincbeck",
            "id": 97131062,
            "node_id": "U_kgDOBcoaNg",
            "avatar_url": "https://avatars.githubusercontent.com/u/97131062?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vincbeck",
            "html_url": "https://github.com/vincbeck",
            "followers_url": "https://api.github.com/users/vincbeck/followers",
            "following_url": "https://api.github.com/users/vincbeck/following{/other_user}",
            "gists_url": "https://api.github.com/users/vincbeck/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vincbeck/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vincbeck/subscriptions",
            "organizations_url": "https://api.github.com/users/vincbeck/orgs",
            "repos_url": "https://api.github.com/users/vincbeck/repos",
            "events_url": "https://api.github.com/users/vincbeck/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vincbeck/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1471852032,
                "node_id": "MDU6TGFiZWwxNDcxODUyMDMy",
                "url": "https://api.github.com/repos/apache/airflow/labels/provider:AWS",
                "name": "provider:AWS",
                "color": "f89500",
                "default": false,
                "description": "AWS/Amazon - related issues"
            },
            {
                "id": 1970155342,
                "node_id": "MDU6TGFiZWwxOTcwMTU1MzQy",
                "url": "https://api.github.com/repos/apache/airflow/labels/good%20first%20issue",
                "name": "good first issue",
                "color": "6cdb53",
                "default": true,
                "description": ""
            },
            {
                "id": 1993586993,
                "node_id": "MDU6TGFiZWwxOTkzNTg2OTkz",
                "url": "https://api.github.com/repos/apache/airflow/labels/kind:documentation",
                "name": "kind:documentation",
                "color": "0030b5",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-03-30T19:01:51Z",
        "updated_at": "2022-03-31T14:27:08Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### What do you see as an issue?\n\nThe operator ``ExasolToS3Operator`` is missing a sample dag and documentation which would benefit users. In order to test the sample dag you need to have an [Exasol](https://www.exasol.com/) account which requires a credit card (even with the free trial). If someone has an Exasol account and is willing to create a sample dag and test it, that would be a good bonus for the community.\n\n### Solving the problem\n\nCreate a sample dag and test it\r\nCreate the documentation associated with it\n\n### Anything else\n\n_No response_\n\n### Are you willing to submit PR?\n\n- [ ] Yes I am willing to submit a PR!\n\n### Code of Conduct\n\n- [X] I agree to follow this project's [Code of Conduct](https://github.com/apache/airflow/blob/main/CODE_OF_CONDUCT.md)\n",
        "reactions": {
            "url": "https://api.github.com/repos/apache/airflow/issues/22632/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/airflow/issues/22632/timeline",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/apache/airflow/issues/22626",
        "repository_url": "https://api.github.com/repos/apache/airflow",
        "labels_url": "https://api.github.com/repos/apache/airflow/issues/22626/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/airflow/issues/22626/comments",
        "events_url": "https://api.github.com/repos/apache/airflow/issues/22626/events",
        "html_url": "https://github.com/apache/airflow/issues/22626",
        "id": 1186751506,
        "node_id": "I_kwDOAgUK285GvGQS",
        "number": 22626,
        "title": "The command 'airflow dags test' is deadlocking tasks using AIP-42 features with the PythonVirtualenvOperator",
        "user": {
            "login": "tronlightracer",
            "id": 102494105,
            "node_id": "U_kgDOBhvvmQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/102494105?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tronlightracer",
            "html_url": "https://github.com/tronlightracer",
            "followers_url": "https://api.github.com/users/tronlightracer/followers",
            "following_url": "https://api.github.com/users/tronlightracer/following{/other_user}",
            "gists_url": "https://api.github.com/users/tronlightracer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tronlightracer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tronlightracer/subscriptions",
            "organizations_url": "https://api.github.com/users/tronlightracer/orgs",
            "repos_url": "https://api.github.com/users/tronlightracer/repos",
            "events_url": "https://api.github.com/users/tronlightracer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tronlightracer/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 199168283,
                "node_id": "MDU6TGFiZWwxOTkxNjgyODM=",
                "url": "https://api.github.com/repos/apache/airflow/labels/kind:bug",
                "name": "kind:bug",
                "color": "fc2929",
                "default": false,
                "description": "This is a clearly a bug"
            },
            {
                "id": 2500918862,
                "node_id": "MDU6TGFiZWwyNTAwOTE4ODYy",
                "url": "https://api.github.com/repos/apache/airflow/labels/area:core",
                "name": "area:core",
                "color": "d4c5f9",
                "default": false,
                "description": ""
            },
            {
                "id": 3696740434,
                "node_id": "LA_kwDOAgUK287cV8hS",
                "url": "https://api.github.com/repos/apache/airflow/labels/AIP-42",
                "name": "AIP-42",
                "color": "390869",
                "default": false,
                "description": "Dynamic Task Mapping"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-03-30T17:08:21Z",
        "updated_at": "2022-03-31T10:14:00Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Apache Airflow version\r\n\r\nmain (development)\r\n\r\n### What happened\r\n\r\nWhen using the command airflow dags test tasks are put in the deadlock state.\r\n\r\n### What you think should happen instead\r\n\r\nI think the airflow dags test shouldn't deadlock tasks.\r\n\r\n### How to reproduce\r\n```\r\nfrom airflow.models import DAG\r\nfrom airflow.operators.python import PythonOperator, PythonVirtualenvOperator\r\nfrom airflow.utils.log.log_reader import TaskLogReader\r\nfrom airflow.utils.dates import days_ago\r\n\r\n\r\nfrom pkgutil import iter_modules\r\nfrom datetime import datetime, timedelta\r\n\r\n\r\n\r\nthe_imports = [\"flask\", \"wheel\", \"click\", \"cryptography\", \"packaging\"]\r\n\r\ndef dynamic_imports(imports: list):\r\n    from random import choices\r\n    return [choices(imports, k=3) for _ in range(7)]\r\n\r\ndef dynamic_importer(*args):\r\n    import importlib\r\n    for mod in args[0]:\r\n        print(mod)\r\n        importlib.import_module(mod)\r\n\r\nwith DAG(\r\n    dag_id=\"sys_site_packages_true\",\r\n    schedule_interval=timedelta(days=365),\r\n    start_date=datetime(2001, 1, 1),\r\n    doc_md=docs,\r\n    tags=[\"core\", \"extended_tags\", \"venv_op\"],\r\n) as  dag:\r\n\r\n    pv0 = PythonVirtualenvOperator.partial(\r\n        task_id=\"dont_install_packages_already_in_outer_environment\",\r\n        python_callable=dynamic_importer,\r\n        python_version=3.8,\r\n        system_site_packages=True,\r\n        requirements=the_imports,\r\n    ).expand(op_args=dynamic_imports(the_imports))\r\n\r\n[2022-03-30 17:13:36,447] {taskinstance.py:850} DEBUG - Setting task state for <TaskInstance: sys_site_packages_true.dont_install_packages_already_in_outer_environment backfill__2022-03-30T17:13:35+00:00 [None]> to scheduled\r\n[2022-03-30 17:13:36,455] {backfill_job.py:405} DEBUG - *** Clearing out not_ready list ***\r\n[2022-03-30 17:13:36,458] {taskinstance.py:759} DEBUG - Refreshing TaskInstance <TaskInstance: sys_site_packages_true.dont_install_packages_already_in_outer_environment backfill__2022-03-30T17:13:35+00:00 [scheduled]> from DB\r\n[2022-03-30 17:13:36,461] {backfill_job.py:418} DEBUG - Task instance to run <TaskInstance: sys_site_packages_true.dont_install_packages_already_in_outer_environment backfill__2022-03-30T17:13:35+00:00 [scheduled]> state scheduled\r\n[2022-03-30 17:13:36,461] {taskinstance.py:1061} DEBUG - <TaskInstance: sys_site_packages_true.dont_install_packages_already_in_outer_environment backfill__2022-03-30T17:13:35+00:00 [scheduled]> dependency 'Previous Dagrun State' PASSED: True, The context specified that the state of past DAGs could be ignored.\r\n[2022-03-30 17:13:36,461] {taskinstance.py:1061} DEBUG - <TaskInstance: sys_site_packages_true.dont_install_packages_already_in_outer_environment backfill__2022-03-30T17:13:35+00:00 [scheduled]> dependency 'Trigger Rule' PASSED: True, The task instance did not have any upstream tasks.\r\n[2022-03-30 17:13:36,462] {taskinstance.py:1061} DEBUG - <TaskInstance: sys_site_packages_true.dont_install_packages_already_in_outer_environment backfill__2022-03-30T17:13:35+00:00 [scheduled]> dependency 'Task has been mapped' PASSED: False, The task has yet to be mapped!\r\n[2022-03-30 17:13:36,462] {taskinstance.py:1041} DEBUG - Dependencies not met for <TaskInstance: sys_site_packages_true.dont_install_packages_already_in_outer_environment backfill__2022-03-30T17:13:35+00:00 [scheduled]>, dependency 'Task has been mapped' FAILED: The task has yet to be mapped!\r\n[2022-03-30 17:13:36,462] {taskinstance.py:1061} DEBUG - <TaskInstance: sys_site_packages_true.dont_install_packages_already_in_outer_environment backfill__2022-03-30T17:13:35+00:00 [scheduled]> dependency 'Task Instance Not Running' PASSED: True, Task is not in running state.\r\n[2022-03-30 17:13:36,462] {taskinstance.py:1061} DEBUG - <TaskInstance: sys_site_packages_true.dont_install_packages_already_in_outer_environment backfill__2022-03-30T17:13:35+00:00 [scheduled]> dependency 'Not In Retry Period' PASSED: True, The task instance was not marked for retrying.\r\n[2022-03-30 17:13:36,462] {taskinstance.py:1061} DEBUG - <TaskInstance: sys_site_packages_true.dont_install_packages_already_in_outer_environment backfill__2022-03-30T17:13:35+00:00 [scheduled]> dependency 'Task Instance State' PASSED: True, Task state scheduled was valid.\r\n[2022-03-30 17:13:36,463] {backfill_job.py:536} DEBUG - Adding <TaskInstance: sys_site_packages_true.dont_install_packages_already_in_outer_environment backfill__2022-03-30T17:13:35+00:00 [scheduled]> to not_ready\r\n[2022-03-30 17:13:41,428] {base_job.py:226} DEBUG - [heartbeat]\r\n[2022-03-30 17:13:41,428] {base_executor.py:156} DEBUG - 0 running task instances\r\n[2022-03-30 17:13:41,429] {base_executor.py:157} DEBUG - 0 in queue\r\n[2022-03-30 17:13:41,429] {base_executor.py:158} DEBUG - 32 open slots\r\n[2022-03-30 17:13:41,429] {base_executor.py:167} DEBUG - Calling the <class 'airflow.executors.debug_executor.DebugExecutor'> sync method\r\n[2022-03-30 17:13:41,429] {backfill_job.py:596} WARNING - Deadlock discovered for ti_status.to_run=dict_values([<TaskInstance: sys_site_packages_true.dont_install_packages_already_in_outer_environment backfill__2022-03-30T17:13:35+00:00 [scheduled]>])\r\n[2022-03-30 17:13:41,433] {dagrun.py:628} DEBUG - number of tis tasks for <DagRun sys_site_packages_true @ 2022-03-30T17:13:35+00:00: backfill__2022-03-30T17:13:35+00:00, externally triggered: False>: 1 task(s)\r\n[2022-03-30 17:13:41,433] {dagrun.py:644} DEBUG - number of scheduleable tasks for <DagRun sys_site_packages_true @ 2022-03-30T17:13:35+00:00: backfill__2022-03-30T17:13:35+00:00, externally triggered: False>: 0 task(s)\r\n[2022-03-30 17:13:41,434] {taskinstance.py:1061} DEBUG - <TaskInstance: sys_site_packages_true.dont_install_packages_already_in_outer_environment backfill__2022-03-30T17:13:35+00:00 [scheduled]> dependency 'Not In Retry Period' PASSED: True, The context specified that being in a retry period was permitted.\r\n[2022-03-30 17:13:41,434] {taskinstance.py:1061} DEBUG - <TaskInstance: sys_site_packages_true.dont_install_packages_already_in_outer_environment backfill__2022-03-30T17:13:35+00:00 [scheduled]> dependency 'Previous Dagrun State' PASSED: True, The task did not have depends_on_past set.\r\n[2022-03-30 17:13:41,434] {taskinstance.py:1061} DEBUG - <TaskInstance: sys_site_packages_true.dont_install_packages_already_in_outer_environment backfill__2022-03-30T17:13:35+00:00 [scheduled]> dependency 'Trigger Rule' PASSED: True, The task instance did not have any upstream tasks.\r\n[2022-03-30 17:13:41,434] {taskinstance.py:1061} DEBUG - <TaskInstance: sys_site_packages_true.dont_install_packages_already_in_outer_environment backfill__2022-03-30T17:13:35+00:00 [scheduled]> dependency 'Task has been mapped' PASSED: False, The task has yet to be mapped!\r\n[2022-03-30 17:13:41,434] {taskinstance.py:1041} DEBUG - Dependencies not met for <TaskInstance: sys_site_packages_true.dont_install_packages_already_in_outer_environment backfill__2022-03-30T17:13:35+00:00 [scheduled]>, dependency 'Task has been mapped' FAILED: The task has yet to be mapped!\r\n[2022-03-30 17:13:41,434] {dagrun.py:570} ERROR - Deadlock; marking run <DagRun sys_site_packages_true @ 2022-03-30T17:13:35+00:00: backfill__2022-03-30T17:13:35+00:00, externally triggered: False> failed\r\n[2022-03-30 17:13:41,434] {dagrun.py:594} INFO - DagRun Finished: dag_id=sys_site_packages_true, execution_date=2022-03-30T17:13:35+00:00, run_id=backfill__2022-03-30T17:13:35+00:00, run_start_date=2022-03-30 23:13:36.434073+00:00, run_end_date=2022-03-30 23:13:41.434824+00:00, run_duration=5.000751, state=failed, external_trigger=False, run_type=backfill, data_interval_start=2022-03-30T17:13:35+00:00, data_interval_end=2023-03-30T17:13:35+00:00, dag_hash=None\r\n[2022-03-30 17:13:41,435] {backfill_job.py:362} INFO - [backfill progress] | finished run 1 of 1 | tasks waiting: 0 | succeeded: 0 | running: 0 | failed: 0 | skipped: 0 | deadlocked: 1 | not ready: 1\r\n[2022-03-30 17:13:41,435] {backfill_job.py:376} DEBUG - Finished dag run loop iteration. Remaining tasks dict_values([])\r\n[2022-03-30 17:13:41,438] {taskinstance.py:1061} DEBUG - <TaskInstance: sys_site_packages_true.dont_install_packages_already_in_outer_environment backfill__2022-03-30T17:13:35+00:00 [scheduled]> dependency 'Not In Retry Period' PASSED: True, The task instance was not marked for retrying.\r\n[2022-03-30 17:13:41,438] {taskinstance.py:1061} DEBUG - <TaskInstance: sys_site_packages_true.dont_install_packages_already_in_outer_environment backfill__2022-03-30T17:13:35+00:00 [scheduled]> dependency 'Previous Dagrun State' PASSED: True, The task did not have depends_on_past set.\r\n[2022-03-30 17:13:41,438] {taskinstance.py:1061} DEBUG - <TaskInstance: sys_site_packages_true.dont_install_packages_already_in_outer_environment backfill__2022-03-30T17:13:35+00:00 [scheduled]> dependency 'Trigger Rule' PASSED: True, The task instance did not have any upstream tasks.\r\n[2022-03-30 17:13:41,438] {taskinstance.py:1061} DEBUG - <TaskInstance: sys_site_packages_true.dont_install_packages_already_in_outer_environment backfill__2022-03-30T17:13:35+00:00 [scheduled]> dependency 'Task has been mapped' PASSED: False, The task has yet to be mapped!\r\n[2022-03-30 17:13:41,438] {taskinstance.py:1041} DEBUG - Dependencies not met for <TaskInstance: sys_site_packages_true.dont_install_packages_already_in_outer_environment backfill__2022-03-30T17:13:35+00:00 [scheduled]>, dependency 'Task has been mapped' FAILED: The task has yet to be mapped!\r\n[2022-03-30 17:13:41,440] {taskinstance.py:1061} DEBUG - <TaskInstance: sys_site_packages_true.dont_install_packages_already_in_outer_environment backfill__2022-03-30T17:13:35+00:00 [scheduled]> dependency 'Not In Retry Period' PASSED: True, The task instance was not marked for retrying.\r\n[2022-03-30 17:13:41,440] {taskinstance.py:1061} DEBUG - <TaskInstance: sys_site_packages_true.dont_install_packages_already_in_outer_environment backfill__2022-03-30T17:13:35+00:00 [scheduled]> dependency 'Previous Dagrun State' PASSED: True, The context specified that the state of past DAGs could be ignored.\r\n[2022-03-30 17:13:41,440] {taskinstance.py:1061} DEBUG - <TaskInstance: sys_site_packages_true.dont_install_packages_already_in_outer_environment backfill__2022-03-30T17:13:35+00:00 [scheduled]> dependency 'Trigger Rule' PASSED: True, The task instance did not have any upstream tasks.\r\n[2022-03-30 17:13:41,440] {taskinstance.py:1061} DEBUG - <TaskInstance: sys_site_packages_true.dont_install_packages_already_in_outer_environment backfill__2022-03-30T17:13:35+00:00 [scheduled]> dependency 'Task has been mapped' PASSED: False, The task has yet to be mapped!\r\n[2022-03-30 17:13:41,440] {taskinstance.py:1041} DEBUG - Dependencies not met for <TaskInstance: sys_site_packages_true.dont_install_packages_already_in_outer_environment backfill__2022-03-30T17:13:35+00:00 [scheduled]>, dependency 'Task has been mapped' FAILED: The task has yet to be mapped!\r\nBackfillJob is deadlocked.\r\nThese tasks have succeeded:\r\nDAG ID    Task ID    Run ID    Try number\r\n--------  ---------  --------  ------------\r\n\r\nThese tasks are running:\r\nDAG ID    Task ID    Run ID    Try number\r\n--------  ---------  --------  ------------\r\n\r\nThese tasks have failed:\r\nDAG ID    Task ID    Run ID    Try number\r\n--------  ---------  --------  ------------\r\n\r\nThese tasks are skipped:\r\nDAG ID    Task ID    Run ID    Try number\r\n--------  ---------  --------  ------------\r\n\r\nThese tasks are deadlocked:\r\nDAG ID                  Task ID                                             Run ID                                 Try number\r\n----------------------  --------------------------------------------------  -----------------------------------  ------------\r\nsys_site_packages_true  dont_install_packages_already_in_outer_environment  backfill__2022-03-30T17:13:35+00:00             1\r\n[2022-03-30 17:13:41,446] {cli_action_loggers.py:84} DEBUG - Calling callbacks: []\r\n[2022-03-30 17:13:41,447] {settings.py:383} DEBUG - Disposing DB connection pool (PID 816091)\r\n\r\n\r\n```\r\n### Operating System\r\n\r\nUbuntu Linux\r\n\r\n### Versions of Apache Airflow Providers\r\n\r\n_No response_\r\n\r\n### Deployment\r\n\r\nDocker-Compose\r\n\r\n### Deployment details\r\n\r\ntested with airflow breeze and a local virtualenv with airflow 2.3.0 installed.\r\n\r\n### Anything else\r\n\r\n_No response_\r\n\r\n### Are you willing to submit PR?\r\n\r\n- [ ] Yes I am willing to submit a PR!\r\n\r\n### Code of Conduct\r\n\r\n- [X] I agree to follow this project's [Code of Conduct](https://github.com/apache/airflow/blob/main/CODE_OF_CONDUCT.md)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/apache/airflow/issues/22626/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/airflow/issues/22626/timeline",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/apache/airflow/issues/22622",
        "repository_url": "https://api.github.com/repos/apache/airflow",
        "labels_url": "https://api.github.com/repos/apache/airflow/issues/22622/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/airflow/issues/22622/comments",
        "events_url": "https://api.github.com/repos/apache/airflow/issues/22622/events",
        "html_url": "https://github.com/apache/airflow/issues/22622",
        "id": 1186545439,
        "node_id": "I_kwDOAgUK285GuT8f",
        "number": 22622,
        "title": "Helm values nameOverride and fullnameOverride are not p",
        "user": {
            "login": "evanrosebrook",
            "id": 495753,
            "node_id": "MDQ6VXNlcjQ5NTc1Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/495753?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evanrosebrook",
            "html_url": "https://github.com/evanrosebrook",
            "followers_url": "https://api.github.com/users/evanrosebrook/followers",
            "following_url": "https://api.github.com/users/evanrosebrook/following{/other_user}",
            "gists_url": "https://api.github.com/users/evanrosebrook/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/evanrosebrook/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/evanrosebrook/subscriptions",
            "organizations_url": "https://api.github.com/users/evanrosebrook/orgs",
            "repos_url": "https://api.github.com/users/evanrosebrook/repos",
            "events_url": "https://api.github.com/users/evanrosebrook/events{/privacy}",
            "received_events_url": "https://api.github.com/users/evanrosebrook/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 199168283,
                "node_id": "MDU6TGFiZWwxOTkxNjgyODM=",
                "url": "https://api.github.com/repos/apache/airflow/labels/kind:bug",
                "name": "kind:bug",
                "color": "fc2929",
                "default": false,
                "description": "This is a clearly a bug"
            },
            {
                "id": 1971984525,
                "node_id": "MDU6TGFiZWwxOTcxOTg0NTI1",
                "url": "https://api.github.com/repos/apache/airflow/labels/area:helm-chart",
                "name": "area:helm-chart",
                "color": "024e91",
                "default": false,
                "description": "Airflow Helm Chart"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-03-30T14:25:53Z",
        "updated_at": "2022-03-30T14:25:54Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Official Helm Chart version\n\n1.5.0 (latest released)\n\n### Apache Airflow version\n\n2.2.4 (latest released)\n\n### Kubernetes Version\n\n1.21\n\n### Helm Chart configuration\n\nIn your values.yaml you can specify fullnameOverride or nameOverride. Neither is added to the names of the Deployment objects created.\r\n\r\n# Provide a name to substitute for the full names of resources\r\nfullnameOverride: \"whatever\"\r\n\r\n# Provide a name to substitute for the name of the chart\r\nnameOverride: \"whatever\"\r\n\r\nGenerated names will look like:\r\n\r\nairflow-scheduler-c48f6d677-zc72b\r\nairflow-webserver-7b6fc468fb-xq86l\r\n\r\nIn this example \"airflow\" is the release name. \r\n\r\nIf fullnameOverride is set it should take precedence and the name should look like:\r\n\r\nwhatever-scheduler-c48f6d677-zc72b\r\nwhatever-webserver-7b6fc468fb-xq86l\r\n\r\nIf nameOverride is set and fullnameOverride is set then the name should be included with the release name. For example:\r\n\r\nairflow-whatever-scheduler-c48f6d677-zc72b\r\nairflow-whatever-webserver-7b6fc468fb-xq86l\r\n\r\n\n\n### Docker Image customisations\n\n_No response_\n\n### What happened\n\nWhen setting name overrides, the deployment objects do not include the overrides in deployment objects\n\n### What you think should happen instead\n\nDeployment objects should include the name overrides.\n\n### How to reproduce\n\nSet nameOverride or fullnameOverride and deploy to a cluster. Inspect your Deployments and find that the name is based on .Release.Name without including overrides.\n\n### Anything else\n\nThe template function that should be used has already been added to _helpers.yaml: https://github.com/apache/airflow/blob/9e66d14dc1212e54c0eb22cc43a1eee764a8fed8/chart/templates/_helpers.yaml#L23\r\n\r\nSomeone just needs to go through the various *-deployment.yaml files and update the name to use the template function.\n\n### Are you willing to submit PR?\n\n- [X] Yes I am willing to submit a PR!\n\n### Code of Conduct\n\n- [X] I agree to follow this project's [Code of Conduct](https://github.com/apache/airflow/blob/main/CODE_OF_CONDUCT.md)\n",
        "reactions": {
            "url": "https://api.github.com/repos/apache/airflow/issues/22622/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/airflow/issues/22622/timeline",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/apache/airflow/issues/22619",
        "repository_url": "https://api.github.com/repos/apache/airflow",
        "labels_url": "https://api.github.com/repos/apache/airflow/issues/22619/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/airflow/issues/22619/comments",
        "events_url": "https://api.github.com/repos/apache/airflow/issues/22619/events",
        "html_url": "https://github.com/apache/airflow/pull/22619",
        "id": 1186475814,
        "node_id": "PR_kwDOAgUK2841UFNZ",
        "number": 22619,
        "title": "Add possibility to create users in LDAP mode",
        "user": {
            "login": "dx034",
            "id": 17449201,
            "node_id": "MDQ6VXNlcjE3NDQ5MjAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/17449201?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dx034",
            "html_url": "https://github.com/dx034",
            "followers_url": "https://api.github.com/users/dx034/followers",
            "following_url": "https://api.github.com/users/dx034/following{/other_user}",
            "gists_url": "https://api.github.com/users/dx034/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dx034/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dx034/subscriptions",
            "organizations_url": "https://api.github.com/users/dx034/orgs",
            "repos_url": "https://api.github.com/users/dx034/repos",
            "events_url": "https://api.github.com/users/dx034/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dx034/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1545584474,
                "node_id": "MDU6TGFiZWwxNTQ1NTg0NDc0",
                "url": "https://api.github.com/repos/apache/airflow/labels/area:webserver",
                "name": "area:webserver",
                "color": "a9db3f",
                "default": false,
                "description": "Webserver related Issues"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-03-30T13:36:35Z",
        "updated_at": "2022-03-31T17:09:45Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/apache/airflow/pulls/22619",
            "html_url": "https://github.com/apache/airflow/pull/22619",
            "diff_url": "https://github.com/apache/airflow/pull/22619.diff",
            "patch_url": "https://github.com/apache/airflow/pull/22619.patch",
            "merged_at": null
        },
        "body": "Closes #18545 , code changes are identical to the ones made for remote user mode in #19963. \r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/apache/airflow/issues/22619/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/airflow/issues/22619/timeline",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/apache/airflow/issues/22613",
        "repository_url": "https://api.github.com/repos/apache/airflow",
        "labels_url": "https://api.github.com/repos/apache/airflow/issues/22613/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/airflow/issues/22613/comments",
        "events_url": "https://api.github.com/repos/apache/airflow/issues/22613/events",
        "html_url": "https://github.com/apache/airflow/pull/22613",
        "id": 1185905320,
        "node_id": "PR_kwDOAgUK2841SPhP",
        "number": 22613,
        "title": "Convert CLI commands to use Click",
        "user": {
            "login": "blag",
            "id": 597113,
            "node_id": "MDQ6VXNlcjU5NzExMw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/597113?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/blag",
            "html_url": "https://github.com/blag",
            "followers_url": "https://api.github.com/users/blag/followers",
            "following_url": "https://api.github.com/users/blag/following{/other_user}",
            "gists_url": "https://api.github.com/users/blag/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/blag/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/blag/subscriptions",
            "organizations_url": "https://api.github.com/users/blag/orgs",
            "repos_url": "https://api.github.com/users/blag/repos",
            "events_url": "https://api.github.com/users/blag/events{/privacy}",
            "received_events_url": "https://api.github.com/users/blag/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1672279581,
                "node_id": "MDU6TGFiZWwxNjcyMjc5NTgx",
                "url": "https://api.github.com/repos/apache/airflow/labels/area:CLI",
                "name": "area:CLI",
                "color": "e99695",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2022-03-30T05:29:41Z",
        "updated_at": "2022-03-30T16:37:42Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/apache/airflow/pulls/22613",
            "html_url": "https://github.com/apache/airflow/pull/22613",
            "diff_url": "https://github.com/apache/airflow/pull/22613.diff",
            "patch_url": "https://github.com/apache/airflow/pull/22613.patch",
            "merged_at": null
        },
        "body": "<!--\r\nThank you for contributing! Please make sure that your code changes\r\nare covered with tests. And in case of new features or big changes\r\nremember to adjust the documentation.\r\n\r\nFeel free to ping committers for the review!\r\n\r\nIn case of existing issue, reference it using one of the following:\r\n\r\ncloses: #ISSUE\r\nrelated: #ISSUE\r\n\r\nHow to write a good git commit message:\r\nhttp://chris.beams.io/posts/git-commit/\r\n-->\r\n\r\n## PR status ##\r\n\r\n**RFC** - gauging interest and feedback before continuing\r\n\r\nThis PR converts the `airflow db` CLI to using the Click and Rich frameworks with [`rich-click`](https://pypi.org/project/rich-click/) (note that I refer to the combination here as just \"Click\"). It adds a **temporary** `airflow-ng` console script entry point to enable easier/better comparisons between the existing `airflow` console script entry point and the `airflow-ng` one.\r\n\r\nWe will need to convert all the others subcommands, and I don't know of a good way to do so except converting them all at the same time.\r\n\r\n#### Reverse Compatibility ####\r\n\r\nI believe we can largely, if not entirely, keep reverse compatibility with the previous argparse-based CLI. However, if we can't completely maintain reverse compatibility, this might be a better change to implement in Airflow 3.0.\r\n\r\n## Motivation ##\r\n\r\nWhile argparse is quite extensive in what it supports, third party frameworks like Click have faster development cycles and therefore have implemented 21st century features that argparse does not, and likely will not, support. Things like a simple Python API, automatic coloring for `--help` output, use of non-symbolic ASCII characters, and a better understanding of common CLI author needs are all available with Click but aren't easily supported in argparse.\r\n\r\nWith the Rich framework, it is trivial for command authors to output text formatted with colors and other font effects.\r\n\r\nThe existing argparse implementation is a [bit of a mess with `ARG_` variables](https://github.com/apache/airflow/blob/c58b5e583bcad83048fdee72bc9ddf6c3a7b4229/airflow/cli/cli_parser.py#L180) for DRY, and diving into the CLI commands isn't very easy. This Click implementation also creates some examples for future conversions:\r\n\r\n* a globally reusable option (the `click_yes` decorator)\r\n* some options that are reused within a single module (`click_revision`, `click_version`, `click_from_revision`, `click_from_version`, `click_show_sql_only`)\r\n* a decorator that checks for issues with common options between the `db upgrade` and `db downgrade` subcommands\r\n\r\nAll other options are implemented as decorators for for individual functions, illustrating how to add options to subcommands in many different ways that might make sense. You can also define options that apply to command groups.\r\n\r\nSince most options are bespoke to their subcommand, it makes sense to me that they should be defined closer to where they are used instead of all in a single file. Adding options to a command via decorators makes this very easy to do.\r\n\r\n## Comparison ##\r\n\r\nWe get some things \"for free\" by converting over to Click instead of argparse.\r\n\r\n#### Formatting ####\r\n\r\n* Note the descriptions correctly rewrapping in the `airflow db upgrade --help` example as opposed to the existing argparse implementation.\r\n* The different sections of command output are rendered in their own ASCII boxes, including command errors.\r\n\r\n#### Colors! ####\r\n\r\nClick automatically colorizes output without any additional hinting.\r\n\r\n* Note how the use of colors separates pieces of information like:\r\n  - The long-form option\r\n  - The short-form option\r\n  - The type of the option value\r\n* Colors also draw your attention to the most important part of command output in a context-dependent manner\r\n  - Note how the names of the different subcommands are in bright blue, and the error output is easily recognizable in a red ASCII box.\r\n  - Some warnings (not shown) are also displayed in yellow text to differentiate them from normal output and error output, although this really depends on when the warnings are emitted at import time.\r\n\r\n### `airflow db --help` ###\r\n\r\n<details><summary>Click to expand before/after</summary>\r\n\r\n#### Before ####\r\n\r\n![Screen Shot 2022-03-29 at 9 24 38 PM](https://user-images.githubusercontent.com/597113/160751270-cc15769d-e1bf-4eca-9617-366f6579592f.png)\r\n\r\n#### After ####\r\n\r\n![Screen Shot 2022-03-29 at 9 25 47 PM](https://user-images.githubusercontent.com/597113/160751314-1f13d25e-5eeb-44ee-a9a5-d982fe07c051.png)\r\n\r\n</details>\r\n\r\n### `airflow db upgrade --help` ###\r\n\r\n<details><summary>Click to expand before/after</summary>\r\n\r\n#### Before ####\r\n\r\n![Screen Shot 2022-03-29 at 9 37 03 PM](https://user-images.githubusercontent.com/597113/160752345-1aa5c05a-0b40-4fae-a44d-5858646571ee.png)\r\n\r\n#### After ####\r\n\r\n![Screen Shot 2022-03-29 at 9 29 21 PM](https://user-images.githubusercontent.com/597113/160751665-a8b5ba05-78dd-4ebf-93a3-b5a3ff2db592.png)\r\n\r\n</details>\r\n\r\n### `airflow db upgrade --hep` (misspelled option) ###\r\n\r\n<details><summary>Click to expand before/after</summary>\r\n\r\n#### Before ####\r\n\r\n![Screen Shot 2022-03-29 at 10 05 44 PM](https://user-images.githubusercontent.com/597113/160755340-a5b00001-2a4f-4a03-b2eb-84319f408dd9.png)\r\n\r\n#### After ####\r\n\r\n![Screen Shot 2022-03-29 at 10 05 17 PM](https://user-images.githubusercontent.com/597113/160755370-dea8bf52-1b8e-4b6e-bd1a-056f0078b899.png)\r\n\r\n</details>\r\n\r\n## Future Work ##\r\n\r\n#### Command Grouping ####\r\n\r\nWe can further separate the `airflow` subcommands into different groups so they are rendered into ASCII boxes with their group label (see the \"Groups and sorting\" section of the [rich-click documentation](https://pypi.org/project/rich-click/)).\r\n\r\n#### Styling Customization ####\r\n\r\nSome Airflow vendors may customize the `airflow` command. The rich-click library allows for extensive style customization.\r\n\r\n#### Click Goodies ####\r\n\r\n* The Click API makes it easier to [test the CLI](https://click.palletsprojects.com/en/8.1.x/testing/) programmatically entirely within Python.\r\n* [Autocomplete with Click](https://click.palletsprojects.com/en/8.1.x/shell-completion/) looks like it would be pretty easy to implement.\r\n* [Progress bars](https://click.palletsprojects.com/en/8.1.x/utils/#showing-progress-bars) - imagine launching a DAG via the CLI and then viewing a progress bar while it finishes.\r\n\r\n---\r\n**^ Add meaningful description above**\r\n\r\nRead the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/CONTRIBUTING.rst#pull-request-guidelines)** for more information.\r\nIn case of fundamental code change, Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvements+Proposals)) is needed.\r\nIn case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).\r\nIn case of backwards incompatible changes please leave a note in [UPDATING.md](https://github.com/apache/airflow/blob/main/UPDATING.md).\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/apache/airflow/issues/22613/reactions",
            "total_count": 4,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 2,
            "rocket": 1,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/apache/airflow/issues/22613/timeline",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/apache/airflow/issues/22612",
        "repository_url": "https://api.github.com/repos/apache/airflow",
        "labels_url": "https://api.github.com/repos/apache/airflow/issues/22612/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/airflow/issues/22612/comments",
        "events_url": "https://api.github.com/repos/apache/airflow/issues/22612/events",
        "html_url": "https://github.com/apache/airflow/issues/22612",
        "id": 1185823750,
        "node_id": "I_kwDOAgUK285GrjwG",
        "number": 22612,
        "title": "Schedular going down for 1-2 minute on every 10 minute as increase completed pods in EKS",
        "user": {
            "login": "dviru",
            "id": 10843400,
            "node_id": "MDQ6VXNlcjEwODQzNDAw",
            "avatar_url": "https://avatars.githubusercontent.com/u/10843400?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dviru",
            "html_url": "https://github.com/dviru",
            "followers_url": "https://api.github.com/users/dviru/followers",
            "following_url": "https://api.github.com/users/dviru/following{/other_user}",
            "gists_url": "https://api.github.com/users/dviru/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dviru/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dviru/subscriptions",
            "organizations_url": "https://api.github.com/users/dviru/orgs",
            "repos_url": "https://api.github.com/users/dviru/repos",
            "events_url": "https://api.github.com/users/dviru/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dviru/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 199168283,
                "node_id": "MDU6TGFiZWwxOTkxNjgyODM=",
                "url": "https://api.github.com/repos/apache/airflow/labels/kind:bug",
                "name": "kind:bug",
                "color": "fc2929",
                "default": false,
                "description": "This is a clearly a bug"
            },
            {
                "id": 2500918862,
                "node_id": "MDU6TGFiZWwyNTAwOTE4ODYy",
                "url": "https://api.github.com/repos/apache/airflow/labels/area:core",
                "name": "area:core",
                "color": "d4c5f9",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2022-03-30T03:40:57Z",
        "updated_at": "2022-03-30T10:52:54Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Apache Airflow version\n\n2.2.4 (latest released)\n\n### What happened\n\nHi Team, I am using airflow 2.2.4 and deployed it on aws eks cluster. I noticed that every 5-10 minute schedular down message seeing on airflow UI. When I checked airflow schedular log, seeing the lot of below statements.\r\n\r\n`[2022-03-21 08:21:21,640] {kubernetes_executor.py:729} INFO - Attempting to adopt pod sampletask.05b6f567b4a64bd5beb16e526ba94d7a`\r\n\r\nThis above statement will print for all completed pod which exist in eks, But it is repeating multiple time and as also invoking the PATCH api.\r\n\r\nAs per my understanding what happing is, below code pulling all the completed pod details for every time from EKS cluster and invoking the patch API on completed pod. So this activity for 1000 completed POD finishing in 1 minute, for 7000 completed POD its taking 3-5 minute, thats the reason scheduler is going down\r\n\r\n<img width=\"1054\" alt=\"160352813-9ff57de3-782f-4cee-8f7c-f6d5b8a60d29\" src=\"https://user-images.githubusercontent.com/10843400/160741990-838f15e2-485c-4c9a-8ca7-c7014e14f0b4.png\">\r\n\r\n\n\n### What you think should happen instead\n\nThis schedular will be healthy when we set \"delete_worker_pods = True\". but when set delete_worker_pods =False and completed pod count goes to 7000 to 10,000 The scheduler should goes down.\r\n\r\nThe scheduler should be healthy irrespective of how many completed pod exist in EKS cluster.\n\n### How to reproduce\n\nDeploy airflow in k8s cluster and set \"delete_worker_pods = False\". once completed pod reaches 7,000 to 10,000, you will able to see this issue.\n\n### Operating System\n\nOS:Debian GNU/Linux, VERSION: 10\n\n### Versions of Apache Airflow Providers\n\n_No response_\n\n### Deployment\n\nOther Docker-based deployment\n\n### Deployment details\n\n_No response_\n\n### Anything else\n\n_No response_\n\n### Are you willing to submit PR?\n\n- [X] Yes I am willing to submit a PR!\n\n### Code of Conduct\n\n- [X] I agree to follow this project's [Code of Conduct](https://github.com/apache/airflow/blob/main/CODE_OF_CONDUCT.md)\n",
        "reactions": {
            "url": "https://api.github.com/repos/apache/airflow/issues/22612/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/airflow/issues/22612/timeline",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/apache/airflow/issues/22610",
        "repository_url": "https://api.github.com/repos/apache/airflow",
        "labels_url": "https://api.github.com/repos/apache/airflow/issues/22610/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/airflow/issues/22610/comments",
        "events_url": "https://api.github.com/repos/apache/airflow/issues/22610/events",
        "html_url": "https://github.com/apache/airflow/pull/22610",
        "id": 1185589767,
        "node_id": "PR_kwDOAgUK2841RKqS",
        "number": 22610,
        "title": "Fix StatsD casing and helm chart StatsD comments",
        "user": {
            "login": "jedcunningham",
            "id": 66968678,
            "node_id": "MDQ6VXNlcjY2OTY4Njc4",
            "avatar_url": "https://avatars.githubusercontent.com/u/66968678?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jedcunningham",
            "html_url": "https://github.com/jedcunningham",
            "followers_url": "https://api.github.com/users/jedcunningham/followers",
            "following_url": "https://api.github.com/users/jedcunningham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jedcunningham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jedcunningham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jedcunningham/subscriptions",
            "organizations_url": "https://api.github.com/users/jedcunningham/orgs",
            "repos_url": "https://api.github.com/users/jedcunningham/repos",
            "events_url": "https://api.github.com/users/jedcunningham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jedcunningham/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1971984525,
                "node_id": "MDU6TGFiZWwxOTcxOTg0NTI1",
                "url": "https://api.github.com/repos/apache/airflow/labels/area:helm-chart",
                "name": "area:helm-chart",
                "color": "024e91",
                "default": false,
                "description": "Airflow Helm Chart"
            },
            {
                "id": 1993586993,
                "node_id": "MDU6TGFiZWwxOTkzNTg2OTkz",
                "url": "https://api.github.com/repos/apache/airflow/labels/kind:documentation",
                "name": "kind:documentation",
                "color": "0030b5",
                "default": false,
                "description": ""
            },
            {
                "id": 2057471696,
                "node_id": "MDU6TGFiZWwyMDU3NDcxNjk2",
                "url": "https://api.github.com/repos/apache/airflow/labels/changelog:skip",
                "name": "changelog:skip",
                "color": "a8f731",
                "default": false,
                "description": "Changes that should be skipped from the changelog"
            },
            {
                "id": 2451280808,
                "node_id": "MDU6TGFiZWwyNDUxMjgwODA4",
                "url": "https://api.github.com/repos/apache/airflow/labels/full%20tests%20needed",
                "name": "full tests needed",
                "color": "e0c514",
                "default": false,
                "description": "We need to run full set of tests for this PR to merge"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-03-29T23:23:14Z",
        "updated_at": "2022-03-31T17:40:20Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/apache/airflow/pulls/22610",
            "html_url": "https://github.com/apache/airflow/pull/22610",
            "diff_url": "https://github.com/apache/airflow/pull/22610.diff",
            "patch_url": "https://github.com/apache/airflow/pull/22610.patch",
            "merged_at": null
        },
        "body": "This snowballed a bit, but this fixes the wording on a helm chart StatsD param to indicate it uses the local `uid` instead of the global securitycontext and then a bunch of StatsD casing fixes.",
        "reactions": {
            "url": "https://api.github.com/repos/apache/airflow/issues/22610/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/airflow/issues/22610/timeline",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/apache/airflow/issues/22608",
        "repository_url": "https://api.github.com/repos/apache/airflow",
        "labels_url": "https://api.github.com/repos/apache/airflow/issues/22608/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/airflow/issues/22608/comments",
        "events_url": "https://api.github.com/repos/apache/airflow/issues/22608/events",
        "html_url": "https://github.com/apache/airflow/pull/22608",
        "id": 1185474569,
        "node_id": "PR_kwDOAgUK2841QwLk",
        "number": 22608,
        "title": "extra condition to check returned object not None",
        "user": {
            "login": "SasanAhmadi",
            "id": 21976715,
            "node_id": "MDQ6VXNlcjIxOTc2NzE1",
            "avatar_url": "https://avatars.githubusercontent.com/u/21976715?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SasanAhmadi",
            "html_url": "https://github.com/SasanAhmadi",
            "followers_url": "https://api.github.com/users/SasanAhmadi/followers",
            "following_url": "https://api.github.com/users/SasanAhmadi/following{/other_user}",
            "gists_url": "https://api.github.com/users/SasanAhmadi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SasanAhmadi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SasanAhmadi/subscriptions",
            "organizations_url": "https://api.github.com/users/SasanAhmadi/orgs",
            "repos_url": "https://api.github.com/users/SasanAhmadi/repos",
            "events_url": "https://api.github.com/users/SasanAhmadi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SasanAhmadi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1697155831,
                "node_id": "MDU6TGFiZWwxNjk3MTU1ODMx",
                "url": "https://api.github.com/repos/apache/airflow/labels/area:providers",
                "name": "area:providers",
                "color": "d4c5f9",
                "default": false,
                "description": ""
            },
            {
                "id": 2458345138,
                "node_id": "MDU6TGFiZWwyNDU4MzQ1MTM4",
                "url": "https://api.github.com/repos/apache/airflow/labels/okay%20to%20merge",
                "name": "okay to merge",
                "color": "64e05c",
                "default": false,
                "description": "It's ok to merge this PR as it does not require more tests"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2022-03-29T22:06:36Z",
        "updated_at": "2022-03-31T17:49:39Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/apache/airflow/pulls/22608",
            "html_url": "https://github.com/apache/airflow/pull/22608",
            "diff_url": "https://github.com/apache/airflow/pull/22608.diff",
            "patch_url": "https://github.com/apache/airflow/pull/22608.patch",
            "merged_at": null
        },
        "body": "This PR will add an extra condition to the JenkinsJobTriggerOperator to prevent a bug which happens when iterating over `executable` key in the returned response from jenkins server when polling for the newly created job.\r\n\r\ncloses: #22606\r\nrelated: #22606",
        "reactions": {
            "url": "https://api.github.com/repos/apache/airflow/issues/22608/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/airflow/issues/22608/timeline",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/apache/airflow/issues/22607",
        "repository_url": "https://api.github.com/repos/apache/airflow",
        "labels_url": "https://api.github.com/repos/apache/airflow/issues/22607/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/airflow/issues/22607/comments",
        "events_url": "https://api.github.com/repos/apache/airflow/issues/22607/events",
        "html_url": "https://github.com/apache/airflow/pull/22607",
        "id": 1185467176,
        "node_id": "PR_kwDOAgUK2841Qufk",
        "number": 22607,
        "title": "Enable use of custom conn extra fields without prefix",
        "user": {
            "login": "dstandish",
            "id": 15932138,
            "node_id": "MDQ6VXNlcjE1OTMyMTM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/15932138?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dstandish",
            "html_url": "https://github.com/dstandish",
            "followers_url": "https://api.github.com/users/dstandish/followers",
            "following_url": "https://api.github.com/users/dstandish/following{/other_user}",
            "gists_url": "https://api.github.com/users/dstandish/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dstandish/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dstandish/subscriptions",
            "organizations_url": "https://api.github.com/users/dstandish/orgs",
            "repos_url": "https://api.github.com/users/dstandish/repos",
            "events_url": "https://api.github.com/users/dstandish/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dstandish/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1545584474,
                "node_id": "MDU6TGFiZWwxNTQ1NTg0NDc0",
                "url": "https://api.github.com/repos/apache/airflow/labels/area:webserver",
                "name": "area:webserver",
                "color": "a9db3f",
                "default": false,
                "description": "Webserver related Issues"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-03-29T22:01:44Z",
        "updated_at": "2022-03-30T16:26:26Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/apache/airflow/pulls/22607",
            "html_url": "https://github.com/apache/airflow/pull/22607",
            "diff_url": "https://github.com/apache/airflow/pull/22607.diff",
            "patch_url": "https://github.com/apache/airflow/pull/22607.patch",
            "merged_at": null
        },
        "body": "### Overview\r\n\r\nHistorically when adding custom extra fields we had to store them in the `extra` json field as `extra__conn_type__field_name`.\r\n\r\nThis was somewhat cumbersome.  And it meant that when adding them as UI form fields, you had to make a change to the structure of the `extra` schema.\r\n\r\nWith this PR, we do away with the requirement of this prefix.  In effect, we separate the field \"key\" -- how it is identified internally in the model and form -- with \"name\", how it is identified in the `extra` json field.\r\n\r\nThis leaves us with a backward compatible change, so that we can update hook classes (or class families) one at a time.\r\n\r\n### Notes on behavior\r\n\r\nFor hooks which have not updated `get_connection_form_widgets` to remove the prefixes, there's no change in behavior.\r\n\r\nBut for hooks that _have_, then in the Web UI, when reading the connection (e.g. for an update) Airflow will check first for non-prefixed value then if it doesn't find it, it will check for prefixed value.\r\n\r\nOn save, it will always store in the manner defined by `get_connection_form_widgets`.  In the case where the `extra` field was defined pre-hook-upgrade, I leave the old (prefixed) value alone, so as to be non-destructive.  However I can see an argument for removing the old vaule.\r\n\r\nWhen we update hooks to remove the prefix, we need to add a `_get_field` method to handle the extra lookup properly.  Considering what happens with new hook and old airflow, we either have to bump min airflow version, or add Airflow-backcompat logic to re-prefix when using with an old version of Airflow.  And I suppose this can be decided on a case-by-case basis with each provider.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/apache/airflow/issues/22607/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/airflow/issues/22607/timeline",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/apache/airflow/issues/22606",
        "repository_url": "https://api.github.com/repos/apache/airflow",
        "labels_url": "https://api.github.com/repos/apache/airflow/issues/22606/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/airflow/issues/22606/comments",
        "events_url": "https://api.github.com/repos/apache/airflow/issues/22606/events",
        "html_url": "https://github.com/apache/airflow/issues/22606",
        "id": 1185453202,
        "node_id": "I_kwDOAgUK285GqJSS",
        "number": 22606,
        "title": "Jenkins JobTriggerOperator bug when polling for new build",
        "user": {
            "login": "SasanAhmadi",
            "id": 21976715,
            "node_id": "MDQ6VXNlcjIxOTc2NzE1",
            "avatar_url": "https://avatars.githubusercontent.com/u/21976715?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SasanAhmadi",
            "html_url": "https://github.com/SasanAhmadi",
            "followers_url": "https://api.github.com/users/SasanAhmadi/followers",
            "following_url": "https://api.github.com/users/SasanAhmadi/following{/other_user}",
            "gists_url": "https://api.github.com/users/SasanAhmadi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SasanAhmadi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SasanAhmadi/subscriptions",
            "organizations_url": "https://api.github.com/users/SasanAhmadi/orgs",
            "repos_url": "https://api.github.com/users/SasanAhmadi/repos",
            "events_url": "https://api.github.com/users/SasanAhmadi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SasanAhmadi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 199168283,
                "node_id": "MDU6TGFiZWwxOTkxNjgyODM=",
                "url": "https://api.github.com/repos/apache/airflow/labels/kind:bug",
                "name": "kind:bug",
                "color": "fc2929",
                "default": false,
                "description": "This is a clearly a bug"
            },
            {
                "id": 1697155831,
                "node_id": "MDU6TGFiZWwxNjk3MTU1ODMx",
                "url": "https://api.github.com/repos/apache/airflow/labels/area:providers",
                "name": "area:providers",
                "color": "d4c5f9",
                "default": false,
                "description": ""
            },
            {
                "id": 1970155342,
                "node_id": "MDU6TGFiZWwxOTcwMTU1MzQy",
                "url": "https://api.github.com/repos/apache/airflow/labels/good%20first%20issue",
                "name": "good first issue",
                "color": "6cdb53",
                "default": true,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "SasanAhmadi",
            "id": 21976715,
            "node_id": "MDQ6VXNlcjIxOTc2NzE1",
            "avatar_url": "https://avatars.githubusercontent.com/u/21976715?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SasanAhmadi",
            "html_url": "https://github.com/SasanAhmadi",
            "followers_url": "https://api.github.com/users/SasanAhmadi/followers",
            "following_url": "https://api.github.com/users/SasanAhmadi/following{/other_user}",
            "gists_url": "https://api.github.com/users/SasanAhmadi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SasanAhmadi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SasanAhmadi/subscriptions",
            "organizations_url": "https://api.github.com/users/SasanAhmadi/orgs",
            "repos_url": "https://api.github.com/users/SasanAhmadi/repos",
            "events_url": "https://api.github.com/users/SasanAhmadi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SasanAhmadi/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "SasanAhmadi",
                "id": 21976715,
                "node_id": "MDQ6VXNlcjIxOTc2NzE1",
                "avatar_url": "https://avatars.githubusercontent.com/u/21976715?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/SasanAhmadi",
                "html_url": "https://github.com/SasanAhmadi",
                "followers_url": "https://api.github.com/users/SasanAhmadi/followers",
                "following_url": "https://api.github.com/users/SasanAhmadi/following{/other_user}",
                "gists_url": "https://api.github.com/users/SasanAhmadi/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/SasanAhmadi/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/SasanAhmadi/subscriptions",
                "organizations_url": "https://api.github.com/users/SasanAhmadi/orgs",
                "repos_url": "https://api.github.com/users/SasanAhmadi/repos",
                "events_url": "https://api.github.com/users/SasanAhmadi/events{/privacy}",
                "received_events_url": "https://api.github.com/users/SasanAhmadi/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-03-29T21:52:20Z",
        "updated_at": "2022-03-29T21:53:47Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Apache Airflow Provider(s)\n\njenkins\n\n### Versions of Apache Airflow Providers\n\n_No response_\n\n### Apache Airflow version\n\n2.2.3\n\n### Operating System\n\nmacOs Monterey 12.0.1\n\n### Deployment\n\nOfficial Apache Airflow Helm Chart\n\n### Deployment details\n\nNo specific details \n\n### What happened\n\nWhen using the JenkinsJobTriggerOperator there is a polling mechanism to check the built job to return the newly created job number. There is a retry mechanism if it fails to poll it retries couple of times to get the built job number. It is possible though the response when returned does not contain the exact info we are looking for, therefore the part of code which is checking the details of the `executable` key in the body of the jenkins response fail, due to an iteration code over the content of that key which could be None. \r\nIt is a faulty code and will result in multiple job creation which could happen in case of a retry on this operator. \r\n\r\n```\r\n[2022-03-29, 11:51:40 PDT] {taskinstance.py:1259} INFO - Executing <Task(JenkinsJobTriggerOperator): trigger_downstream_jenkins> on 2022-03-29 17:25:00+00:00\r\n[2022-03-29, 11:51:40 PDT] {standard_task_runner.py:52} INFO - Started process 25 to run task\r\n[2022-03-29, 11:51:40 PDT] {standard_task_runner.py:76} INFO - Running: ['airflow', 'tasks', 'run', 'dag_code', 'trigger_downstream_jenkins', 'scheduled__2022-03-29T17:25:00+00:00', '--job-id', '302242', '--raw', '--subdir', 'DAGS_FOLDER/git_dags/somecode.py', '--cfg-path', '/tmp/tmp84qyueun', '--error-file', '/tmp/tmp732pjeg5']\r\n[2022-03-29, 11:51:40 PDT] {standard_task_runner.py:77} INFO - Job 302242: Subtask trigger_downstream_jenkins\r\n[2022-03-29, 11:51:40 PDT] {logging_mixin.py:109} INFO - Running <TaskInstance: code_v1trigger_downstream_jenkins scheduled__2022-03-29T17:25:00+00:00 [running]> on host codetriggerdownstreamjenkins.79586cc902e641be9e9\r\n[2022-03-29, 11:51:40 PDT] {taskinstance.py:1424} INFO - Exporting the following env vars:\r\nAIRFLOW_CTX_DAG_OWNER=data\r\nAIRFLOW_CTX_DAG_ID=Code_v1\r\nAIRFLOW_CTX_TASK_ID=trigger_downstream_jenkins\r\nAIRFLOW_CTX_EXECUTION_DATE=2022-03-29T17:25:00+00:00\r\nAIRFLOW_CTX_DAG_RUN_ID=scheduled__2022-03-29T17:25:00+00:00\r\n[2022-03-29, 11:51:40 PDT] {jenkins_job_trigger.py:182} INFO - Triggering the job/Production/Downstream Trigger - Production on the jenkins : JENKINS with the parameters : None\r\n[2022-03-29, 11:51:40 PDT] {base.py:70} INFO - Using connection to: id: JENKINS. Host: server.com, Port: 443, Schema: , Login: user, Password: ***, extra: True\r\n[2022-03-29, 11:51:40 PDT] {jenkins.py:43} INFO - Trying to connect to [https://server.com:443](https://server.com/)\r\n[2022-03-29, 11:51:40 PDT] {kerberos_.py:325} ERROR - handle_other(): Mutual authentication unavailable on 403 response\r\n[2022-03-29, 11:51:40 PDT] {jenkins_job_trigger.py:160} INFO - Polling jenkins queue at the url https://servercom/queue/item/5831525//api/json\r\n[2022-03-29, 11:51:40 PDT] {taskinstance.py:1700} ERROR - Task failed with exception\r\nTraceback (most recent call last):\r\n  File \"/opt/bitnami/airflow/venv/lib/python3.8/site-packages/airflow/models/taskinstance.py\", line 1329, in _run_raw_task\r\n    self._execute_task_with_callbacks(context)\r\n  File \"/opt/bitnami/airflow/venv/lib/python3.8/site-packages/airflow/models/taskinstance.py\", line 1455, in _execute_task_with_callbacks\r\n    result = self._execute_task(context, self.task)\r\n  File \"/opt/bitnami/airflow/venv/lib/python3.8/site-packages/airflow/models/taskinstance.py\", line 1511, in _execute_task\r\n    result = execute_callable(context=context)\r\n  File \"/opt/bitnami/airflow/venv/lib/python3.8/site-packages/airflow/providers/jenkins/operators/jenkins_job_trigger.py\", line 191, in execute\r\n    build_number = self.poll_job_in_queue(jenkins_response['headers']['Location'], jenkins_server)\r\n  File \"/opt/bitnami/airflow/venv/lib/python3.8/site-packages/airflow/providers/jenkins/operators/jenkins_job_trigger.py\", line 167, in poll_job_in_queue\r\n    if 'executable' in json_response and 'number' in json_response['executable']:\r\nTypeError: argument of type 'NoneType' is not iterable\r\n[2022-03-29, 11:51:40 PDT] {taskinstance.py:1267} INFO - Marking task as UP_FOR_RETRY. dag_id=code_v1 task_id=trigger_downstream_jenkins, execution_date=20220329T172500, start_date=20220329T185140, end_date=20220329T185140\r\n[2022-03-29, 11:51:40 PDT] {standard_task_runner.py:89} ERROR - Failed to execute job 302242 for task trigger_downstream_jenkins\r\nTraceback (most recent call last):\r\n  File \"/opt/bitnami/airflow/venv/lib/python3.8/site-packages/airflow/task/task_runner/standard_task_runner.py\", line 85, in _start_by_fork\r\n    args.func(args, dag=self.dag)\r\n  File \"/opt/bitnami/airflow/venv/lib/python3.8/site-packages/airflow/cli/cli_parser.py\", line 48, in command\r\n    return func(*args, **kwargs)\r\n  File \"/opt/bitnami/airflow/venv/lib/python3.8/site-packages/airflow/utils/cli.py\", line 92, in wrapper\r\n    return f(*args, **kwargs)\r\n  File \"/opt/bitnami/airflow/venv/lib/python3.8/site-packages/airflow/cli/commands/task_command.py\", line 298, in task_run\r\n    _run_task_by_selected_method(args, dag, ti)\r\n  File \"/opt/bitnami/airflow/venv/lib/python3.8/site-packages/airflow/cli/commands/task_command.py\", line 107, in _run_task_by_selected_method\r\n    _run_raw_task(args, ti)\r\n  File \"/opt/bitnami/airflow/venv/lib/python3.8/site-packages/airflow/cli/commands/task_command.py\", line 180, in _run_raw_task\r\n    ti._run_raw_task(\r\n  File \"/opt/bitnami/airflow/venv/lib/python3.8/site-packages/airflow/utils/session.py\", line 70, in wrapper\r\n    return func(*args, session=session, **kwargs)\r\n  File \"/opt/bitnami/airflow/venv/lib/python3.8/site-packages/airflow/models/taskinstance.py\", line 1329, in _run_raw_task\r\n    self._execute_task_with_callbacks(context)\r\n  File \"/opt/bitnami/airflow/venv/lib/python3.8/site-packages/airflow/models/taskinstance.py\", line 1455, in _execute_task_with_callbacks\r\n    result = self._execute_task(context, self.task)\r\n  File \"/opt/bitnami/airflow/venv/lib/python3.8/site-packages/airflow/models/taskinstance.py\", line 1511, in _execute_task\r\n    result = execute_callable(context=context)\r\n  File \"/opt/bitnami/airflow/venv/lib/python3.8/site-packages/airflow/providers/jenkins/operators/jenkins_job_trigger.py\", line 191, in execute\r\n    build_number = self.poll_job_in_queue(jenkins_response['headers']['Location'], jenkins_server)\r\n  File \"/opt/bitnami/airflow/venv/lib/python3.8/site-packages/airflow/providers/jenkins/operators/jenkins_job_trigger.py\", line 167, in poll_job_in_queue\r\n    if 'executable' in json_response and 'number' in json_response['executable']:\r\nTypeError: argument of type 'NoneType' is not iterable\r\n[2022-03-29, 11:51:40 PDT] {local_task_job.py:154} INFO - Task exited with return code 1\r\n[2022-03-29, 11:51:40 PDT] {local_task_job.py:264} INFO - 0 downstream tasks scheduled from follow-on schedule check\r\n```\n\n### What you think should happen instead\n\nThere should be an extra check to prevent the iteration over possible None type returned in the `executable` key from the body of the response from jenkins poll request.\r\n\r\nThis is the current code:\r\nhttps://github.com/apache/airflow/blob/b0b69f3ea7186e76a04b733022b437b57a087a2e/airflow/providers/jenkins/operators/jenkins_job_trigger.py#L161\r\n\r\nIt should be updated to this code: \r\n```python\r\nif 'executable' in json_response and json_response['executable'] is not None and 'number' in json_response['executable']:\r\n```\n\n### How to reproduce\n\nDuring calls to poling to jenkins it is happening randomly, it might not happen at all. It depends on the jenkins performance as well, how fast it could build the jobs might prevent this. \n\n### Anything else\n\nNo further info.\n\n### Are you willing to submit PR?\n\n- [X] Yes I am willing to submit a PR!\n\n### Code of Conduct\n\n- [X] I agree to follow this project's [Code of Conduct](https://github.com/apache/airflow/blob/main/CODE_OF_CONDUCT.md)\n",
        "reactions": {
            "url": "https://api.github.com/repos/apache/airflow/issues/22606/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/airflow/issues/22606/timeline",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/apache/airflow/issues/22590",
        "repository_url": "https://api.github.com/repos/apache/airflow",
        "labels_url": "https://api.github.com/repos/apache/airflow/issues/22590/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/airflow/issues/22590/comments",
        "events_url": "https://api.github.com/repos/apache/airflow/issues/22590/events",
        "html_url": "https://github.com/apache/airflow/issues/22590",
        "id": 1185036603,
        "node_id": "I_kwDOAgUK285Gojk7",
        "number": 22590,
        "title": "Add extraManifests option to helm chart",
        "user": {
            "login": "monti-python",
            "id": 32843378,
            "node_id": "MDQ6VXNlcjMyODQzMzc4",
            "avatar_url": "https://avatars.githubusercontent.com/u/32843378?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/monti-python",
            "html_url": "https://github.com/monti-python",
            "followers_url": "https://api.github.com/users/monti-python/followers",
            "following_url": "https://api.github.com/users/monti-python/following{/other_user}",
            "gists_url": "https://api.github.com/users/monti-python/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/monti-python/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/monti-python/subscriptions",
            "organizations_url": "https://api.github.com/users/monti-python/orgs",
            "repos_url": "https://api.github.com/users/monti-python/repos",
            "events_url": "https://api.github.com/users/monti-python/events{/privacy}",
            "received_events_url": "https://api.github.com/users/monti-python/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1923278889,
                "node_id": "MDU6TGFiZWwxOTIzMjc4ODg5",
                "url": "https://api.github.com/repos/apache/airflow/labels/kind:feature",
                "name": "kind:feature",
                "color": "5319e7",
                "default": false,
                "description": "Feature Requests"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-03-29T15:21:35Z",
        "updated_at": "2022-03-29T15:21:35Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Description\n\nDuring the lifecycle of a Helm release, very often we need to create custom additional kubernetes resources that are managed separately using `kubectl apply -f myresources.yml`. \r\n\r\nIt would come in handy if there was an `extraManifests` section on the helm chart so that these custom additional resources can be managed along with the chart. \r\n\r\nThe idea is not mine, but is present in another airflow chart that I've used in the past: https://github.com/airflow-helm/charts/blob/1bc18527370706395a26d8dc8e9fd6600b2ac6a6/charts/airflow/values.yaml#L1351\r\n\n\n### Use case/motivation\n\nThere is an `extraManifest` section within the helm chart's values to include custom kubernetes resources\n\n### Related issues\n\n_No response_\n\n### Are you willing to submit a PR?\n\n- [X] Yes I am willing to submit a PR!\n\n### Code of Conduct\n\n- [X] I agree to follow this project's [Code of Conduct](https://github.com/apache/airflow/blob/main/CODE_OF_CONDUCT.md)\n",
        "reactions": {
            "url": "https://api.github.com/repos/apache/airflow/issues/22590/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/airflow/issues/22590/timeline",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/apache/airflow/issues/22588",
        "repository_url": "https://api.github.com/repos/apache/airflow",
        "labels_url": "https://api.github.com/repos/apache/airflow/issues/22588/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/airflow/issues/22588/comments",
        "events_url": "https://api.github.com/repos/apache/airflow/issues/22588/events",
        "html_url": "https://github.com/apache/airflow/pull/22588",
        "id": 1184983170,
        "node_id": "PR_kwDOAgUK2841PHjA",
        "number": 22588,
        "title": "Print configuration on scheduler startup.",
        "user": {
            "login": "tirkarthi",
            "id": 3972343,
            "node_id": "MDQ6VXNlcjM5NzIzNDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3972343?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tirkarthi",
            "html_url": "https://github.com/tirkarthi",
            "followers_url": "https://api.github.com/users/tirkarthi/followers",
            "following_url": "https://api.github.com/users/tirkarthi/following{/other_user}",
            "gists_url": "https://api.github.com/users/tirkarthi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tirkarthi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tirkarthi/subscriptions",
            "organizations_url": "https://api.github.com/users/tirkarthi/orgs",
            "repos_url": "https://api.github.com/users/tirkarthi/repos",
            "events_url": "https://api.github.com/users/tirkarthi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tirkarthi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1672279581,
                "node_id": "MDU6TGFiZWwxNjcyMjc5NTgx",
                "url": "https://api.github.com/repos/apache/airflow/labels/area:CLI",
                "name": "area:CLI",
                "color": "e99695",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2022-03-29T14:43:56Z",
        "updated_at": "2022-03-31T19:42:03Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/apache/airflow/pulls/22588",
            "html_url": "https://github.com/apache/airflow/pull/22588",
            "diff_url": "https://github.com/apache/airflow/pull/22588.diff",
            "patch_url": "https://github.com/apache/airflow/pull/22588.patch",
            "merged_at": null
        },
        "body": "This PR prints the configuration used during scheduler startup. The sensitive values are masked so that they are not captured by mistake in log files.\r\n\r\ncloses: #22141\r\nrelated: #22141\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/apache/airflow/issues/22588/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/airflow/issues/22588/timeline",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/apache/airflow/issues/22587",
        "repository_url": "https://api.github.com/repos/apache/airflow",
        "labels_url": "https://api.github.com/repos/apache/airflow/issues/22587/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/airflow/issues/22587/comments",
        "events_url": "https://api.github.com/repos/apache/airflow/issues/22587/events",
        "html_url": "https://github.com/apache/airflow/pull/22587",
        "id": 1184895480,
        "node_id": "PR_kwDOAgUK2841O063",
        "number": 22587,
        "title": "Upgrade to FAB 4.0",
        "user": {
            "login": "potiuk",
            "id": 595491,
            "node_id": "MDQ6VXNlcjU5NTQ5MQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/595491?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/potiuk",
            "html_url": "https://github.com/potiuk",
            "followers_url": "https://api.github.com/users/potiuk/followers",
            "following_url": "https://api.github.com/users/potiuk/following{/other_user}",
            "gists_url": "https://api.github.com/users/potiuk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/potiuk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/potiuk/subscriptions",
            "organizations_url": "https://api.github.com/users/potiuk/orgs",
            "repos_url": "https://api.github.com/users/potiuk/repos",
            "events_url": "https://api.github.com/users/potiuk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/potiuk/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1769003317,
                "node_id": "MDU6TGFiZWwxNzY5MDAzMzE3",
                "url": "https://api.github.com/repos/apache/airflow/labels/area:dev-tools",
                "name": "area:dev-tools",
                "color": "ededed",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-03-29T13:42:15Z",
        "updated_at": "2022-03-31T11:56:46Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/apache/airflow/pulls/22587",
            "html_url": "https://github.com/apache/airflow/pull/22587",
            "diff_url": "https://github.com/apache/airflow/pull/22587.diff",
            "patch_url": "https://github.com/apache/airflow/pull/22587.patch",
            "merged_at": null
        },
        "body": "Flask Application Builder 4.0 unblocked many of our dependencies.\r\nThis PR updates to FAB 4.0 and related libraries.\r\n\r\nCloses: #22397\r\n\r\n<!--\r\nThank you for contributing! Please make sure that your code changes\r\nare covered with tests. And in case of new features or big changes\r\nremember to adjust the documentation.\r\n\r\nFeel free to ping committers for the review!\r\n\r\nIn case of existing issue, reference it using one of the following:\r\n\r\ncloses: #ISSUE\r\nrelated: #ISSUE\r\n\r\nHow to write a good git commit message:\r\nhttp://chris.beams.io/posts/git-commit/\r\n-->\r\n\r\n---\r\n**^ Add meaningful description above**\r\n\r\nRead the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/CONTRIBUTING.rst#pull-request-guidelines)** for more information.\r\nIn case of fundamental code change, Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvements+Proposals)) is needed.\r\nIn case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).\r\nIn case of backwards incompatible changes please leave a note in [UPDATING.md](https://github.com/apache/airflow/blob/main/UPDATING.md).\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/apache/airflow/issues/22587/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/airflow/issues/22587/timeline",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/apache/airflow/issues/22583",
        "repository_url": "https://api.github.com/repos/apache/airflow",
        "labels_url": "https://api.github.com/repos/apache/airflow/issues/22583/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/airflow/issues/22583/comments",
        "events_url": "https://api.github.com/repos/apache/airflow/issues/22583/events",
        "html_url": "https://github.com/apache/airflow/pull/22583",
        "id": 1184629183,
        "node_id": "PR_kwDOAgUK2841N8B0",
        "number": 22583,
        "title": "Consider mapped upstream in TriggerRuleDep",
        "user": {
            "login": "uranusjr",
            "id": 605277,
            "node_id": "MDQ6VXNlcjYwNTI3Nw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/605277?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/uranusjr",
            "html_url": "https://github.com/uranusjr",
            "followers_url": "https://api.github.com/users/uranusjr/followers",
            "following_url": "https://api.github.com/users/uranusjr/following{/other_user}",
            "gists_url": "https://api.github.com/users/uranusjr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/uranusjr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/uranusjr/subscriptions",
            "organizations_url": "https://api.github.com/users/uranusjr/orgs",
            "repos_url": "https://api.github.com/users/uranusjr/repos",
            "events_url": "https://api.github.com/users/uranusjr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/uranusjr/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 3696740434,
                "node_id": "LA_kwDOAgUK287cV8hS",
                "url": "https://api.github.com/repos/apache/airflow/labels/AIP-42",
                "name": "AIP-42",
                "color": "390869",
                "default": false,
                "description": "Dynamic Task Mapping"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-03-29T10:10:33Z",
        "updated_at": "2022-03-31T16:46:23Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/apache/airflow/pulls/22583",
            "html_url": "https://github.com/apache/airflow/pull/22583",
            "diff_url": "https://github.com/apache/airflow/pull/22583.diff",
            "patch_url": "https://github.com/apache/airflow/pull/22583.patch",
            "merged_at": null
        },
        "body": "This is needed to ensure all mapped upstream task instances are depended on by a downstream, instead of just one of them signifying the entire task as \"done\".\r\n\r\n~Does not work yet. This depends on correct task-unmapping behaviour implemented in #22396. I also want to add some more asserts to make sure the downstream can pull all the values from the mapped upstream, but that depends on #22609.~ Ready!",
        "reactions": {
            "url": "https://api.github.com/repos/apache/airflow/issues/22583/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/airflow/issues/22583/timeline",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/apache/airflow/issues/22580",
        "repository_url": "https://api.github.com/repos/apache/airflow",
        "labels_url": "https://api.github.com/repos/apache/airflow/issues/22580/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/airflow/issues/22580/comments",
        "events_url": "https://api.github.com/repos/apache/airflow/issues/22580/events",
        "html_url": "https://github.com/apache/airflow/pull/22580",
        "id": 1184315209,
        "node_id": "PR_kwDOAgUK2841M5qu",
        "number": 22580,
        "title": "Add variable description",
        "user": {
            "login": "nitinmahawadiwar",
            "id": 10176971,
            "node_id": "MDQ6VXNlcjEwMTc2OTcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/10176971?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nitinmahawadiwar",
            "html_url": "https://github.com/nitinmahawadiwar",
            "followers_url": "https://api.github.com/users/nitinmahawadiwar/followers",
            "following_url": "https://api.github.com/users/nitinmahawadiwar/following{/other_user}",
            "gists_url": "https://api.github.com/users/nitinmahawadiwar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nitinmahawadiwar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nitinmahawadiwar/subscriptions",
            "organizations_url": "https://api.github.com/users/nitinmahawadiwar/orgs",
            "repos_url": "https://api.github.com/users/nitinmahawadiwar/repos",
            "events_url": "https://api.github.com/users/nitinmahawadiwar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nitinmahawadiwar/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1937475224,
                "node_id": "MDU6TGFiZWwxOTM3NDc1MjI0",
                "url": "https://api.github.com/repos/apache/airflow/labels/area:API",
                "name": "area:API",
                "color": "efe07c",
                "default": false,
                "description": "Airflow's REST/HTTP API"
            },
            {
                "id": 2451280808,
                "node_id": "MDU6TGFiZWwyNDUxMjgwODA4",
                "url": "https://api.github.com/repos/apache/airflow/labels/full%20tests%20needed",
                "name": "full tests needed",
                "color": "e0c514",
                "default": false,
                "description": "We need to run full set of tests for this PR to merge"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2022-03-29T05:12:55Z",
        "updated_at": "2022-03-31T07:28:20Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/apache/airflow/pulls/22580",
            "html_url": "https://github.com/apache/airflow/pull/22580",
            "diff_url": "https://github.com/apache/airflow/pull/22580.diff",
            "patch_url": "https://github.com/apache/airflow/pull/22580.patch",
            "merged_at": null
        },
        "body": "<!--\r\nThank you for contributing! Please make sure that your code changes\r\nare covered with tests. And in case of new features or big changes\r\nremember to adjust the documentation.\r\n\r\nFeel free to ping committers for the review!\r\n\r\nIn case of existing issue, reference it using one of the following:\r\n\r\ncloses: #ISSUE\r\nrelated: #22007 \r\n\r\nHow to write a good git commit message:\r\nhttp://chris.beams.io/posts/git-commit/\r\n-->\r\nReturning description field  for GET a)variables & b) variable API. \r\nSWAGGER documentation updated.\r\nTest cases are incomplete, not able to understand the overall flow for test cases. will update them upon review.\r\n\r\n---\r\n**^ Add meaningful description above**\r\n\r\nRead the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/CONTRIBUTING.rst#pull-request-guidelines)** for more information.\r\nIn case of fundamental code change, Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvements+Proposals)) is needed.\r\nIn case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).\r\nIn case of backwards incompatible changes please leave a note in [UPDATING.md](https://github.com/apache/airflow/blob/main/UPDATING.md).\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/apache/airflow/issues/22580/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/airflow/issues/22580/timeline",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/apache/airflow/issues/22576",
        "repository_url": "https://api.github.com/repos/apache/airflow",
        "labels_url": "https://api.github.com/repos/apache/airflow/issues/22576/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/airflow/issues/22576/comments",
        "events_url": "https://api.github.com/repos/apache/airflow/issues/22576/events",
        "html_url": "https://github.com/apache/airflow/issues/22576",
        "id": 1183927877,
        "node_id": "I_kwDOAgUK285GkU5F",
        "number": 22576,
        "title": "SFTP connection hook not working when using inline Ed25519 key from Airflow connection",
        "user": {
            "login": "brettplarson",
            "id": 33815371,
            "node_id": "MDQ6VXNlcjMzODE1Mzcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/33815371?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brettplarson",
            "html_url": "https://github.com/brettplarson",
            "followers_url": "https://api.github.com/users/brettplarson/followers",
            "following_url": "https://api.github.com/users/brettplarson/following{/other_user}",
            "gists_url": "https://api.github.com/users/brettplarson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brettplarson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brettplarson/subscriptions",
            "organizations_url": "https://api.github.com/users/brettplarson/orgs",
            "repos_url": "https://api.github.com/users/brettplarson/repos",
            "events_url": "https://api.github.com/users/brettplarson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brettplarson/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1923278889,
                "node_id": "MDU6TGFiZWwxOTIzMjc4ODg5",
                "url": "https://api.github.com/repos/apache/airflow/labels/kind:feature",
                "name": "kind:feature",
                "color": "5319e7",
                "default": false,
                "description": "Feature Requests"
            },
            {
                "id": 1970155342,
                "node_id": "MDU6TGFiZWwxOTcwMTU1MzQy",
                "url": "https://api.github.com/repos/apache/airflow/labels/good%20first%20issue",
                "name": "good first issue",
                "color": "6cdb53",
                "default": true,
                "description": ""
            },
            {
                "id": 2500918862,
                "node_id": "MDU6TGFiZWwyNTAwOTE4ODYy",
                "url": "https://api.github.com/repos/apache/airflow/labels/area:core",
                "name": "area:core",
                "color": "d4c5f9",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-03-28T20:06:31Z",
        "updated_at": "2022-03-28T20:20:46Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Apache Airflow version\n\n2.2.4 (latest released)\n\n### What happened\n\nI am trying to create an SFTP connection which includes the extra params of `private_key` which includes a txt output of my private key. Ie: `{\"look_for_keys\": \"false\", \"no_host_key_check\": \"true\", \"private_key\": \"-----BEGIN OPENSSH PRIVATE KEY-----\r\nkeygoeshere==\\n----END OPENSSH PRIVATE KEY-----\"}`\r\n\r\nWhen I test the connection I get the error `expected str, bytes or os.PathLike object, not Ed25519Key`\r\n\r\nWhen I try and use this connection I get the following error:\r\n\r\n```\r\n  File \"/home/airflow/.local/lib/python3.7/site-packages/airflow/providers/sftp/hooks/sftp.py\", line 208, in list_directory\r\n    conn = self.get_conn()\r\n  File \"/home/airflow/.local/lib/python3.7/site-packages/tenacity/__init__.py\", line 324, in wrapped_f\r\n    return self(f, *args, **kw)\r\n  File \"/home/airflow/.local/lib/python3.7/site-packages/tenacity/__init__.py\", line 404, in __call__\r\n    do = self.iter(retry_state=retry_state)\r\n  File \"/home/airflow/.local/lib/python3.7/site-packages/tenacity/__init__.py\", line 349, in iter\r\n    return fut.result()\r\n  File \"/usr/local/lib/python3.7/concurrent/futures/_base.py\", line 428, in result\r\n    return self.__get_result()\r\n  File \"/usr/local/lib/python3.7/concurrent/futures/_base.py\", line 384, in __get_result\r\n    raise self._exception\r\n  File \"/home/airflow/.local/lib/python3.7/site-packages/tenacity/__init__.py\", line 407, in __call__\r\n    result = fn(*args, **kwargs)\r\n  File \"/home/airflow/.local/lib/python3.7/site-packages/airflow/providers/sftp/hooks/sftp.py\", line 172, in get_conn\r\n    self.conn = pysftp.Connection(**conn_params)\r\n  File \"/home/airflow/.local/lib/python3.7/site-packages/pysftp/__init__.py\", line 142, in __init__\r\n    self._set_authentication(password, private_key, private_key_pass)\r\n  File \"/home/airflow/.local/lib/python3.7/site-packages/pysftp/__init__.py\", line 164, in _set_authentication\r\n    private_key_file = os.path.expanduser(private_key)\r\n  File \"/usr/local/lib/python3.7/posixpath.py\", line 235, in expanduser\r\n    path = os.fspath(path)\r\nTypeError: expected str, bytes or os.PathLike object, not Ed25519Key\r\n```\r\n\r\nThis only seems to happen for Ed25519 keys. RSA worked fine!\n\n### What you think should happen instead\n\nIt should work, I don't specify this as an `Ed25519Key` I think the connection manager code is saving it as a paraminko key but when testing / using it as a DAG it is expecting a string!\r\n\r\nI don't see why you can't save it as a paraminko key and use it in the connection.\r\n\r\nAlso it seems to work fine when using RSA keys, but super short keys are cooler!\n\n### How to reproduce\n\nCreate a new Ed25519 ssh key and a new SFTP connection and copy the following into the extra field:\r\n\r\n{\"look_for_keys\": \"false\", \"no_host_key_check\": \"true\", \"private_key\": \"-----BEGIN RSA PRIVATE KEY----- Ed25519_key_goes_here -----END RSA PRIVATE KEY-----\"}\r\n\r\nTest should yield the failure `TypeError: expected str, bytes or os.PathLike object, not Ed25519Key`\n\n### Operating System\n\nRHEL 7.9 on host OS and Docker image for the rest.\n\n### Versions of Apache Airflow Providers\n\napache-airflow-providers-amazon==3.0.0\r\napache-airflow-providers-celery==2.1.0\r\napache-airflow-providers-cncf-kubernetes==3.0.2\r\napache-airflow-providers-docker==2.4.1\r\napache-airflow-providers-elasticsearch==2.2.0\r\napache-airflow-providers-ftp==2.0.1\r\napache-airflow-providers-google==6.4.0\r\napache-airflow-providers-grpc==2.0.1\r\napache-airflow-providers-hashicorp==2.1.1\r\napache-airflow-providers-http==2.0.3\r\napache-airflow-providers-imap==2.2.0\r\napache-airflow-providers-microsoft-azure==3.6.0\r\napache-airflow-providers-mysql==2.2.0\r\napache-airflow-providers-odbc==2.0.1\r\napache-airflow-providers-postgres==3.0.0\r\napache-airflow-providers-redis==2.0.1\r\napache-airflow-providers-sendgrid==2.0.1\r\napache-airflow-providers-sftp==2.4.1\r\napache-airflow-providers-slack==4.2.0\r\napache-airflow-providers-sqlite==2.1.0\r\napache-airflow-providers-ssh==2.4.0\n\n### Deployment\n\nOther Docker-based deployment\n\n### Deployment details\n\nDocker image of 2.2.4 release with VERY minimal changes. (wget, curl, etc added)\n\n### Anything else\n\nRSA seems to work fine... only after a few hours of troubleshooting and writing this ticket did I learn that. 😿\n\n### Are you willing to submit PR?\n\n- [ ] Yes I am willing to submit a PR!\n\n### Code of Conduct\n\n- [X] I agree to follow this project's [Code of Conduct](https://github.com/apache/airflow/blob/main/CODE_OF_CONDUCT.md)\n",
        "reactions": {
            "url": "https://api.github.com/repos/apache/airflow/issues/22576/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/airflow/issues/22576/timeline",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/apache/airflow/issues/22562",
        "repository_url": "https://api.github.com/repos/apache/airflow",
        "labels_url": "https://api.github.com/repos/apache/airflow/issues/22562/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/airflow/issues/22562/comments",
        "events_url": "https://api.github.com/repos/apache/airflow/issues/22562/events",
        "html_url": "https://github.com/apache/airflow/pull/22562",
        "id": 1182985951,
        "node_id": "PR_kwDOAgUK2841IfPr",
        "number": 22562,
        "title": "Adding sensor decorator",
        "user": {
            "login": "mingshi-wang",
            "id": 80255099,
            "node_id": "MDQ6VXNlcjgwMjU1MDk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/80255099?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mingshi-wang",
            "html_url": "https://github.com/mingshi-wang",
            "followers_url": "https://api.github.com/users/mingshi-wang/followers",
            "following_url": "https://api.github.com/users/mingshi-wang/following{/other_user}",
            "gists_url": "https://api.github.com/users/mingshi-wang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mingshi-wang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mingshi-wang/subscriptions",
            "organizations_url": "https://api.github.com/users/mingshi-wang/orgs",
            "repos_url": "https://api.github.com/users/mingshi-wang/repos",
            "events_url": "https://api.github.com/users/mingshi-wang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mingshi-wang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1993586993,
                "node_id": "MDU6TGFiZWwxOTkzNTg2OTkz",
                "url": "https://api.github.com/repos/apache/airflow/labels/kind:documentation",
                "name": "kind:documentation",
                "color": "0030b5",
                "default": false,
                "description": ""
            },
            {
                "id": 2451280808,
                "node_id": "MDU6TGFiZWwyNDUxMjgwODA4",
                "url": "https://api.github.com/repos/apache/airflow/labels/full%20tests%20needed",
                "name": "full tests needed",
                "color": "e0c514",
                "default": false,
                "description": "We need to run full set of tests for this PR to merge"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2022-03-28T07:02:46Z",
        "updated_at": "2022-03-31T17:36:17Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/apache/airflow/pulls/22562",
            "html_url": "https://github.com/apache/airflow/pull/22562",
            "diff_url": "https://github.com/apache/airflow/pull/22562.diff",
            "patch_url": "https://github.com/apache/airflow/pull/22562.patch",
            "merged_at": null
        },
        "body": "<!--\r\nThank you for contributing! Please make sure that your code changes\r\nare covered with tests. And in case of new features or big changes\r\nremember to adjust the documentation.\r\n\r\nFeel free to ping committers for the review!\r\n\r\nIn case of existing issue, reference it using one of the following:\r\n\r\ncloses: #ISSUE\r\nrelated: #ISSUE\r\n\r\nHow to write a good git commit message:\r\nhttp://chris.beams.io/posts/git-commit/\r\n-->\r\nAdded the @task.sensor decorator to convert a Python function to an instance of the BaseSensorOperator. Example usage of the decorator is:\r\n\r\n```\r\n@task.sensor(poke_interval=60, timeout=3600, mode=\"poke\")\r\ndef f() -> PokeReturnValue:\r\n    # implement the condition \r\n    condition_met = ...\r\n    operator_return_value = ...\r\n    return PokeReturnValue(is_done=condition_met, xcom_value=operator_return_value)\r\n\r\n```\r\n\r\ncloses: #20323\r\n\r\n---\r\n**^ Add meaningful description above**\r\n\r\nRead the **[Pull Request Guidelines](https://github.com/apache/airflow/blob/main/CONTRIBUTING.rst#pull-request-guidelines)** for more information.\r\nIn case of fundamental code change, Airflow Improvement Proposal ([AIP](https://cwiki.apache.org/confluence/display/AIRFLOW/Airflow+Improvements+Proposals)) is needed.\r\nIn case of a new dependency, check compliance with the [ASF 3rd Party License Policy](https://www.apache.org/legal/resolved.html#category-x).\r\nIn case of backwards incompatible changes please leave a note in [UPDATING.md](https://github.com/apache/airflow/blob/main/UPDATING.md).\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/apache/airflow/issues/22562/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/airflow/issues/22562/timeline",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/apache/airflow/issues/22561",
        "repository_url": "https://api.github.com/repos/apache/airflow",
        "labels_url": "https://api.github.com/repos/apache/airflow/issues/22561/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/airflow/issues/22561/comments",
        "events_url": "https://api.github.com/repos/apache/airflow/issues/22561/events",
        "html_url": "https://github.com/apache/airflow/issues/22561",
        "id": 1182840523,
        "node_id": "I_kwDOAgUK285GgLbL",
        "number": 22561,
        "title": "Mapped task is not expanded when mapped against a literal",
        "user": {
            "login": "MatrixManAtYrService",
            "id": 5834582,
            "node_id": "MDQ6VXNlcjU4MzQ1ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5834582?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MatrixManAtYrService",
            "html_url": "https://github.com/MatrixManAtYrService",
            "followers_url": "https://api.github.com/users/MatrixManAtYrService/followers",
            "following_url": "https://api.github.com/users/MatrixManAtYrService/following{/other_user}",
            "gists_url": "https://api.github.com/users/MatrixManAtYrService/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MatrixManAtYrService/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MatrixManAtYrService/subscriptions",
            "organizations_url": "https://api.github.com/users/MatrixManAtYrService/orgs",
            "repos_url": "https://api.github.com/users/MatrixManAtYrService/repos",
            "events_url": "https://api.github.com/users/MatrixManAtYrService/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MatrixManAtYrService/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 199168283,
                "node_id": "MDU6TGFiZWwxOTkxNjgyODM=",
                "url": "https://api.github.com/repos/apache/airflow/labels/kind:bug",
                "name": "kind:bug",
                "color": "fc2929",
                "default": false,
                "description": "This is a clearly a bug"
            },
            {
                "id": 2500918862,
                "node_id": "MDU6TGFiZWwyNTAwOTE4ODYy",
                "url": "https://api.github.com/repos/apache/airflow/labels/area:core",
                "name": "area:core",
                "color": "d4c5f9",
                "default": false,
                "description": ""
            },
            {
                "id": 3696740434,
                "node_id": "LA_kwDOAgUK287cV8hS",
                "url": "https://api.github.com/repos/apache/airflow/labels/AIP-42",
                "name": "AIP-42",
                "color": "390869",
                "default": false,
                "description": "Dynamic Task Mapping"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "ashb",
            "id": 34150,
            "node_id": "MDQ6VXNlcjM0MTUw",
            "avatar_url": "https://avatars.githubusercontent.com/u/34150?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ashb",
            "html_url": "https://github.com/ashb",
            "followers_url": "https://api.github.com/users/ashb/followers",
            "following_url": "https://api.github.com/users/ashb/following{/other_user}",
            "gists_url": "https://api.github.com/users/ashb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ashb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ashb/subscriptions",
            "organizations_url": "https://api.github.com/users/ashb/orgs",
            "repos_url": "https://api.github.com/users/ashb/repos",
            "events_url": "https://api.github.com/users/ashb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ashb/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "ashb",
                "id": 34150,
                "node_id": "MDQ6VXNlcjM0MTUw",
                "avatar_url": "https://avatars.githubusercontent.com/u/34150?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ashb",
                "html_url": "https://github.com/ashb",
                "followers_url": "https://api.github.com/users/ashb/followers",
                "following_url": "https://api.github.com/users/ashb/following{/other_user}",
                "gists_url": "https://api.github.com/users/ashb/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ashb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ashb/subscriptions",
                "organizations_url": "https://api.github.com/users/ashb/orgs",
                "repos_url": "https://api.github.com/users/ashb/repos",
                "events_url": "https://api.github.com/users/ashb/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ashb/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": {
            "url": "https://api.github.com/repos/apache/airflow/milestones/36",
            "html_url": "https://github.com/apache/airflow/milestone/36",
            "labels_url": "https://api.github.com/repos/apache/airflow/milestones/36/labels",
            "id": 6797936,
            "node_id": "MDk6TWlsZXN0b25lNjc5NzkzNg==",
            "number": 36,
            "title": "Airflow 2.3.0",
            "description": "",
            "creator": {
                "login": "ashb",
                "id": 34150,
                "node_id": "MDQ6VXNlcjM0MTUw",
                "avatar_url": "https://avatars.githubusercontent.com/u/34150?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ashb",
                "html_url": "https://github.com/ashb",
                "followers_url": "https://api.github.com/users/ashb/followers",
                "following_url": "https://api.github.com/users/ashb/following{/other_user}",
                "gists_url": "https://api.github.com/users/ashb/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ashb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ashb/subscriptions",
                "organizations_url": "https://api.github.com/users/ashb/orgs",
                "repos_url": "https://api.github.com/users/ashb/repos",
                "events_url": "https://api.github.com/users/ashb/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ashb/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 38,
            "closed_issues": 84,
            "state": "open",
            "created_at": "2021-05-27T13:16:15Z",
            "updated_at": "2022-03-31T19:52:25Z",
            "due_on": "2022-04-14T07:00:00Z",
            "closed_at": null
        },
        "comments": 11,
        "created_at": "2022-03-28T03:56:03Z",
        "updated_at": "2022-03-31T13:06:43Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Apache Airflow version\r\n\r\nmain (development)\r\n\r\n### What happened\r\n\r\nHere's a DAG:\r\n\r\n```python3\r\n@task\r\ndef mynameis(arg, **context):\r\n\r\n    ti: TaskInstance = context[\"ti\"]\r\n    print(ti.task_id)\r\n    print(arg)\r\n\r\n\r\nwith DAG(\r\n    dag_id=\"my_name_is\",\r\n    start_date=datetime(1970, 1, 1),\r\n    schedule_interval=timedelta(days=30 * 365),\r\n) as dag:\r\n    mynameis.expand(arg=[\"slim\", \"shady\"])\r\n```\r\n\r\n<details>\r\n<summary>Outdated report here; no longer relevant</summary>\r\n\r\nWhen I unpause it, the scheduler crashes like so:\r\n```\r\n    ____________       _____________\r\n ____    |__( )_________  __/__  /________      __\r\n____  /| |_  /__  ___/_  /_ __  /_  __ \\_ | /| / /\r\n___  ___ |  / _  /   _  __/ _  / / /_/ /_ |/ |/ /\r\n _/_/  |_/_/  /_/    /_/    /_/  \\____/____/|__/\r\n[2022-03-27 21:48:45,682] {scheduler_job.py:712} INFO - Starting the scheduler\r\n[2022-03-27 21:48:45,683] {scheduler_job.py:717} INFO - Processing each file at most -1 times\r\n[2022-03-27 21:48:45,686] {executor_loader.py:106} INFO - Loaded executor: SequentialExecutor\r\n[2022-03-27 21:48:45,692] {manager.py:156} INFO - Launched DagFileProcessorManager with pid: 36986\r\n[2022-03-27 21:48:45,694] {scheduler_job.py:1242} INFO - Resetting orphaned tasks for active dag runs\r\n[2022-03-27 21:48:46,269] {settings.py:55} INFO - Configured default timezone Timezone('UTC')\r\n[2022-03-27 21:48:46,276] {manager.py:398} WARNING - Because we cannot use more than 1 thread (parsing_processes = 2) when using sqlite. So we set parallelism to 1.\r\n[2022-03-27 21:48:56,576] {dag.py:2931} INFO - Setting next_dagrun for my_name_is to 1999-12-25T00:00:00+00:00, run_after=2029-12-17T00:00:00+00:00\r\n[2022-03-27 21:48:56,618] {scheduler_job.py:354} INFO - 1 tasks up for execution:\r\n\t<TaskInstance: my_name_is.mynameis scheduled__1970-01-01T00:00:00+00:00 [scheduled]>\r\n[2022-03-27 21:48:56,618] {scheduler_job.py:376} INFO - Figuring out tasks to run in Pool(name=default_pool) with 128 open slots and 1 task instances ready to be queued\r\n[2022-03-27 21:48:56,619] {scheduler_job.py:434} INFO - DAG my_name_is has 0/16 running and queued tasks\r\n[2022-03-27 21:48:56,619] {scheduler_job.py:520} INFO - Setting the following tasks to queued state:\r\n\t<TaskInstance: my_name_is.mynameis scheduled__1970-01-01T00:00:00+00:00 [scheduled]>\r\n[2022-03-27 21:48:56,621] {scheduler_job.py:562} INFO - Sending TaskInstanceKey(dag_id='my_name_is', task_id='mynameis', run_id='scheduled__1970-01-01T00:00:00+00:00', try_number=1, map_index=-1) to executor with priority 1 and queue default\r\n[2022-03-27 21:48:56,622] {base_executor.py:88} INFO - Adding to queue: ['airflow', 'tasks', 'run', 'my_name_is', 'mynameis', 'scheduled__1970-01-01T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_name_is.py']\r\n[2022-03-27 21:48:56,623] {sequential_executor.py:59} INFO - Executing command: ['airflow', 'tasks', 'run', 'my_name_is', 'mynameis', 'scheduled__1970-01-01T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_name_is.py']\r\n[2022-03-27 21:48:57,229] {dagbag.py:506} INFO - Filling up the DagBag from /Users/matt/2022/03/27/dags/my_name_is.py\r\n[2022-03-27 21:48:57,405] {sequential_executor.py:66} ERROR - Failed to execute task Command '['airflow', 'tasks', 'run', 'my_name_is', 'mynameis', 'scheduled__1970-01-01T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_name_is.py']' returned non-zero exit status 1..\r\n[2022-03-27 21:48:57,407] {scheduler_job.py:615} INFO - Executor reports execution of my_name_is.mynameis run_id=scheduled__1970-01-01T00:00:00+00:00 exited with status failed for try_number 1\r\n[2022-03-27 21:48:57,420] {scheduler_job.py:659} INFO - TaskInstance Finished: dag_id=my_name_is, task_id=mynameis, run_id=scheduled__1970-01-01T00:00:00+00:00, map_index=-1, run_start_date=None, run_end_date=None, run_duration=None, state=queued, executor_state=failed, try_number=1, max_tries=0, job_id=None, pool=default_pool, queue=default, priority_weight=1, operator=_PythonDecoratedOperator, queued_dttm=2022-03-28 03:48:56.619831+00:00, queued_by_job_id=1, pid=None\r\n[2022-03-27 21:48:57,420] {scheduler_job.py:688} ERROR - Executor reports task instance <TaskInstance: my_name_is.mynameis scheduled__1970-01-01T00:00:00+00:00 [queued]> finished (failed) although the task says its queued. (Info: None) Was the task killed externally?\r\n[2022-03-27 21:48:57,421] {taskinstance.py:1785} ERROR - Executor reports task instance <TaskInstance: my_name_is.mynameis scheduled__1970-01-01T00:00:00+00:00 [queued]> finished (failed) although the task says its queued. (Info: None) Was the task killed externally?\r\n[2022-03-27 21:48:57,428] {scheduler_job.py:769} ERROR - Exception when executing SchedulerJob._run_scheduler_loop\r\nTraceback (most recent call last):\r\n  File \"/Users/matt/2022/03/27/venv/lib/python3.10/site-packages/airflow/jobs/scheduler_job.py\", line 753, in _execute\r\n    self._run_scheduler_loop()\r\n  File \"/Users/matt/2022/03/27/venv/lib/python3.10/site-packages/airflow/jobs/scheduler_job.py\", line 843, in _run_scheduler_loop\r\n    num_finished_events = self._process_executor_events(session=session)\r\n  File \"/Users/matt/2022/03/27/venv/lib/python3.10/site-packages/airflow/utils/session.py\", line 68, in wrapper\r\n    return func(*args, **kwargs)\r\n  File \"/Users/matt/2022/03/27/venv/lib/python3.10/site-packages/airflow/jobs/scheduler_job.py\", line 707, in _process_executor_events\r\n    ti.handle_failure(error=msg % (ti, state, ti.state, info), session=session)\r\n  File \"/Users/matt/2022/03/27/venv/lib/python3.10/site-packages/airflow/utils/session.py\", line 68, in wrapper\r\n    return func(*args, **kwargs)\r\n  File \"/Users/matt/2022/03/27/venv/lib/python3.10/site-packages/airflow/models/taskinstance.py\", line 1793, in handle_failure\r\n    task = self.task.unmap()\r\n  File \"/Users/matt/2022/03/27/venv/lib/python3.10/site-packages/airflow/models/mappedoperator.py\", line 456, in unmap\r\n    raise RuntimeError(\"Cannot unmap a deserialized operator\")\r\nRuntimeError: Cannot unmap a deserialized operator\r\n[2022-03-27 21:48:58,450] {process_utils.py:125} INFO - Sending Signals.SIGTERM to group 36986. PIDs of all processes in the group: [36986]\r\n[2022-03-27 21:48:58,450] {process_utils.py:80} INFO - Sending the signal Signals.SIGTERM to group 36986\r\n[2022-03-27 21:48:58,683] {process_utils.py:75} INFO - Process psutil.Process(pid=36986, status='terminated', exitcode=0, started='21:48:45') (36986) terminated with exit code 0\r\n[2022-03-27 21:48:58,684] {scheduler_job.py:780} INFO - Exited execute loop\r\n```\r\n\r\n</details>\r\n\r\nAfter some updates, this now fails with the following scheduler logs:\r\n\r\n```\r\n  ____________       _____________\r\n ____    |__( )_________  __/__  /________      __\r\n____  /| |_  /__  ___/_  /_ __  /_  __ \\_ | /| / /\r\n___  ___ |  / _  /   _  __/ _  / / /_/ /_ |/ |/ /\r\n _/_/  |_/_/  /_/    /_/    /_/  \\____/____/|__/\r\n[2022-03-28 08:40:44,195] {scheduler_job.py:712} INFO - Starting the scheduler\r\n[2022-03-28 08:40:44,196] {scheduler_job.py:717} INFO - Processing each file at most -1 times\r\n[2022-03-28 08:40:44,199] {executor_loader.py:106} INFO - Loaded executor: SequentialExecutor\r\n[2022-03-28 08:40:44,204] {manager.py:156} INFO - Launched DagFileProcessorManager with pid: 47735\r\n[2022-03-28 08:40:44,206] {scheduler_job.py:1242} INFO - Resetting orphaned tasks for active dag runs\r\n[2022-03-28 08:40:44,769] {settings.py:55} INFO - Configured default timezone Timezone('UTC')\r\n[2022-03-28 08:40:44,774] {manager.py:398} WARNING - Because we cannot use more than 1 thread (parsing_processes = 2)\r\nwhen using sqlite. So we set parallelism to 1.\r\n[2022-03-28 08:40:45 -0600] [47734] [INFO] Starting gunicorn 20.1.0\r\n[2022-03-28 08:40:45 -0600] [47734] [INFO] Listening at: http://0.0.0.0:8793 (47734)\r\n[2022-03-28 08:40:45 -0600] [47734] [INFO] Using worker: sync\r\n[2022-03-28 08:40:45 -0600] [47740] [INFO] Booting worker with pid: 47740\r\n[2022-03-28 08:40:45 -0600] [47741] [INFO] Booting worker with pid: 47741\r\n[2022-03-28 08:40:53,363] {dag.py:2930} INFO - Setting next_dagrun for my_name_is to 1999-12-25T00:00:00+00:00, run_af\r\nter=2029-12-17T00:00:00+00:00\r\n[2022-03-28 08:40:53,397] {scheduler_job.py:354} INFO - 1 tasks up for execution:\r\n        <TaskInstance: my_name_is.mynameis scheduled__1970-01-01T00:00:00+00:00 [scheduled]>\r\n[2022-03-28 08:40:53,397] {scheduler_job.py:376} INFO - Figuring out tasks to run in Pool(name=default_pool) with 128\r\nopen slots and 1 task instances ready to be queued\r\n[2022-03-28 08:40:53,397] {scheduler_job.py:434} INFO - DAG my_name_is has 0/16 running and queued tasks\r\n[2022-03-28 08:40:53,398] {scheduler_job.py:520} INFO - Setting the following tasks to queued state:\r\n        <TaskInstance: my_name_is.mynameis scheduled__1970-01-01T00:00:00+00:00 [scheduled]>\r\n[2022-03-28 08:40:53,400] {scheduler_job.py:562} INFO - Sending TaskInstanceKey(dag_id='my_name_is', task_id='mynameis\r\n', run_id='scheduled__1970-01-01T00:00:00+00:00', try_number=1, map_index=-1) to executor with priority 1 and queue de\r\nfault\r\n[2022-03-28 08:40:53,401] {base_executor.py:88} INFO - Adding to queue: ['airflow', 'tasks', 'run', 'my_name_is', 'myn\r\nameis', 'scheduled__1970-01-01T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_name_is.py']\r\n[2022-03-28 08:40:53,403] {sequential_executor.py:59} INFO - Executing command: ['airflow', 'tasks', 'run', 'my_name_i\r\ns', 'mynameis', 'scheduled__1970-01-01T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_name_is.py']\r\n[2022-03-28 08:40:54,061] {dagbag.py:506} INFO - Filling up the DagBag from /Users/matt/2022/03/27/dags/my_name_is.py\r\nTraceback (most recent call last):\r\n  File \"/Users/matt/2022/03/27/venv2/bin/airflow\", line 33, in <module>\r\n    sys.exit(load_entry_point('apache-airflow', 'console_scripts', 'airflow')())\r\n  File \"/Users/matt/src/astronomer-airflow/airflow/__main__.py\", line 38, in main\r\n    args.func(args)\r\n  File \"/Users/matt/src/astronomer-airflow/airflow/cli/cli_parser.py\", line 51, in command\r\n    return func(*args, **kwargs)\r\n  File \"/Users/matt/src/astronomer-airflow/airflow/utils/cli.py\", line 99, in wrapper\r\n    return f(*args, **kwargs)\r\n  File \"/Users/matt/src/astronomer-airflow/airflow/cli/commands/task_command.py\", line 362, in task_run\r\n    ti, _ = _get_ti(task, args.execution_date_or_run_id, args.map_index)\r\n  File \"/Users/matt/src/astronomer-airflow/airflow/utils/session.py\", line 71, in wrapper\r\n    return func(*args, session=session, **kwargs)\r\n  File \"/Users/matt/src/astronomer-airflow/airflow/cli/commands/task_command.py\", line 144, in _get_ti\r\n    raise RuntimeError(\"No map_index passed to mapped task\")\r\nRuntimeError: No map_index passed to mapped task\r\n[2022-03-28 08:40:54,233] {sequential_executor.py:66} ERROR - Failed to execute task Command '['airflow', 'tasks', 'ru\r\nn', 'my_name_is', 'mynameis', 'scheduled__1970-01-01T00:00:00+00:00', '--local', '--subdir', 'DAGS_FOLDER/my_name_is.p\r\ny']' returned non-zero exit status 1..\r\n[2022-03-28 08:40:54,235] {scheduler_job.py:615} INFO - Executor reports execution of my_name_is.mynameis run_id=sched\r\nuled__1970-01-01T00:00:00+00:00 exited with status failed for try_number 1\r\n[2022-03-28 08:40:54,245] {scheduler_job.py:659} INFO - TaskInstance Finished: dag_id=my_name_is, task_id=mynameis, ru\r\nn_id=scheduled__1970-01-01T00:00:00+00:00, map_index=-1, run_start_date=None, run_end_date=None, run_duration=None, st\r\nate=queued, executor_state=failed, try_number=1, max_tries=0, job_id=None, pool=default_pool, queue=default, priority_\r\nweight=1, operator=_PythonDecoratedOperator, queued_dttm=2022-03-28 14:40:53.398693+00:00, queued_by_job_id=1, pid=Non\r\ne\r\n[2022-03-28 08:40:54,246] {scheduler_job.py:688} ERROR - Executor reports task instance <TaskInstance: my_name_is.myna\r\nmeis scheduled__1970-01-01T00:00:00+00:00 [queued]> finished (failed) although the task says its queued. (Info: None)\r\nWas the task killed externally?\r\n[2022-03-28 08:40:54,247] {taskinstance.py:1785} ERROR - Executor reports task instance <TaskInstance: my_name_is.myna\r\nmeis scheduled__1970-01-01T00:00:00+00:00 [queued]> finished (failed) although the task says its queued. (Info: None)\r\nWas the task killed externally?\r\n[2022-03-28 08:40:54,255] {taskinstance.py:1277} INFO - Marking task as FAILED. dag_id=my_name_is, task_id=mynameis, e\r\nxecution_date=19700101T000000, start_date=, end_date=20220328T144054\r\n[2022-03-28 08:40:54,322] {dagrun.py:534} ERROR - Marking run <DagRun my_name_is @ 1970-01-01 00:00:00+00:00: schedule\r\nd__1970-01-01T00:00:00+00:00, externally triggered: False> failed\r\n[2022-03-28 08:40:54,323] {dagrun.py:594} INFO - DagRun Finished: dag_id=my_name_is, execution_date=1970-01-01 00:00:0\r\n0+00:00, run_id=scheduled__1970-01-01T00:00:00+00:00, run_start_date=2022-03-28 14:40:53.370452+00:00, run_end_date=20\r\n22-03-28 14:40:54.323434+00:00, run_duration=0.952982, state=failed, external_trigger=False, run_type=scheduled, data_\r\ninterval_start=1970-01-01 00:00:00+00:00, data_interval_end=1999-12-25 00:00:00+00:00, dag_hash=fb9f4777fcb737e19d3401\r\n99f9950b05\r\n[2022-03-28 08:40:54,325] {dagrun.py:774} WARNING - Failed to record first_task_scheduling_delay metric:\r\nlist index out of range\r\n[2022-03-28 08:40:54,326] {dag.py:2930} INFO - Setting next_dagrun for my_name_is to 1999-12-25T00:00:00+00:00, run_af\r\nter=2029-12-17T00:00:00+00:00\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/apache/airflow/issues/22561/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/airflow/issues/22561/timeline",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/apache/airflow/issues/22549",
        "repository_url": "https://api.github.com/repos/apache/airflow",
        "labels_url": "https://api.github.com/repos/apache/airflow/issues/22549/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/airflow/issues/22549/comments",
        "events_url": "https://api.github.com/repos/apache/airflow/issues/22549/events",
        "html_url": "https://github.com/apache/airflow/issues/22549",
        "id": 1182491789,
        "node_id": "I_kwDOAgUK285Ge2SN",
        "number": 22549,
        "title": "Status of testing of Apache Airflow 2.2.5rc3",
        "user": {
            "login": "ephraimbuddy",
            "id": 4122866,
            "node_id": "MDQ6VXNlcjQxMjI4NjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4122866?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ephraimbuddy",
            "html_url": "https://github.com/ephraimbuddy",
            "followers_url": "https://api.github.com/users/ephraimbuddy/followers",
            "following_url": "https://api.github.com/users/ephraimbuddy/following{/other_user}",
            "gists_url": "https://api.github.com/users/ephraimbuddy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ephraimbuddy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ephraimbuddy/subscriptions",
            "organizations_url": "https://api.github.com/users/ephraimbuddy/orgs",
            "repos_url": "https://api.github.com/users/ephraimbuddy/repos",
            "events_url": "https://api.github.com/users/ephraimbuddy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ephraimbuddy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 2245754668,
                "node_id": "MDU6TGFiZWwyMjQ1NzU0NjY4",
                "url": "https://api.github.com/repos/apache/airflow/labels/kind:meta",
                "name": "kind:meta",
                "color": "5319e7",
                "default": false,
                "description": "High-level information important to the community"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 11,
        "created_at": "2022-03-27T11:20:19Z",
        "updated_at": "2022-03-31T15:49:39Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Body\r\n\r\nWe have a kind request for all the contributors to the latest [Apache Airflow RC 2.2.5rc3](https://pypi.org/project/apache-airflow/2.2.5rc3/).\r\n\r\nCould you please help us to test the RC versions of Airflow?\r\n\r\nPlease let us know in the comment if the issue is addressed in the latest RC.\r\n\r\n- [ ] [Set X-Frame-Options header to DENY unless X_FRAME_ENABLED is set to true (#19491)](https://github.com/apache/airflow/pull/19491): @subkanthi @planoe-cloudera\r\n     Linked issues:\r\n     - [x_frame_enabled logic broken in Airflow 2 (#17255)](https://github.com/apache/airflow/issues/17255)\r\n- [ ] [Fix: Do not render undefined graph edges (#19684)](https://github.com/apache/airflow/pull/19684): @bbovenzi\r\n- [ ] [Fix Tasks getting stuck in scheduled state (#19747)](https://github.com/apache/airflow/pull/19747): @vapiravfif @tanelk\r\n     Linked issues:\r\n     - [Tasks get stuck in \"scheduled\" state and starved when dags with huge amount of tasks is scheduled (#19622)](https://github.com/apache/airflow/issues/19622)\r\n- [ ] [Rename `to_delete` to `to_cancel` in TriggerRunner (#20658)](https://github.com/apache/airflow/pull/20658): @dstandish\r\n- [ ] [Fix duplicate trigger creation race condition (#20699)](https://github.com/apache/airflow/pull/20699): @MatrixManAtYrService @dstandish\r\n     Linked issues:\r\n     - [TriggerEvent fires, and then defers a second time (doesn't fire a second time though). (#18392)](https://github.com/apache/airflow/issues/18392)\r\n     - [Track completed triggers until deleted from database (#19546)](https://github.com/apache/airflow/pull/19546)\r\n- [ ] [Truncate stack trace to DAG user code for exceptions raised during execution (#20731)](https://github.com/apache/airflow/pull/20731): @malthe\r\n- [ ] [fix: Update custom connection field processing (#20883)](https://github.com/apache/airflow/pull/20883): @mike-mcdonald\r\n     Linked issues:\r\n     - [Cannot edit custom fields on provider connections (#20839)](https://github.com/apache/airflow/issues/20839)\r\n- [ ] [Ensure clear_task_instances sets valid run state (#21116)](https://github.com/apache/airflow/pull/21116): @uranusjr @uplsh580\r\n     Linked issues:\r\n     - [Running airflow dags backfill --reset-dagruns <dag_id> -s  <execution_start_dt> -e <execution_end_dt> results in error when run twice.  (#21058)](https://github.com/apache/airflow/issues/21058)\r\n     - [Fix 'airflow dags backfill --reset-dagruns' errors when run twice (#21062)](https://github.com/apache/airflow/pull/21062)\r\n- [x] [Update `ExternalTaskSensorLink` to handle templated `external_dag_id` (#21192)](https://github.com/apache/airflow/pull/21192): @csp98 @josh-fell\r\n     Linked issues:\r\n     - [Webserver \"External DAG\" button on ExternalTaskSensor not working when dag_id is templated (#21183)](https://github.com/apache/airflow/issues/21183)\r\n- [ ] [A trigger might use a connection; make sure we mask passwords (#21207)](https://github.com/apache/airflow/pull/21207): @malthe\r\n- [ ] [Log traceback in trigger excs (#21213)](https://github.com/apache/airflow/pull/21213): @malthe\r\n- [ ] [Fix trigger dag redirect from task instance log view (#21239)](https://github.com/apache/airflow/pull/21239): @dstandish\r\n- [ ] [Fix race condition between triggerer and scheduler (#21316)](https://github.com/apache/airflow/pull/21316): @malthe\r\n- [ ] [Reduce DB load incurred by Stale DAG deactivation (#21399)](https://github.com/apache/airflow/pull/21399): @SamWheating\r\n- [ ] [Fix max_active_runs=1 not scheduling runs when min_file_process_interval is high (#21413)](https://github.com/apache/airflow/pull/21413): @ephraimbuddy\r\n- [ ] [Fix Resources __eq__ check (#21442)](https://github.com/apache/airflow/pull/21442): @pingzh\r\n- [ ] [Filter out default configs when overrides exist. (#21539)](https://github.com/apache/airflow/pull/21539): @xyu @ashb\r\n     Linked issues:\r\n     - [PR #18772 breaks `sql_alchemy_conn_cmd` config (#20092)](https://github.com/apache/airflow/issues/20092)\r\n     - [Don't bake ENV and _cmd into tmp config for non-sudo (#18772)](https://github.com/apache/airflow/pull/18772)\r\n- [ ] [Fix logging JDBC SQL error when task fails (#21540)](https://github.com/apache/airflow/pull/21540): @stijn-meersman @hubert-pietron @jyotsa09\r\n     Linked issues:\r\n     - [No SQL error shown when using the JDBC operator (#18482)](https://github.com/apache/airflow/issues/18482)\r\n     - [JDBC operator not logging errors (#16295)](https://github.com/apache/airflow/issues/16295)\r\n- [ ] [Dispose not used connection pool (#21565)](https://github.com/apache/airflow/pull/21565): @pingzh\r\n- [ ] [FIX: extends typing-extensions to be installed with python 3.8+ #21566 (#21567)](https://github.com/apache/airflow/pull/21567): @frankcash\r\n     Linked issues:\r\n     - [typing_extensions package isn't installed with apache-airflow-providers-amazon causing an issue for SqlToS3Operator (#21566)](https://github.com/apache/airflow/issues/21566)\r\n- [ ] [Disable default_pool delete on web ui (#21658)](https://github.com/apache/airflow/pull/21658): @chenglongyan\r\n- [ ] [Log exception in local executor (#21667)](https://github.com/apache/airflow/pull/21667): @uranusjr\r\n- [ ] [Correctly handle multiple '=' in LocalFileSystem secrets. (#21694)](https://github.com/apache/airflow/pull/21694): @kadai0308 @joeyberkovitz\r\n     Linked issues:\r\n     - [LocalFileSystem Secret Backend Bug (#21625)](https://github.com/apache/airflow/issues/21625)\r\n- [ ] [Fix stray order_by(TaskInstance.execution_date) (#21705)](https://github.com/apache/airflow/pull/21705): @uranusjr @TidesMind\r\n     Linked issues:\r\n     - [Airflow >= 2.2.0 execution date change is failing TaskInstance get_task_instances method and possibly others (#21656)](https://github.com/apache/airflow/issues/21656)\r\n- [ ] [Fix filesystem sensor for directories (#21729)](https://github.com/apache/airflow/pull/21729): @mixilchenko\r\n- [ ] [Fix graph autorefresh on page load (#21736)](https://github.com/apache/airflow/pull/21736): @bbovenzi\r\n- [ ] [Fix triggerer --capacity parameter (#21753)](https://github.com/apache/airflow/pull/21753): @thesuperzapper @msumit\r\n     Linked issues:\r\n     - [triggerer `--capacity` parameter does not work (#21752)](https://github.com/apache/airflow/issues/21752)\r\n- [ ] [Fix assignment of unassigned triggers (#21770)](https://github.com/apache/airflow/pull/21770): @jkramer-ginkgo\r\n- [ ] [Fix incorrect data provided to tries & landing times charts (#21928)](https://github.com/apache/airflow/pull/21928): @millin\r\n- [ ] [Fixed dask executor and tests (#22027)](https://github.com/apache/airflow/pull/22027): @subkanthi @potiuk\r\n     Linked issues:\r\n     - [Removes limitations from Dask dependencies (#22017)](https://github.com/apache/airflow/pull/22017)\r\n- [x] [Add the new Airflow Trove Classifier to setup.cfg (#22241)](https://github.com/apache/airflow/pull/22241): @potiuk\r\n- [ ] [Fix broken links to celery documentation (#22364)](https://github.com/apache/airflow/pull/22364): @davidhagens\r\n- [ ] [Add back celery intersphinx mapping (#22370)](https://github.com/apache/airflow/pull/22370): @kaxil\r\n- [x] [Replace timedelta.max with year long timdelta in test_manager (#22527)](https://github.com/apache/airflow/pull/22527): @potiuk\r\n- [ ] [Check and disallow a relative path for sqlite (#22530)](https://github.com/apache/airflow/pull/22530): @yenchenLiu\r\n\r\n\r\nThanks to all who contributed to the release (probably not a complete list!):\r\n@frankcash @yenchenLiu @bbovenzi @SamWheating @ephraimbuddy @csp98 @joeyberkovitz @planoe-cloudera @hubert-pietron @dstandish @stijn-meersman @jyotsa09 @kadai0308 @chenglongyan @pingzh @TidesMind @josh-fell @potiuk @ashb @mike-mcdonald @vapiravfif @thesuperzapper @msumit @xyu @uplsh580 @tanelk @subkanthi @uranusjr @jkramer-ginkgo @millin @malthe @mixilchenko @davidhagens @MatrixManAtYrService @kaxil\r\n\r\n### Committer\r\n\r\n- [X] I acknowledge that I am a maintainer/committer of the Apache Airflow project.",
        "reactions": {
            "url": "https://api.github.com/repos/apache/airflow/issues/22549/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/airflow/issues/22549/timeline",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/apache/airflow/issues/22548",
        "repository_url": "https://api.github.com/repos/apache/airflow",
        "labels_url": "https://api.github.com/repos/apache/airflow/issues/22548/labels{/name}",
        "comments_url": "https://api.github.com/repos/apache/airflow/issues/22548/comments",
        "events_url": "https://api.github.com/repos/apache/airflow/issues/22548/events",
        "html_url": "https://github.com/apache/airflow/pull/22548",
        "id": 1182482134,
        "node_id": "PR_kwDOAgUK2841G4oe",
        "number": 22548,
        "title": "Adding ArangoDB Provider",
        "user": {
            "login": "pateash",
            "id": 16856802,
            "node_id": "MDQ6VXNlcjE2ODU2ODAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/16856802?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pateash",
            "html_url": "https://github.com/pateash",
            "followers_url": "https://api.github.com/users/pateash/followers",
            "following_url": "https://api.github.com/users/pateash/following{/other_user}",
            "gists_url": "https://api.github.com/users/pateash/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pateash/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pateash/subscriptions",
            "organizations_url": "https://api.github.com/users/pateash/orgs",
            "repos_url": "https://api.github.com/users/pateash/repos",
            "events_url": "https://api.github.com/users/pateash/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pateash/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1697155831,
                "node_id": "MDU6TGFiZWwxNjk3MTU1ODMx",
                "url": "https://api.github.com/repos/apache/airflow/labels/area:providers",
                "name": "area:providers",
                "color": "d4c5f9",
                "default": false,
                "description": ""
            },
            {
                "id": 1769003317,
                "node_id": "MDU6TGFiZWwxNzY5MDAzMzE3",
                "url": "https://api.github.com/repos/apache/airflow/labels/area:dev-tools",
                "name": "area:dev-tools",
                "color": "ededed",
                "default": false,
                "description": ""
            },
            {
                "id": 1993586993,
                "node_id": "MDU6TGFiZWwxOTkzNTg2OTkz",
                "url": "https://api.github.com/repos/apache/airflow/labels/kind:documentation",
                "name": "kind:documentation",
                "color": "0030b5",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 20,
        "created_at": "2022-03-27T10:44:54Z",
        "updated_at": "2022-03-31T20:03:07Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/apache/airflow/pulls/22548",
            "html_url": "https://github.com/apache/airflow/pull/22548",
            "diff_url": "https://github.com/apache/airflow/pull/22548.diff",
            "patch_url": "https://github.com/apache/airflow/pull/22548.patch",
            "merged_at": null
        },
        "body": "closes: #17778 \r\n\r\n---\r\n## Description\r\n\r\nAdding ArangoDB provider based on Python SDK https://github.com/ArangoDB-Community/python-arango\r\n\r\nUsers can create their own custom operators leveraging the **ArangoDBHook**  directly \r\nor building their operator on **AQLOperator** by providing **result_processor**  method,\r\n\r\n```\r\noperator = AQLOperator(\r\n    task_id='aql_operator',\r\n    sql=\"FOR doc IN students \" \\\r\n        \"RETURN doc\",\r\n    dag=dag,\r\n    result_processor=lambda cursor: print([document[\"name\"] for document in cursor])\r\n)\r\n```\r\n\r\nSensor can be implemented by SQL\r\n\r\n```\r\nsensor = AQLSensor(\r\n    task_id=\"aql_sensor\",\r\n    sql=\"FOR doc IN students \" \\\r\n        \"FILTER doc.name == 'judy' \" \\\r\n        \"RETURN doc\",\r\n    timeout=60,\r\n    poke_interval=10,\r\n    dag=dag,\r\n)\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/apache/airflow/issues/22548/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/apache/airflow/issues/22548/timeline",
        "performed_via_github_app": null
    }
]